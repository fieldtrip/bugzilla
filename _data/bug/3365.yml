+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3365"
    creation_ts: 2017-10-21 07:03:00 +0200
    short_desc: invalid spm_bwlabel mex mac file under matlab2017b
    delta_ts: 2019-08-10 12:37:20 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: external
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: WONTFIX
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: a.stolk8
      +@name: Arjen Stolk
    assigned_to:
      +content: a.stolk8
      +@name: Arjen Stolk
    cc:
      - a.stolk8
      - g.flandin
      - j.schoffelen
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "18978"
        comment_count: "0"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-10-21 07:03:51 +0200
        thetext: "The spm_bwlabel mex mac file that works under MATLAB 2015b, no longer works under MATLAB 2017b. This is an SPM8 mex file (spm_bwlabel.mexmaci64). When replacing it with the SPM12 equivalent, all runs fine.\n\nHowever, it's seem impossible to enforce the use of SPM12 when calling ft_freqstatistics. When calling the following,\n  rmpath(spm('dir'));\n  ft_hastoolbox('spm12',1);\nthe same error shown below appears, suggesting it tried to use the SPM8 mexfile.\n\nProposed (untested) solution #1: allow the use of SPM12 (i.e. why does it still use spm8 if spm12 is explicitly added to the path?)\nProposed (untested) solution #2: fix/replace the spm8 mexfile by the spm12 mexfile. Potential downside is that this mexfile maybe not supports other MATLAB versions (@Guillaume?)\n\n\nThe error:\n\nWarning: adding /Users/arjsto/Documents/MATLAB/fieldtrip/external/spm8 toolbox to your MATLAB path \nInvalid MEX-file '/Users/arjsto/Documents/MATLAB/fieldtrip/external/spm8/spm_bwlabel.mexmaci64':\ndlopen(/Users/arjsto/Documents/MATLAB/fieldtrip/external/spm8/spm_bwlabel.mexmaci64, 6): Library not loaded: @loader_path/libmex.dylib\n  Referenced from: /Users/arjsto/Documents/MATLAB/fieldtrip/external/spm8/spm_bwlabel.mexmaci64\n  Reason: image not found.\n\nError in findcluster (line 87)\n    [labelmat(spatdimlev, :, :), num] = spm_bwlabel(double(reshape(onoff(spatdimlev, :, :), nfreq, ntime)), 6); % the previous code contained a '4' for input\n\nError in clusterstat (line 201)\n      posclusobs = findcluster(reshape(postailobs, [cfg.dim,1]),channeighbstructmat,cfg.minnbchan);\n\nError in ft_statistics_montecarlo (line 348)\n  [stat, cfg] = clusterstat(cfg, statrand, statobs);\n\nError in ft_freqstatistics (line 193)\n    [stat, cfg] = statmethod(cfg, dat, design);\n \n87      [labelmat(spatdimlev, :, :), num] = spm_bwlabel(double(reshape(onoff(spatdimlev, :, :), nfreq, ntime)), 6); % the previous code contained a '4' for input"
      - +@isprivate: "0"
        commentid: "18979"
        comment_count: "1"
        attachid: "850"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-10-21 07:05:12 +0200
        thetext: |-
          Created attachment 850
          test script
      - +@isprivate: "0"
        commentid: "18980"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-10-22 14:29:54 +0200
        thetext: did you use the cfg.spmversion option? By default that is spm8, you can specify spm12.
      - +@isprivate: "0"
        commentid: "18981"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-10-22 14:31:24 +0200
        thetext: I think you can also use 'spm8up', in which case it will be happy to find spm12 on the path.
      - +@isprivate: "0"
        commentid: "18982"
        comment_count: "4"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-10-23 02:06:49 +0200
        thetext: "Thanks, I didn't know one could use spmversion with stats functions as well. For a proof of concept,\n\n\ncfg.spmversion       = 'spm12';\nstat                 = ft_freqstatistics(cfg, A, B);\n\n\nWarning: adding /Users/arjsto/Documents/MATLAB/fieldtrip/external/spm12 toolbox to your MATLAB path \nfound 1 positive clusters in observed data\nfound 0 negative clusters in observed data\ncomputing clusters in randomization\ncomputing clusters in randomization 1000 from 1000\n\nusing a cluster-based method for multiple comparison correction\nthe returned probabilities and the thresholded mask are corrected for multiple comparisons\nthe call to \"ft_freqstatistics\" took 1 seconds and required the additional allocation of an estimated 9 MB"
      - +@isprivate: "0"
        commentid: "18983"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-10-23 06:16:59 +0200
        thetext: |-
          (In reply to Arjen Stolk from comment #4)

          You can only use it in stats functions as of recently, when I encountered the same issue as you.

          I have this in my startup.m

          global ft_default
          ft_default.spmversion = 'spm12'
          ft_defaults % this loads the rest of the defaults

          The global ft_default variable is always merged with the cfg of each FT function, so this ensures that all FT functions use spm12.
      - +@isprivate: "0"
        commentid: "18984"
        comment_count: "6"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-10-23 06:40:20 +0200
        thetext: Excellent, that is useful. I presume we're not making spm12 the default given that it it would produce potentially mismatching results in people unknowingly using spm8 before such a transition and spm12 after.
      - +@isprivate: "0"
        commentid: "18988"
        comment_count: "7"
        who:
          +content: g.flandin
          +@name: Guillaume
        bug_when: 2017-10-23 17:20:26 +0200
        thetext: Instead of copying the compiled MEX files from SPM12 to SPM8, I would recompile the SPM8 MEX files with MATLAB R2017a or R2017b. In my experience they are backward compatible with older MATLAB versions.
      - +@isprivate: "0"
        commentid: "18991"
        comment_count: "8"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-10-27 00:10:47 +0200
        thetext: Reopening this thread to discuss whether we should not recompile the spm8 files ourselves (or test/pull the ones contributed by Alan Bush, https://github.com/fieldtrip/fieldtrip/pull/555). If I understand correctly from Guillaume, compiling with v2017b would keep the files backward-compatible. Essentially, a bulk of the spm8-mex functionalities that are in fieldtrip have become inaccessible to those using v2017b (and perhaps also 2017a). From my limited but issue-free experience with using spm12 in v2017b, I cannot tell as of yet whether the spm12 mex files need recompilation too.
      - +@isprivate: "0"
        commentid: "18992"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-10-27 09:48:08 +0200
        thetext: "(In reply to Arjen Stolk from comment #8)\n\nWe currently have 5 platforms to worry about\n- win32\n- win64\n- linux32\n- linux64\n- osx64\n\nIdeally I would update the mex files  for all platforms, and if we can confirm that the mex files both work with 2017b and 2012b (i.e. 5 years old). \n\n\nThe only platform that is really easy to test for me is linux64: I have a script that kicks off the complete test batch on all possible MATLAB versions on our compute cluster. But for all other platforms that would be too heavy, so we should figure out a single (or a few) test scripts that should be sufficient and that do not take 12 hours of execution time in total. \n\nBut given that we don't have reports of problems on platforms other than OSX, I suppose that we should only consider that. For OSX I am a bit worried that there might be an interaction between MATLAB version and operating system version, since the system libraries will be different between OS versions. \n\nSee https://en.wikipedia.org/wiki/MacOS_version_history. I can test on El Captain 10.11.6. Who can test on newer OSX/MacOS versions?"
      - +@isprivate: "0"
        commentid: "18994"
        comment_count: "10"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2017-10-27 13:13:54 +0200
        thetext: I have a macbook pro running 10.12.6, but currently have only matlab2015b installed...
      - +@isprivate: "0"
        commentid: "18995"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-10-27 15:34:54 +0200
        thetext: "(In reply to Jan-Mathijs Schoffelen from comment #10)\n\nWe have the same license, so I could share my installed versions with you. In the past it worked fine to simply copy the MATLAB_xxx.app folder.\n\nThe only challenge is the size, together it is 16 GB. \n\nmac011> du -hs MATLAB_R20???.app\n4.5G\tMATLAB_R2012b.app\n 12G\tMATLAB_R2017b.app\n\nI propose we do that when we are both at the DCCN, by making a temp network share on my computer, or by doing an rsync in the terminal (i.e. I would type my ssh password on your computer at the start of the transfer)."
      - +@isprivate: "0"
        commentid: "18997"
        comment_count: "12"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-10-27 18:00:36 +0200
        thetext: |-
          Running the latest 10.12.6 as well, and v2015b and v2017b installed.

          Ehmm, quick check to make sure we're not reinventing the wheel: @Guillaume, does spm provide forward compatibility for spm8? That is, do you guys already have recompiled and tested the mex files in spm8 to make it compatible with v2017b (and earlier, on different platforms)? If so, that would make our lives a bit easier. :)
      - +@isprivate: "0"
        commentid: "19202"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-24 12:50:49 +0100
        thetext: "should we be updating the mex files?\n\nshould we include a warning in ft_hastoolbox, e.g. show something when it is called to add external/spm or external/gifti to the path. \n\nshould we be documenting this as a faq on the FT wiki? -> I opt for yes."
      - +@isprivate: "0"
        commentid: "19204"
        comment_count: "14"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-24 12:51:02 +0100
        thetext: '*** Bug 3402 has been marked as a duplicate of this bug. ***'
      - +@isprivate: "0"
        commentid: "19205"
        comment_count: "15"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-24 12:59:37 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #13)

          in terms of documentation we now have http://www.fieldtriptoolbox.org/tag/mex?do=showtag&tag=mex

          @Arjen, you want to add a FAQ on spm mex files?
      - +@isprivate: "0"
        commentid: "19207"
        comment_count: "16"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2018-01-24 17:53:34 +0100
        thetext: "should we be updating the mex files?\n> can we not fix the mex-files that we know of are throwing issues with the newer matlab versions (i.e. mexmaci64), rather than to preemptively recompile each and every mex-file that are possibly still fine? as for the spm8 mex-files on mac, it'd important to test the new ones on matlab v2017 and ad v2012 - just a note.\n\nshould we include a warning in ft_hastoolbox, e.g. show something when it is called to add external/spm or external/gifti to the path. \n> this would create another layer of things that need to be adjusted when update mex-files. it would be easy for the warning to become misaligned with the current state of the code\n\nshould we be documenting this as a faq on the FT wiki? -> I opt for yes.\n> such documentation should entail not only how to create standalone workarounds (recompiling) but also how those new mex-files can be tested (see above) in order to allow for the solution to be proposed on github"
      - +@isprivate: "0"
        commentid: "19209"
        comment_count: "17"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-24 18:06:46 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #16)

          From my usage tracking I can see that although 2017b seems the most used version (40% of the users), the majority of FT users is not using 2017b yet. There are multiple 2011a users (also recently). We have to live with this http://www.fieldtriptoolbox.org/development/guidelines/code#ensure_that_it_runs_on_older_matlab_versions so we need to find a strategy that does not piss of old-time users.

          perhaps make a fieldtrip/external/spm12-xxx
          perhaps make a fieldtrip/external/spm12-yyy

          with xxx and yyy being the MATLAB versions used for compilation?

          or we can make a faq like "if spm mex files fail, please delete the mex files, go to ftp.fieldtriptoolbox.org and download spm12-mexfiles-2017b.zip instead"

          Note that I have no reason to assume that the problem is limited to maci64. So the solution probably should be implemented for win32+win64 and linux32+64 as well.
      - +@isprivate: "0"
        commentid: "19210"
        comment_count: "18"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2018-01-24 18:19:32 +0100
        thetext: |-
          I think you have more insight and experience in this than I. There are also the known code differences between older and newer matlab versions, which we also cannot support in the form of say, separate ft_freqanalysis or subroutines therein?

          In terms of reproducibility of today's analyses in the near future (e.g. 5-10y) it would indeed be nice to have all possible versions of the toolbox being available still. However, things might become quite fragmented in that we would for instance also need a fieldtrip/external/spm12-zzz with matlab 2018? Seems there's a hard to judge tradeoff, from my perspective at least, between compatibility and efficiency..

          Either way, the solution needs to be such that the code can still easily be updated from a developer's perspective. Too many patches and versions with obscure and deter this process.
      - +@isprivate: "0"
        commentid: "19211"
        comment_count: "19"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-24 18:25:05 +0100
        thetext: "(In reply to Arjen Stolk from comment #18)\n\nthe code currently is compatible (tested and all) with 2012b. Even up to 2009b most of it runs. And keeping it compatible is not always easy. We have the code guidelines and fieldtrip/compat/matlabltxxxxx for less-than xxxxx version. All handled automagically inside Fieldtrip. \n\nBut external is *external* to fieldtrip. I want to draw the line somewhere w.r.t. me taking care of the code. I propose you simply document what you know on a FT FAQ and that you point to the spm mex files that Guillaume or other people from the SPM team provide.\n\nI wish we had something like https://www.npmjs.com for MATLAB..."
      - +@isprivate: "0"
        commentid: "19212"
        comment_count: "20"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2018-01-24 19:09:09 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #19)

          Expanded an already existing FAQ related to this. See the bottom of this wiki:

          http://www.fieldtriptoolbox.org/faq/matlab_complains_about_a_missing_or_invalid_mex_file_what_should_i_do
      - +@isprivate: "0"
        commentid: "19213"
        comment_count: "21"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2018-01-24 19:17:20 +0100
        thetext: On a more general note, replacing or recompiling (external) MEX files won't fool git? That is, this needs to be done each time again when one updates their git master branch, making it a not so preferred solution for developers and users that continually update their fieldtrip version. As for SPM8, the use of SPM12 is a favorable workaround that does not require replacing/recompiling files. But for the GIFTI MEX file, there's currently no alternative.
      - +@isprivate: "0"
        commentid: "19217"
        comment_count: "22"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-25 17:25:30 +0100
        thetext: "(In reply to Arjen Stolk from comment #21)\n\nif you replace your local mex files and do not want your difference to show up when you type git diff, you can add a \"fieldtrip/.gitignore\" file. You can also add the .gitignore file itself to the list of files that is to be ignored. \n\nYou can also maintain a full spm outside of fieldtrip. When you add that to your path prior to FT calling ft_hastoolbox(spm), it will prevail. In that case you can leave the  fieldtrip/external/spm as it is."
      - +@isprivate: "0"
        commentid: "19218"
        comment_count: "23"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2018-01-25 18:18:42 +0100
        thetext: Thanks. Though, I'd prefer to have fieldtrip complete and up-to-date rather than creating solutions around it just to support backward-compatibility to the stone age. But I guess there's fewer people using the latest software than the older..
      - +@isprivate: "0"
        commentid: "19456"
        comment_count: "24"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-09-21 10:16:08 +0200
        thetext: this is an SPM issue. The work-around for fieldtrip users is documented on http://www.fieldtriptoolbox.org/faq/matlab_complains_about_a_missing_or_invalid_mex_file_what_should_i_do#known_issues_with_spm_mex_files_and_workarounds
      - +@isprivate: "0"
        commentid: "19457"
        comment_count: "25"
        who:
          +content: g.flandin
          +@name: Guillaume
        bug_when: 2018-09-21 16:36:47 +0200
        thetext: |-
          MEX file issues should be resolved using the latest version of SPM12:
            https://github.com/spm/spm12
          or the maintenance version of SPM8:
            https://github.com/spm/spm8/tree/maint
          Otherwise, a recompilation is required. A Makefile is provided with SPM and instructions are available here:
            https://www.wikibooks.org/wiki/SPM#Installation
      - +@isprivate: "0"
        commentid: "19458"
        comment_count: "26"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-09-21 16:49:31 +0200
        thetext: |-
          (In reply to Guillaume from comment #25)

          thanks for the update, I added them all to http://www.fieldtriptoolbox.org/faq/matlab_complains_about_a_missing_or_invalid_mex_file_what_should_i_do#known_issues_with_spm_mex_files_and_workarounds
      - +@isprivate: "0"
        commentid: "20377"
        comment_count: "27"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:37:20 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "850"
      date: 2017-10-21 07:05:00 +0200
      delta_ts: 2017-10-21 07:05:12 +0200
      desc: test script
      filename: test_bug_3365.m
      type: text/x-matlab
      size: "1288"
      attacher:
        +content: a.stolk8
        +@name: Arjen Stolk
      data: REMOVED
