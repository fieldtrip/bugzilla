+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "637"
    creation_ts: 2011-05-04 13:36:00 +0200
    short_desc: ft_appenddata should be extended to also support appending timelock, freq and source data
    delta_ts: 2013-10-26 18:15:56 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: enhancement
    target_milestone: '---'
    blocked: "1021"
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - a.stolk8
      - b.reuderink
      - eelke.spaak
      - j.schoffelen
      - johanna.zumer
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "1972"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-04 13:36:31 +0200
        thetext: '... and it should work for trials and channels, just like now for raw data'
      - +@isprivate: "0"
        commentid: "2039"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-05-06 21:47:10 +0200
        thetext: |-
          Please use the functionality in ft_selectdata for this.

          As it stands at the moment, ft_selectdata is doing the following:

          -appending data (raw, timelock, freq, source), not only in the trial dimension but also in the channel or freq (and possibly even time) dimension.

          -selecting trials,channels,frequencies,timepoints, roi?

          -averaging across channels, frequencies, timepoints.

          Should we split the function in 3 parts?
      - +@isprivate: "0"
        commentid: "2042"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-09 09:31:30 +0200
        thetext: "interesting...\n\nUsers currently know of ft_appenddata for raw data. The name ft_selectdata does not suggest that one can append with it, nor that one can average with it. \n\nThe three functionalities are implementation-efficiency wise logical to have in one function, but towards the end user combining the three does not make sense.\n\nShould we go for\nft_appenddata\nft_appendtimelock(cfg, timelock1, timelock2, ...)\nft_appendfreq\nft_appendsource\nand\nft_averagetimelock(cfg, timelock1, timelock2, ...) \nft_averagefreq\nft_averagesource\n\nThe underlying functionality can remain in ft_selectdata, the functions above would act as entry points for the end-user.\n\nWhat do you think?"
      - +@isprivate: "0"
        commentid: "2043"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-05-09 09:36:36 +0200
        thetext: good plan.
      - +@isprivate: "0"
        commentid: "2068"
        comment_count: "4"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2011-05-11 09:28:46 +0200
        thetext: I tried using ft_selectdata to append timelock and freq structures, but ran into several bugs. Fixing one quickly led to another, and another..., so before I destroy (or fix :) ) the entire ft_selectdata function, maybe we should look at it together, JM?
      - +@isprivate: "0"
        commentid: "2070"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-05-11 10:31:48 +0200
        thetext: yes, please
      - +@isprivate: "0"
        commentid: "2071"
        comment_count: "6"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-05-11 10:35:57 +0200
        thetext: i should add that the appenddata functionality in ft_selectdata is relatively crude and certainly need improvement!
      - +@isprivate: "0"
        commentid: "2089"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-11 16:03:10 +0200
        thetext: |-
          A first implementation is finished, but not yet tested. Could any of you try it out?

          One aspect that requires careful consideration is dealing with sampleinfo and trialinfo: at the moment ft_appenddata explicitely deals with it, whereas I would expect for the three new functions that ft_selectdata takes care of it.

          manzana> svn commit ft_append*m
          Sending        ft_appenddata.m
          Adding         ft_appendfreq.m
          Adding         ft_appendsource.m
          Adding         ft_appendtimelock.m
          Transmitting file data ....
          Committed revision 3519.
      - +@isprivate: "0"
        commentid: "2128"
        comment_count: "8"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-05-15 20:39:55 +0200
        thetext: |-
          tested for freq and timelock data using test data on home common (ctf151).
          did not yet check trialinfo handling etc.
      - +@isprivate: "0"
        commentid: "2139"
        comment_count: "9"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2011-05-17 13:05:40 +0200
        thetext: "I tried ft_appendsource on some source data computed a few months ago: LCMV source data which were two different conditions, so the output is now 'rpt_pos' with rpt = 2, and dim is [2 27 22 22].\n\nHad to modify call to ft_selectdata to include (varargin{:},'param',{'pow'})  (committed)\n\nPerhaps this should be a cfg option into ft_appendsource (i.e. which param to use)?  since ft_selectdata says that it can only operate on one dimension at a time for source data. \n\nand later (line 76) Ndata does not exist, so I replaced with numel(varargin) (committed)\n\nCould it be possible to allow for varargin to either be a list\nft_appendsource(cfg,source1,source2,..)  % as it currently is\nOR\nft_appendsource(cfg,source)  % where source is array of source{1}, source{2}, etc?"
      - +@isprivate: "0"
        commentid: "2142"
        comment_count: "10"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-17 13:47:34 +0200
        thetext: |-
          > Could it be possible to allow for varargin to either be a list
          > ft_appendsource(cfg,source1,source2,..)  % as it currently is
          > OR
          > ft_appendsource(cfg,source)  % where source is array of source{1}, source{2},
          > etc?

          it should be specified as the 1st option, not as the second. Inside ft_appendsource you want varargin{1} to be a struct and not a cell-array with structs.
      - +@isprivate: "0"
        commentid: "3029"
        comment_count: "11"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2011-09-01 15:10:24 +0200
        thetext: |-
          ft_appendtimelock does not yet work properly (or at all).

          I've tried to append two timelock structures each containing all trials (ft_timelockanalysis with keeptrials = yes).

          First it tries to check the data with ft_checkdata at line 59 and option 'hassampleinfo' set to 'ifmakessense'. This throws an error at the low level in the istrue function; 'could not determine whether "ifmakessense" should be interpreted as true or false'

          Removing this hassampleinfo check, throws another error at ft_selectdata (line 63 of ft_appendtimelock), where it tries to refer to the non-existent field 'avg'. Naturally, this is not present in a timelock structure. I'm not sure why this is needed in the first place.

          I think both these problems need fixing for ft_appendtimelock to work.
      - +@isprivate: "0"
        commentid: "3031"
        comment_count: "12"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2011-09-01 16:23:13 +0200
        thetext: |-
          (In reply to comment #11)
          > ft_appendtimelock does not yet work properly (or at all).
          > I've tried to append two timelock structures each containing all trials
          > (ft_timelockanalysis with keeptrials = yes).
          > First it tries to check the data with ft_checkdata at line 59 and option
          > 'hassampleinfo' set to 'ifmakessense'. This throws an error at the low level in
          > the istrue function; 'could not determine whether "ifmakessense" should be
          > interpreted as true or false'
          > Removing this hassampleinfo check, throws another error at ft_selectdata (line
          > 63 of ft_appendtimelock), where it tries to refer to the non-existent field
          > 'avg'. Naturally, this is not present in a timelock structure. I'm not sure why
          > this is needed in the first place.
          > I think both these problems need fixing for ft_appendtimelock to work.

          Okay, I figured out what complicated factor was causing all this trouble. Turned out I was trying to appendtimelock preproccessed data instead of timelocked data.... sorry...

          ft_appendtimelock works fine.
      - +@isprivate: "0"
        commentid: "11528"
        comment_count: "13"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2013-10-09 16:34:13 +0200
        thetext: |-
          The functions

          ft_appendtimelock, ft_appendfreq and ft_appendsource (?) have been created. I suggest to close this bug, and create new bugs pertaining to buggy functionality of the specific functions, if needed.
