+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2022"
    creation_ts: 2013-03-01 12:16:00 +0100
    short_desc: nanmean and nansum .mex files bug crashes matlab
    delta_ts: 2014-01-29 13:28:37 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: Other
    op_sys: Linux
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: critical
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: hanneke.p.van.dijk
      +@name: Hanneke van Dijk
    assigned_to:
      +content: eelke.spaak
      +@name: Eelke Spaak
    cc:
      - eelke.spaak
      - j.schoffelen
      - johanna.zumer
      - jorn
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "9605"
        comment_count: "0"
        attachid: "430"
        who:
          +content: hanneke.p.van.dijk
          +@name: Hanneke van Dijk
        bug_when: 2013-03-01 12:16:22 +0100
        thetext: |-
          Created attachment 430
          crashdump file

          I found the error in utilities/private/ when running statistics with averaging over freqs and time.

          In nanmean.m we discovered that there is a t where there should be an x (because there is no t in the input, or it was the other way around). What's wrong with nansum I don't remember anymore, but the documentation is copied from nanmean and is not explaining nansum. When we fix the t and x error in the nanmean.m and remove the .mex files for nanmean and nansum, statistics (with averaging over freqs and time) runs perfectly.

          I have included the matlab_crash dump

          Groetjes Hanneke
      - +@isprivate: "0"
        commentid: "9606"
        comment_count: "1"
        who:
          +content: hanneke.p.van.dijk
          +@name: Hanneke van Dijk
        bug_when: 2013-03-01 12:17:12 +0100
        thetext: By the way we are running matlabR2012b.
      - +@isprivate: "0"
        commentid: "9607"
        comment_count: "2"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2013-03-01 12:24:03 +0100
        thetext: |-
          see bug 2011.   does that answer it for you?
          What system are you running on?
      - +@isprivate: "0"
        commentid: "10015"
        comment_count: "3"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-04-05 11:22:01 +0200
        thetext: '*** Bug 2072 has been marked as a duplicate of this bug. ***'
      - +@isprivate: "0"
        commentid: "10100"
        comment_count: "4"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-04-16 14:10:48 +0200
        thetext: |-
          (In reply to comment #2)
          this is a different error

          I'm marking this as higher importance, we should really fix those mexfiles.
      - +@isprivate: "0"
        commentid: "10119"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2013-04-17 14:25:21 +0200
        thetext: "discussed in FT-meeting: \n-revert back to JM's version of the c-code, which seemed a bit more stable.\n-address remaining issues in this code (e.g. dealing with booleans)."
      - +@isprivate: "0"
        commentid: "10371"
        comment_count: "6"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-05-02 15:37:21 +0200
        thetext: |-
          This should now be fixed (revision 8086/8087). I reverted to the last well-working mex files, and improved them a bit. Specifically, whenever input is not single or double precision float, but still numeric/char/logical, the builtin non-nan variant of the command is called. This is safe, because only doubles or singles can ever be nan, nan is not a possible value for logical or char.

          Note that I have only compiled for Linux 64-bit. Other platforms still need to be done. Jörn, could you help for Windows 32/64? And Robert for Mac 32/64?
      - +@isprivate: "0"
        commentid: "10372"
        comment_count: "7"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-05-02 15:37:55 +0200
        thetext: |-
          (In reply to comment #6)
          And of course, forgot to mention, nan is also not a possible value for all the int/uint types.
      - +@isprivate: "0"
        commentid: "10373"
        comment_count: "8"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2013-05-03 08:02:16 +0200
        thetext: working on it - does this also count for all nan* file (I saw that they all got deleted from svn)?
      - +@isprivate: "0"
        commentid: "10374"
        comment_count: "9"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2013-05-03 08:20:49 +0200
        thetext: I added nanmean, nanstd and nanvar. I am not sure about others like nannumel, nanvar_base, nanaccum. Let me know if they need to be added.
      - +@isprivate: "0"
        commentid: "10375"
        comment_count: "10"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-05-03 08:34:26 +0200
        thetext: |-
          (In reply to comment #9)
          Great! I deleted nanvar_base, nanaccum, and nannumel, as they were only helper functions for Boris' implementation of the end-user nan* functions.
      - +@isprivate: "0"
        commentid: "10381"
        comment_count: "11"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-05-04 12:42:37 +0200
        thetext: |-
          (In reply to comment #9)
          Could you also do nansum? Danke!
      - +@isprivate: "0"
        commentid: "12661"
        comment_count: "12"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2014-01-29 13:28:37 +0100
        thetext: changing lots of bugs from resolved to closed.
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "430"
      date: 2013-03-01 12:16:00 +0100
      delta_ts: 2013-03-01 12:16:22 +0100
      desc: crashdump file
      filename: matlab_crash_dump.15347-1
      type: application/octet-stream
      size: "11232"
      attacher:
        +content: hanneke.p.van.dijk
        +@name: Hanneke van Dijk
      data: REMOVED
