+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "360"
    creation_ts: 2011-01-05 14:03:00 +0100
    short_desc: fix the umask problem with the public peerslaves
    delta_ts: 2011-02-23 13:51:09 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: peer
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: INVALID
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: simon.oosthoek
      +@name: Simon Oosthoek
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "935"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-05 14:03:27 +0100
        thetext:
      - +@isprivate: "0"
        commentid: "982"
        comment_count: "1"
        who:
          +content: simon.oosthoek
          +@name: Simon Oosthoek
        bug_when: 2011-01-12 10:22:31 +0100
        thetext: |-
          Dit is de input die ik van Marcel Zwiers kreeg:
          Hoi Simon,

          Ik heb inmiddels ontdekt dat het aan de matlab-shell ligt. Ik krijg nml de gewenste directory als ik een directory het volgende doe:
          su public
          [public]
          umask 0000
          mkdir test_su

          Maar niet als ik in Matlab ditzelfde via p2p doe mbv van de matlab-functie 'mkdir':
          >> >>peercellfun('mkdir',{'test_matlab'})

          Maar als ik in Matlab ditzelfde via p2p doe mbv van een directe unix-call naar 'mkdir' gaat het wel goed:
          >> >>peercellfun('unix',{'mkdir test_unix'})

          Blijft maf dat Matlab de environment verandert, maar hiermee kan ik leven.

          Groet,
          Marcel.

          Voor zover ik weet starten de peerslaves op met een umask 0000 (umask -S a=rwx), zodat alle matlabs door peerslave opgestart ook die umask zouden moeten hebben. Als dat niet zo is, doet matlab wat raars met de umask of vraag matlab niet standaard rw-rw-rw- voor files en rwxrwxrwx voor directories, wat normale processen wel doen. Het umask is alleen een filter, niet een ondergrens.

          Om te zorgen dat files gecreeerd door peerslaves te verwijderen zijn door de eigenaar van de peermaster zou je bij elke job een chmod -R a+rwX kunnen doen op de directories (en files erin) die aangemaakt zijn door peerslaves.
      - +@isprivate: "0"
        commentid: "1400"
        comment_count: "2"
        who:
          +content: simon.oosthoek
          +@name: Simon Oosthoek
        bug_when: 2011-02-09 14:21:07 +0100
        thetext: problem appears to be possible to live with.
      - +@isprivate: "0"
        commentid: "1496"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-02-23 13:51:09 +0100
        thetext: I closed all bugs that were in the RESOLVED/FIXED or otherwise RESOLVED state.
