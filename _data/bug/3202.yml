+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3202"
    creation_ts: 2016-11-03 18:03:00 +0100
    short_desc: improve support for Tucker Davis Technologies (TDT) files
    delta_ts: 2019-08-10 12:40:40 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: fileio
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: WONTFIX
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: a.stolk8
      +@name: Arjen Stolk
    assigned_to:
      +content: a.stolk8
      +@name: Arjen Stolk
    cc:
      - j.schoffelen
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "17926"
        comment_count: "0"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-11-03 18:03:51 +0100
        thetext: "There's a host of low-level reading functions in fileio/private (read_tdt_xxx), yet ft_read_header mentions the filetype is not supported (l. 2175, reproduced below for convenience). \n\nread_tdt_tsq seems able to read the (unstructured) header, and read_tdt_tev is able to read the data. But how far is this code? Is it just a matter or (re-)structuring the header and data in ft_read_header, or do the need low-level functionalities more testing? And who from the ESI in Frankfurt (as suggested in the code) is looking at this?\n\n\n\ncase {'tdt_tsq', 'tdt_tev'}\n    % FIXME the code below is not yet functional, it requires more input from the ESI in Frankfurt\n    %     tsq = read_tdt_tsq(headerfile);\n    %     k = 0;\n    %     chan = unique([tsq.channel]);\n    %     % loop over the physical channels\n    %     for i=1:length(chan)\n    %       chansel = [tsq.channel]==chan(i);\n    %       code = unique({tsq(chansel).code});\n    %       % loop over the logical channels\n    %       for j=1:length(code)\n    %         codesel = false(size(tsq));\n    %         for k=1:numel(codesel)\n    %           codesel(k) = identical(tsq(k).code, code{j});\n    %         end\n    %         % find the first instance of this logical channel\n    %         this = find(chansel(:) & codesel(:), 1);\n    %         % add it to the list of channels\n    %         k = k + 1;\n    %         frequency(k) = tsq(this).frequency;\n    %         label{k}     = [char(typecast(tsq(this).code, 'uint8')) num2str(tsq(this).channel)];\n    %         tsqorig(k)   = tsq(this);\n    %       end\n    %     end\n    error('not yet implemented');"
      - +@isprivate: "0"
        commentid: "17927"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-11-04 08:44:41 +0100
        thetext: "this is what the log tells me\n\ncommit 6ae53d0816b8b241aa529d3fee41e5a2c1a448d3\nAuthor: Robert Oostenveld <r.oostenveld@gmail.com>\nDate:   Thu Nov 25 08:17:48 2010 +0000\n    added some reading functions for TDT files, not all are fully implemented\n    git-svn-id: svn+ssh://svn.fcdonders.nl/home/svnroot/fieldtrip/trunk@2183 0cf7c7f0-3615-4144-b4e6-68da3bce3cd0\n\ncommit 0f15e0c7cec9c40f06d396328c39e031365e851e\nAuthor: Robert Oostenveld <r.oostenveld@gmail.com>\nDate:   Thu Nov 25 08:14:24 2010 +0000\n    some improvements for reading TDT *.tsq files\n    git-svn-id: svn+ssh://svn.fcdonders.nl/home/svnroot/fieldtrip/trunk@2180 0cf7c7f0-3615-4144-b4e6-68da3bce3cd0\n\nI wrote these functions when Pascal got a TDT system at the ESI, but then it took ages for them to actually start recording with it. And actually I don't even know whether they ever recorded with it.\n\nA bit similar with the Neuralynx and Plexon system: there are multiple file formats and some of them are quite messy. The TDT system (and file formats) are not designed to be processed with non-TDT software. The overall idea in the TDT acquisition and analysis software is to deal with the data like a database. If memory serves me well, the TBK and TDX files are related to the indexing of the data in the files.   \n\nIn general: storing spike data in files is hard, as the spikes don't come in regularly. That makes a spike file a collection of \"random\" snippets from many different channels. That feature also tends to be reflected in the other (continuous) file formats of companies that work with spike data.\n\nWhat are exactly the files that you have?"
      - +@isprivate: "0"
        commentid: "17938"
        comment_count: "2"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-11-04 23:07:36 +0100
        thetext: "(In reply to Robert Oostenveld from comment #1)\n\nThanks for digging that up, and the history of this functionality. \n\nThe tdt data here pertains to ECoG recordings, if that makes any difference. The data of the individual channels are also stored in separate matfiles. Would prefer to stay as close as possible to the original data, but could work with those mat files otherwise. Any idea whether it's worth looking further into the tdt format (e.g. is it still being used)?"
      - +@isprivate: "0"
        commentid: "17939"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-11-05 09:18:33 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #2)

          mat files are not native TDT. What is the extension of the other files you have?
      - +@isprivate: "0"
        commentid: "17945"
        comment_count: "4"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-11-05 17:04:11 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #3)
          .Tbk, .Tdx, .tev, .tsq
      - +@isprivate: "0"
        commentid: "17992"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-11-21 16:36:05 +0100
        thetext: |-
          did you try this http://www.tdt.com/files/manuals/OpenDeveloper_Manual.pdf, which is from here http://www.tdt.com/user-manuals.html

          it is windows only, uses ActiveX. But it includes examples.
      - +@isprivate: "0"
        commentid: "17993"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-11-21 16:42:58 +0100
        thetext: "(In reply to Arjen Stolk from comment #4)\n\nthere is documentation on \nhttp://jaewon.mine.nu/jaewon/2010/10/04/how-to-import-tdt-tank-into-matlab/\nand\nhttp://span.readthedocs.io/en/latest/tdt.html\n\nAs I understand it, it is like this\n\n.Tbk -> ?\n.Tdx -> ?\n.tev -> continuous data\n.tsq -> events\n\nFor the tev and tsq the code is explicit enough. But for those there are also the FT implementations...\n\ncould you be more explicit of what the desired outcome of this bug report would be?"
      - +@isprivate: "0"
        commentid: "17994"
        comment_count: "7"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-11-21 18:05:37 +0100
        thetext: Thanks for delving into this. The outcome, with no strong preference really, would be either 'yes, we activate the currently built in support' or 'no, it's not yet reliable enough'.
      - +@isprivate: "0"
        commentid: "17995"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-11-22 08:46:24 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #7)

          If the current code works, we should "yes" enable it in the high level interface. Since not everything works, it should also be documented what does and what not. The "tank" dataset format is difficult enough as it is. Can you share a dataset with me?
      - +@isprivate: "0"
        commentid: "17999"
        comment_count: "9"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-11-22 18:09:09 +0100
        thetext: "Thanks. The data is on its way to you. I included the TDT 4 files. \n\nAs a side note, the data is about 10 years old. Hopefully it's representative for newer data as well."
      - +@isprivate: "0"
        commentid: "18912"
        comment_count: "10"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2017-09-05 08:49:03 +0200
        thetext: This is no priority for anyone I think.
      - +@isprivate: "0"
        commentid: "20222"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:34:30 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
      - +@isprivate: "0"
        commentid: "20421"
        comment_count: "12"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:40:40 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
