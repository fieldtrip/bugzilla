+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3029"
    creation_ts: 2015-12-15 21:03:00 +0100
    short_desc: 'ft_sourceanalysis: failure when using ''dics'' as method with fourier input'
    delta_ts: 2019-08-10 12:32:41 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    assigned_to: fieldtriptoolbox
    cc:
      - David.pedrosa
      - jens.klinzing
      - johanna.zumer
      - v13junk
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "16544"
        comment_count: "0"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-12-15 21:03:10 +0100
        thetext: |-
          probably PCC is affected as well. Surprising that no one has noticed this before, because it seems to be due to the revamped prepare_freq_matrices.

          Diagnosis: if 'dics' is used, without too many toeters en bellen in the cfg to ft_sourceanalysis, prepare_freq_matrices returns an NchanxNchan cad-matrix, but an Ntrials that reflects the number of trials in the input data. This is due to the cfg.keeptrials is set to 'no' in ft_sourceanalysis, which is inherited by prepare_freq_matrices, while the default (and required value) in prepare_freq_matrices is 'yes'.
      - +@isprivate: "0"
        commentid: "16803"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-11 08:55:07 +0100
        thetext: |-
          Added comment: it seems that the refchan handling in ft_sourceanalysis for DICS fails as well.

          This has been reported by David Pedrosa.

          Course of action:
          -create a git branch for this bug.
          -write a test function to reproduce the problem.
          -fix it.
          -merge the branch into the main repo.
      - +@isprivate: "0"
        commentid: "16804"
        comment_count: "2"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-11 11:25:57 +0100
        thetext: |-
          I have created a separate branch in my local version of the repo.
          The test function now reproduces part of the problems.
      - +@isprivate: "0"
        commentid: "16805"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-11 11:34:18 +0100
        thetext: 'Just playing around a bit to get more fluent using git: I pushed the branch bug3029 to my schoffelen/fieldtrip.git repo, so that other people can check out what''s happening there.'
      - +@isprivate: "0"
        commentid: "16815"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-15 11:41:56 +0100
        thetext: |-
          Hi eavesdroppers!

          I have pushed a branch to my fieldtrip repository on github.com/schoffelen/fieldtrip.git, called bug3029.
          I think I fixed the issues. I would appreciate if you could test this by merging this branch into your local fieldtrip clone and try it out, before I 'pull request' it to fieldtrip/fieldtrip.
      - +@isprivate: "0"
        commentid: "16816"
        comment_count: "5"
        who:
          +content: David.pedrosa
          +@name: David Pedrosa
        bug_when: 2016-02-15 11:52:05 +0100
        thetext: |-
          Thanks for the (fast) effort! Will try your modified code today and comment about the results.

          Best,
          David
      - +@isprivate: "0"
        commentid: "16832"
        comment_count: "6"
        who:
          +content: v13junk
          +@name: R Seymour
        bug_when: 2016-02-16 14:16:38 +0100
        thetext: "Thanks Jan-Mathijs. I tried this out and it went past the reshape error.. but then when I tried to do whole-brain coherence I encountered some memory issues (although this could be due to my PC!). \n\nRob"
      - +@isprivate: "0"
        commentid: "16836"
        comment_count: "7"
        who:
          +content: David.pedrosa
          +@name: David Pedrosa
        bug_when: 2016-02-17 11:07:34 +0100
        thetext: "Dear Jan-Mathijs, \n\nit works for my data. Thanks again.\n\nBest,\nDavid"
      - +@isprivate: "0"
        commentid: "16837"
        comment_count: "8"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-17 12:54:06 +0100
        thetext: OK, thanks for the feedback both. I have merged this branch now with fieldtrip/fieldtrip and removed the bug3029 branch.
      - +@isprivate: "0"
        commentid: "17778"
        comment_count: "9"
        who:
          +content: jens.klinzing
          +@name: Jens Klinzing
        bug_when: 2016-09-08 17:45:32 +0200
        thetext: "I am not sure if this is the intended behavior but calling ft_sourceanalysis with fourier input still leads to an error if cfg.rawtrial = 'yes' and (by default:) cfg.keeptrials = 'no'. \n\nThe reason is clear already from the above discussion but let me quickly repeat: In ft_sourceanalysis, line 488 (in the case of cfg.method = 'dics') a call is made to prepare_freq_matrices and there, starting from line 77 - in case no crsspctrm present and cfg.keeptrials = 'no' - ft_checkdata is called with a desired output of 'fullfast' instead of 'full'. This leads to an output of only one trial. This is different for data containing a cross spectrum, this is why I think its an unexpected behavior.\n\nHaving only one trial leads to an error later in ft_sourceanalysis line 555 (due to the combination of Ntrials = 1 and cfg.rawtrial = 'yes').\n\nMaybe I'm also a bit confused about the meaning of rawtrial vs. keeptrials. The tutorial on common filters tells the user to use rawtrial = 'yes' (not keeptrials) and that also leads to trial information in the output (just not for fourier input)."
      - +@isprivate: "0"
        commentid: "17780"
        comment_count: "10"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-09-08 21:18:25 +0200
        thetext: does it work with method = 'pcc'?
      - +@isprivate: "0"
        commentid: "17782"
        comment_count: "11"
        who:
          +content: jens.klinzing
          +@name: Jens Klinzing
        bug_when: 2016-09-10 14:24:43 +0200
        thetext: |-
          (In reply to Jan-Mathijs Schoffelen from comment #10)

          No, PCC seems to do exactly the same, again leading to an error in line 555.
      - +@isprivate: "0"
        commentid: "17783"
        comment_count: "12"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-09-12 09:15:00 +0200
        thetext: "OK, @Jens: I suggest to make this into a separate bug, including Robert on the CC list.\n\nThe problem can be circumvented by calling ft_sourceanalysis twice.  The first time around with cfg.keepfilter = 'yes', and not asking for individual trials, the second time can then be called with the appropriate cfg, where I always forget whether it should be cfg.singletrial/rawtrial/keeptrials or some appropriate combination thereof. I typically compute the single trial power by hand, due to the computational clunkiness of the FT code.\n\nMy suggestion would be, to clean up the deprecated stuff related to rawtrial/singletrial/keeptrials (I believe that even the original 'rawtrial' functionality does not work with a hard coded error in the code), so that the options behave as the user would expect.\n\nTo this end I would ask you to get started on the following:\n-create a new bug out of this\n-make a branch on git, so that we can start working on this \n-make a description of the preferred solution\n-discuss what needs to be done code-wise to get to this solution\n-implement it"
      - +@isprivate: "0"
        commentid: "20144"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:32:41 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
