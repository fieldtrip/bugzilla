+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3205"
    creation_ts: 2016-11-07 13:10:00 +0100
    short_desc: Expand ft_eletroderealign with the functionality of inward/outward shifting of electrode positions.
    delta_ts: 2019-08-10 12:41:18 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: s.homolle
      +@name: Simon
    assigned_to:
      +content: s.homolle
      +@name: Simon
    cc: r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "17951"
        comment_count: "0"
        who:
          +content: s.homolle
          +@name: Simon
        bug_when: 2016-11-07 13:10:28 +0100
        thetext: "Expand ft_eletroderealign with the functionality of inward/outward shifting of electrode positions. \n\nThinking of general function to do the shifting to maintain consistency with i.e. ft_prepare_sourcemodel where also inward/outwardshifts are done."
      - +@isprivate: "0"
        commentid: "17959"
        comment_count: "1"
        who:
          +content: s.homolle
          +@name: Simon
        bug_when: 2016-11-10 15:36:49 +0100
        thetext: |-
          I tried an inward/outward shift of the /template/electrodes/standard_1020.elc with the following code:

          function [pos] = moveinward(pos, move)
          %This functions moves 'pos' inward according to their normals by 'move'
          %units
          propos = elproj(pos);
          tri = delaunay(propos);
          nor = normals(pos,tri);
          pos = pos-move*nor;
          end

          First we need to get rid of the 3rd dimension to assure that delaunay gives us an triangulation that is not closed at the bottom part of the electrode set. This prevents that the normals for the lower electrodes are biased by a flat triangulation of the lower part.

          However, this does not work for all electrodes of the standard_1020.elc as after projection their location isn't unique anymore.
      - +@isprivate: "0"
        commentid: "17982"
        comment_count: "2"
        who:
          +content: s.homolle
          +@name: Simon
        bug_when: 2016-11-17 12:44:30 +0100
        thetext: 'Opened PR: https://github.com/fieldtrip/fieldtrip/pull/264'
      - +@isprivate: "0"
        commentid: "18390"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-02-08 23:03:48 +0100
        thetext: I have merged https://github.com/fieldtrip/fieldtrip/pull/264
      - +@isprivate: "0"
        commentid: "20265"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:35:05 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
      - +@isprivate: "0"
        commentid: "20465"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:41:18 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
