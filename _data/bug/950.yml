+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "950"
    creation_ts: 2011-09-12 11:35:00 +0200
    short_desc: ft_megrealign does not properly take balancing into account
    delta_ts: 2011-12-07 16:00:25 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: critical
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc: b.reuderink
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "3129"
        comment_count: "0"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-09-12 11:35:50 +0200
        thetext: at some point the gradiometer structure and the volume conductor model are processed by prepare_headmodel (which  is a wrapper around ft_prepare_vol_sens), where only the MEG sensor coils are kept. Apart from this being not entirely correct (e.g. 3d order gradient balancing) it causes a crash when later on in the function some plotting is done (due to a crash in channelposition)
      - +@isprivate: "0"
        commentid: "4010"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-11-15 10:08:29 +0100
        thetext: |-
          ft_megrealign calls deprecated ft_headmodelplot -> this is now changed.

          the issue with the channelposition bug seems not to exist anymore.

          going through the code with respect to the balancing issue, it seems to me that the function deals with it in a correct way.

          created testscript in revision 4740
