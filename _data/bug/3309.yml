+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3309"
    creation_ts: 2017-06-13 16:04:00 +0200
    short_desc: Warning concerning short-circuit operations in Octave
    delta_ts: 2018-11-15 10:26:35 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: octave
    version: unspecified
    rep_platform: PC
    op_sys: Linux
    bug_status: ASSIGNED
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: minor
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: g.flandin
      +@name: Guillaume
    assigned_to: fieldtriptoolbox
    cc:
      - j.schoffelen
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "18728"
        comment_count: "0"
        who:
          +content: g.flandin
          +@name: Guillaume
        bug_when: 2017-06-13 16:04:46 +0200
        thetext: |-
          normals.m uses "|" instead of "||" in scalar conditional statements - Octave displays a warning for this ("Matlab-style short-circuit operation performed for operator|").
          A full list of functions that use this syntax can be obtained with:

          f = cellstr(spm_select('FPlistRec','/path/to/fieldtrip','\.m$'));
          s = checkcode(f);
          for i=1:numel(s)
              for j=1:numel(s{i})
                  if strmatch('Use ||',s{i}(j).message)
                      disp(f{i});
                  end
              end
          end
      - +@isprivate: "0"
        commentid: "18730"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-06-13 18:39:22 +0200
        thetext: "that gives me this (after filtering out external)\n\n\nfieldtrip/contrib/nutmegtrip/nmt_sourceplot.m\nfieldtrip/contrib/spike/ft_spike_select.m\nfieldtrip/contrib/spike/ft_spike_waveform.m\nfieldtrip/fileio/private/decode_nifti1.m\nfieldtrip/fileio/private/ft_datatype_spike.m\nfieldtrip/fileio/private/inifile.m\nfieldtrip/fileio/private/read_asa_vol.m\nfieldtrip/fileio/private/read_biff.m\nfieldtrip/fileio/private/read_bti_ascii.m\nfieldtrip/fileio/private/read_ctf_hc.m\nfieldtrip/fileio/private/read_curry.m\nfieldtrip/fileio/private/read_polhemus_fil.m\nfieldtrip/fileio/private/read_yokogawa_header.m\nfieldtrip/fileio/private/read_yokogawa_header_new.m\nfieldtrip/forward/private/leadfield_openmeeg.m\nfieldtrip/forward/private/normals.m\nfieldtrip/inverse/private/SAM_costfun.m\nfieldtrip/plotting/private/select3d.m\nfieldtrip/private/dftfilter.m\nfieldtrip/private/elec1020_intersect.m\nfieldtrip/private/normals.m  ---> YUP IT IS HERE AS WELL \nfieldtrip/private/read_ctf_hc.m\nfieldtrip/private/select3d.m\nfieldtrip/private/select_channel_list.m\nfieldtrip/private/volplot.m\nfieldtrip/realtime/example/ft_realtime_fmriproxy.m\nfieldtrip/realtime/online_mri/ft_omri_slice_time_init.m\nfieldtrip/realtime/online_mri/private/rls_init.m\nfieldtrip/statfun/ft_statfun_depsamplesFmultivariate.m\nfieldtrip/statfun/ft_statfun_depsamplesFunivariate.m\nfieldtrip/test/test_ft_channelrepair.m\nfieldtrip/test/test_ft_checkdata.m\nfieldtrip/test/private/normals.m\nfieldtrip/trialfun/private/select_channel_list.m\nfieldtrip/utilities/ft_datatype_spike.m"
      - +@isprivate: "0"
        commentid: "18731"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-06-13 18:41:56 +0200
        thetext: PS cool, I did not know about this checkcode function!
      - +@isprivate: "0"
        commentid: "18734"
        comment_count: "3"
        who:
          +content: g.flandin
          +@name: Guillaume
        bug_when: 2017-06-14 10:33:10 +0200
        thetext: |-
          Thanks Robert, that's great!

          Just a quick comment: in the new function test_checkcode.m, it might be worth using checkcode(...,'-id') and s(j).id in case the wording of error messages changes over time.
      - +@isprivate: "0"
        commentid: "19593"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2018-11-13 22:54:17 +0100
        thetext: 'Robert: deze kan dicht, toch?'
      - +@isprivate: "0"
        commentid: "19597"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-11-15 10:26:35 +0100
        thetext: '@JM: we should ideally still change it such that it uses the msgId rather than the string. The msgId will be more persistent over matlab versions than the string.'
