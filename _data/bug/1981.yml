+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1981"
    creation_ts: 2013-02-08 21:03:00 +0100
    short_desc: consider implementing a cheby2 filter in ft_preproc_xxxfilter
    delta_ts: 2015-01-12 09:24:44 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: preproc
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: WONTFIX
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: enhancement
    target_milestone: '---'
    dependson: "2033"
    everconfirmed: "1"
    reporter:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - f.dipompeo
      - i.andolina
      - ines.bramao
      - johanna.zumer
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "9397"
        comment_count: "0"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2013-02-08 21:03:00 +0100
        thetext: |-
          there seems to exist an octave version for the computation of the coefficients, so no signal processing toolbox is requested in that case. I am not too familiar with the specifics of the chebyshev filter characteristics myself.
          for the rest it would be pretty straightforward, and analogous to e.g. the butterworth filter
      - +@isprivate: "0"
        commentid: "9398"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2013-02-09 16:37:38 +0100
        thetext: |-
          I looked into the filter design a bit more, and noticed that the Chebyshev type 2 filter actually has quite a variable response in the pass and stop bands, but is admittedly much steeper than the butterworth filter.

          One issue that warrants discussion in order for it to be really neatly implemented in FT and accessible from preproc, is that an extra parameter is needed. As such this can be dealt with generically as additional key-value pairs for the ft_preproc_xxxfilter functions, but once we go this track, we may reconsider using key-value pairs throughout.
      - +@isprivate: "0"
        commentid: "9399"
        comment_count: "2"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2013-02-10 09:09:30 +0100
        thetext: |-
          now we're at it: there's also a firls implementation in the octave signal toolbox (from which we use a lot of overloaded code, to remove dependency on the signal processing toolbox). Consider to do a drop-in replacement for firls

          TO DO:
          -test the octave implementation versus the matlab implementation
      - +@isprivate: "0"
        commentid: "9401"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2013-02-11 11:25:00 +0100
        thetext: "octave's firls implementation seems to yield the same results as the signal processing toolbox one, up to numerical round off. \n\n-ONLY when the filter order is even it seems.\n-coefficients are returned as a column-vector, rather than column"
      - +@isprivate: "0"
        commentid: "14317"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2014-09-10 14:52:39 +0200
        thetext: OK, this has been considered but so far not implemented. I think with the recent external contribution of well-behaved filter functions, I don't want to push this any further. Therefore I will close this for now. Feel free to re-open if you have very good arguments.
