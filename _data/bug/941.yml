+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "941"
    creation_ts: 2011-09-07 12:49:00 +0200
    short_desc: ft_channelrepair doesn't reconstruct channel well
    delta_ts: 2011-09-14 14:33:50 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: preproc
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: annevanhoogmoed
      +@name: Anne van Hoogmoed
    assigned_to:
      +content: jorn
      +@name: Jörn M. Horschig
    cc:
      - j.schoffelen
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "3086"
        comment_count: "0"
        who:
          +content: annevanhoogmoed
          +@name: Anne van Hoogmoed
        bug_when: 2011-09-07 12:49:11 +0200
        thetext: |-
          I've tried to use ft_channelrepair to reconstruct a channel (channel 25). However, if I plot the results, the values of the repaired channel do not lie within the range of the values of the neighbours used to reconstruct the channel. Shouldn't that be the case?
          I've used the following script:

          data_eeg_clean.elec = elec_new;
          cfg = [];
          cfg.badchannel = {'25'};
          cfg.neighbours = neighbours;
          data_eeg_repaired = ft_channelrepair(cfg,data_eeg_clean);

          cfg = [];
          cfg.channel = {'19','20','24','25','26'};
          ft_databrowser(cfg, data_eeg_clean);
      - +@isprivate: "0"
        commentid: "3088"
        comment_count: "1"
        attachid: "130"
        who:
          +content: annevanhoogmoed
          +@name: Anne van Hoogmoed
        bug_when: 2011-09-07 12:52:22 +0200
        thetext: |-
          Created attachment 130
          data
      - +@isprivate: "0"
        commentid: "3089"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-09-07 12:55:21 +0200
        thetext: |-
          Thanks for the data. Someone will look at it soon.

          A test script should be made that demonstrates the problem. I have already copied the data to /home/common/.../data/test/bug941.mat
      - +@isprivate: "0"
        commentid: "3138"
        comment_count: "3"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2011-09-12 12:39:37 +0200
        thetext: "Hey Anne,\n\nThe fixed function should be on /home/common/ within a few minutes.\n\nThe problem was caused by the default behaviour of the Matlab function 'setdiff'. This function sorts it's input alphabetically, leading to a different order for channels in the function than they are ordered in the data. Since your channels are called something like '1', '2', (...) '10', '11', (...), setdiff set the order to '1', '10', '11', (...), '2', '20', (...). Thus, the sensor indices did not match anymore and so the sensors taken for averaging were completely wrong. \nI fixed this by sorting the indices that setdiff returns numerically - so that the output is consistent again with the labeling in the data.\n\n\n@Robert: This behaviour might have caused wrong interpolation for others that use channelrepair, should we tell people(==mailing list) that there was a bug in this function?"
      - +@isprivate: "0"
        commentid: "3139"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-09-12 13:12:15 +0200
        thetext: |-
          (In reply to comment #3)
          > @Robert: This behaviour might have caused wrong interpolation for others that
          > use channelrepair, should we tell people(==mailing list) that there was a bug
          > in this function?

          Yes, good idea.
      - +@isprivate: "0"
        commentid: "3224"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-09-14 14:33:50 +0200
        thetext: "I closed all the bugs that were in the status RESOLVED. \n\nThis includes the ones that we just discussed in the weekly fieldtrip meeting, but also the bugs that we did not discuss."
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "130"
      date: 2011-09-07 12:52:00 +0200
      delta_ts: 2011-09-07 12:52:22 +0200
      desc: data
      filename: data_s7_bug.mat
      type: application/octet-stream
      size: "0"
      attacher:
        +content: annevanhoogmoed
        +@name: Anne van Hoogmoed
      data: REMOVED
