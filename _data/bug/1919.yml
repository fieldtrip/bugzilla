+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1919"
    creation_ts: 2013-01-07 15:30:00 +0100
    short_desc: merge planarchannelset with ft_senslabel
    delta_ts: 2014-02-24 10:56:40 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc: litvak.vladimir
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "8882"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-01-07 15:30:27 +0100
        thetext: "ft_senslabel returns lists of channels.\nft_channelselection also has lists of channels internally, e.g. 'eog' and 'eegref'\nprivate/planarchannelset also defines lists.\n\nThese functionalities should be merged into ft_senslabel, planarchannelset should go, and ft_channelselection should not define its own lists.\n\nThis requires that ft_senslabel is extended like\n\nft_senslabel('ctf151_planar')  -> returns cell(302,1)\nft_senslabel('ctf151_planar', 'pair', yes)  -> returns cell(151,2)\nft_senslabel('neuromag306', 'pair', yes)  -> returns cell(102,3)\nft_senslabel('ctf151_planar', 'combined', yes/no)  -> returns cell(151,1) with combined labels\nft_senslabel('neuromag306', 'combined', yes/no)  -> returns cell(102,1) with combined labels\n\n\ndefault is \npair = no, combined=no. \n\nthe combination \npair=yes && combined=no \nshould not be supported.\n\nOr perhaps better something like\n  ft_senslabel(type, 'format', xxx)\nwhere xxx is list (default), paired, combined."
      - +@isprivate: "0"
        commentid: "8883"
        comment_count: "1"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2013-01-07 15:39:06 +0100
        thetext: |-
          (In reply to comment #0)
          OK then to get the present functionality of ft_planarchanset one would have to do something like:

          ft_senslabel(ft_senstype(input), 'format', 'paired')

          That could be done in SPM code if you want. Regarding ft_senstype, it's I think just a historical (and aesthetic) thing that it's not called ft_channelsettype. In any case I think it would be useful also in FT to have a function that can identify that some raw or timelock struct contains data from combined planar channels. Also by your logic if ft_senstype is the inverse of ft_senslabel it should be able to recognize also paired and combined lists.
      - +@isprivate: "0"
        commentid: "11950"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-11-18 10:41:06 +0100
        thetext: |-
          mac001> svn commit test/test_bug1919.m ft_prepare_layout.m ft_combineplanar.m forward/ft_senslabel.m
          Sending        forward/ft_senslabel.m
          Sending        ft_combineplanar.m
          Sending        ft_prepare_layout.m
          Adding         test/test_bug1919.m
          Transmitting file data ....
          Committed revision 8796.
      - +@isprivate: "0"
        commentid: "12953"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2014-02-24 10:56:40 +0100
        thetext: I closed several bugs at once that all have been resolved for some time. If you disagree, please reopen.
