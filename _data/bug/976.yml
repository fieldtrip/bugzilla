+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "976"
    creation_ts: 2011-09-22 10:37:00 +0200
    short_desc: round-off issues lead to unexpected behavior of ft_specest_XXX
    delta_ts: 2012-01-03 11:29:08 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: DUPLICATE
    dup_id: "1228"
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - craig.richter
      - r.oostenveld
      - roemer.van.der.meij
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "3283"
        comment_count: "0"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-09-22 10:37:12 +0200
        thetext: "ft_specest_XXX computes the sampling frequency from the first 2 elements of the time axis. This is done for each trial. Sometimes the time samples for some reason are not exactly numerically identical, leading to differences in the number of tapers, even if the trials have the same number of samples. This is nicely illustrated by fieldtrip/test/test_bug905 (see also bug 905). \nI think that we should try to fix this unexpected behavior. One suggestion (courtesy of Roemer) would be to compute the sampling rate up to some decimal points accuracy (e.g. fsample = round(10000*fsample)/10000"
      - +@isprivate: "0"
        commentid: "3284"
        comment_count: "1"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2011-09-22 12:25:53 +0200
        thetext: We could, of course, make sure specest has a sampling rate as input, instead of computing it.
      - +@isprivate: "0"
        commentid: "4512"
        comment_count: "2"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-12-12 11:04:48 +0100
        thetext: "Craig reported the following:\n\nHi guys,\n\nI just wanted to warn you that I'm going to upload an update for ft_specest_mtmfft, which requires an update of ft_freqanalysis.  In ft_specest_mtmfft, the sampling rate is determined by time(2) - time(1).  This ends up causing numerical accuracy issues when mtmfft is run on a section of data that has been generated from ft_redefine trial.  I haven't looked deeply into this, but I suspect that ft_redefine trial is creating the new time vector by subtraction of a scalar value from the original time vector. The numerical error generated is sufficiently large to cause noticeable differences in the spectral output.  I have fixed this by passing the fsample into ft_specest_mtmfft.  This highlights the overall problem of numerical accuracy and the time vector.  We somehow need the time vector always quantized to1/sampling rate.  If we represented it as an integer that is divided by the sampling rate, i.e. the time vector is always an integer, the result of subtractions would also always be an integer, then if the time in seconds is wanted, we would divide by the sampling rate, but this would just be a sample index, right? \n\nDo the current changes sound ok?\n\nBest,\n\nCraig"
      - +@isprivate: "0"
        commentid: "4520"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-12-13 08:43:01 +0100
        thetext: |-
          duplicate of 1228

          *** This bug has been marked as a duplicate of bug 1228 ***
