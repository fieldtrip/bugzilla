+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "138"
    creation_ts: 2010-09-02 09:26:00 +0200
    short_desc: loadvar and savevar shoudl default to a meaningful variable name and not to 'data'
    delta_ts: 2011-01-26 15:38:29 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: a.stolk8
      +@name: Arjen Stolk
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "278"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-09-02 09:26:50 +0200
        thetext: "the variable name used for loadvar and savevar should be consistent with the docoumentation. E.g. data after preprocessing, freq after freqanalysis and stat after statistics. \n\nTo do: \n- make a list of the variable names used in the documentation (the help of the function). Check whether those are consistent. Document it at http://fieldtrip.fcdonders.nl/code_guidelines\n- discuss with other developers\n- ensure that the function documentation is consistent with the guidelines\n- change the loadvar and savevar calls in the ft_xxx functions to adhere to the guidelines\n\nbelow some linux command line code that can help\n\nUse the following to identify the function description from the documentation.\n\nfor functions with output\nmanzana> grep -h '% *\\[.*\\] = ft_.*' ft_*.m \n%   [data] = ft_preprocessing(cfg, data)\n%   [ev] = ft_recodeevent(cfg, data)\n%   [ev] = ft_recodeevent(cfg, event, trl)\n%    [data] = ft_rejectcomponent(cfg, comp)\n%    [data] = ft_rejectcomponent(cfg, comp, data)\n%   [data] = ft_rejectvisual(cfg, data)\n%   [data] = ft_resampledata(cfg, data)\n%   [data] = ft_scalpcurrentdensity(cfg, data)\n...\n\nfor functions without output\nmanzana> grep '% *ft_.*' ft_*.m \n%   ft_multiplotCC(cfg, data)\n%   ft_multiplotER(cfg, data)\n%   ft_multiplotER(cfg, data, data2, ..., dataN)\n%   ft_multiplotTFR(cfg, data)\n%   ft_sinlgeplotER(cfg, data)\n%   ft_singleplotER(cfg, data1, data2, ..., dataN)\n%   ft_singleplotTFR(cfg,data)\n%   ft_sliceinterp(cfg, interp)\n%   ft_sourceplot(cfg, data)\n%   ft_spikefixdmafile(cfg);\n...\n\nmanzana> grep loadvar ft_*.m\nft_appenddata.m:      varargin{i} = loadvar(cfg.inputfile{i}, 'data'); % read datasets from array inputfile\nft_artifact_clip.m:    data = loadvar(cfg.inputfile, 'data');\nft_artifact_eog.m:      data = loadvar(cfg.inputfile, 'data');\nft_artifact_jump.m:      data = loadvar(cfg.inputfile, 'data');\n..\n\nmanzana> grep savevar *.m\nft_appenddata.m:  savevar(cfg.outputfile, 'data', data); % use the variable name \"data\" in the output file\nft_artifact_threshold.m:  savevar(cfg.outputfile, 'data', data); % use the variable name \"data\" in the output file\nft_channelnormalise.m:  savevar(cfg.outputfile, 'data', dataout); % use the variable name \"data\" in the output file\nft_channelrepair.m:  savevar(cfg.outputfile, 'data', interp); % use the variable name \"data\" in the output file\nft_combineplanar.m:  savevar(cfg.outputfile, 'data', data); % use the variable name \"data\" in the output file\n..."
      - +@isprivate: "0"
        commentid: "395"
        comment_count: "1"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2010-11-03 11:19:58 +0100
        thetext: "Still yet to resolve:\n\n* ft_sourceinterpolate in combination with ft_sourceplot\n\nWhat is the desired output? Interp is documented in the help, but sourceplot can plot both interp and source\n\n* ft_volumenormalise \noutput should be 'norm'?\n\n\n\n\nChanges to loadvar:\n\nft_clusterplot\nloadvar(~, data) to loadvar(~, stat)\n\nft_freqbaseline\nloadvar(~, data) to loadvar(~, freq)\n\nft_freqdescriptives\nloadvar(~, data) to loadvar(~, freq)\n\nft_freqgrandaverage\nloadvar(~, data) to loadvar(~, freq)\n\nft_freqstatistics\nloadvar(~, data) to loadvar(~, freq)\n\nft_prepare_localspheres\nloadvar(~, data) to loadvar(~, mri)\n\nft_prepare_mesh\nloadvar(~, data) to loadvar(~, mri)\n\nft_prepare_singlesphere\nloadvar(~, data) to loadvar(~, mri)\n\nft_rejectcomponent\nloadvar(~, data) to loadvar(~, comp)\n\nft_sourcedescriptives\nloadvar(~, data) to loadvar(~, source)\n\nft_sourcegrandaverage\nloadvar(~, data) to loadvar(~, source): 2x\n\nft_sourceinterpolate \nloadvar(~, data) to loadvar(~, mri)\n\nft_volumedownsample\nloadvar(~, data) to loadvar(~, source)\n\nft_volumenormalise\nloadvar(~, data) to loadvar(~, interp)\n\nft_volumerealign \nloadvar(~, data) to loadvar(~, mri)\n\nft_volumereslice \nloadvar(~, data) to loadvar(~, mri)\n\nft_volumesegment \nloadvar(~, data) to loadvar(~, mri)\n\nft_volumewrite \nloadvar(~, data) to loadvar(~, volume)\n\n\nChanges to savevar:\n\nft_componentanalsysis\nsavevar(~, data) to savevar(~, comp)\n\nft_freqanalysis\nsavevar(~, data) to savevar(~, freq)\n\nft_freqbaseline\nsavevar(~, data) to savevar(~, freq)\n\nft_freqdescriptives\nsavevar(~, data) to savevar(~, freq)\n\nft_freqgrandaverage\nsavevar(~, data) to savevar(~, freq)\n\nft_freqinterpolate\nsavevar(~, data) to savevar(~, freq)\n\nft_freqstatistics\nsavevar(~, data) to savevar(~, stat)\n\nft_sourceanalysis\nsavevar(~, data) to savevar(~, source)\n\nft_sourcedescriptives\nsavevar(~, data) to savevar(~, source)\n\nft_sourcegrandaverage\nsavevar(~, data) to savevar(~, source): 2x\n\nft_timelockstatistics\nsavevar(~, data) to savevar(~, stat)\n\nft_volumedownsample\nsavevar(~, data) to savevar(~, source)\n\nft_volumerealign \nsavevar(~, data) to loadvar(~, mri)\n\nft_volumereslice \nsavevar(~, data) to loadvar(~, mri)\n\nft_volumesegment \nsavevar(~, data) to loadvar(~, segment)"
      - +@isprivate: "0"
        commentid: "1144"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-26 15:37:09 +0100
        thetext: |-
          I closed all bugs that were resolved prior and including 2011-01-25.

          All resolved bugs should have been discussed by now, therefore we don't want to see them again in the next meeting. Instead, in the next meeting we want to see the recent improvements and fixes.
      - +@isprivate: "0"
        commentid: "1193"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-26 15:38:29 +0100
        thetext: |-
          I closed all bugs that were resolved prior and including 2011-01-25.

          All resolved bugs should have been discussed by now, therefore we don't want to see them again in the next meeting. Instead, in the next meeting we want to see the recent improvements and fixes.
