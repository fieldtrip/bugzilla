+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1750"
    creation_ts: 2012-09-28 11:21:00 +0200
    short_desc: use consistent option names for segmentationstyle, inside and cmbrepresentation
    delta_ts: 2012-10-01 12:03:59 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: NEW
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: minor
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to: fieldtriptoolbox
    cc: johanna.zumer
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "7648"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-28 11:21:12 +0200
        thetext: They all refer to a "style" of representation of one of the data fields. It would be better to have them named consistently.
      - +@isprivate: "0"
        commentid: "7667"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-29 07:42:27 +0200
        thetext: "On 28 Sep 2012, at 18:05, Johanna Zumer wrote:\n\nIs there a way to test , for a structure which is true for ft_datatype(data,'segmentation') , as to what it's segmentationstyle is?\n\nft_datatype_segmentation(data,'segmetnationstyle', 'XXX') converts the data to that style but doesn't give out a binary answer if the orignal data was indeed that style or not.\n\n----------\n\nHi Johanna,\n(Let me post it here for future reference, rather than in an email.)\n\nThere is not. The general idea is that you tell ft_checkdata what you want w.r.t. the data representation and that you don't have to make your code dependent on the representation. The output from a function should also be in the preferred (internal) format of that function. However, an exception is e.g. ft_megplanar, which does convert input timelock data to raw, and at the end back to timelock. Search for \"istlck\" in that function and have a look.\n\nThe data \"type\" is quite well designed, but the \"style\" (which we should perhaps treat as subtype) is not so well developed in the code and my thinking about it.\n\nWe could perhaps consider another naming scheme such as\nbool = ft_datatype(data, 'segmentation.probabilistic')  or bool = ft_datatype(data, 'probabilistic_segmentation')\nand similarly\nbool = ft_datatype(freq, 'freq.full');\nfor doing the check and \ndata = ft_checkdata(data, 'datatype', 'segmentation.probabilistic')\nfor doing a check+conversion if needed.\n\nBut what if there are (or will be) mutiple style attributes? And what if those depend on each other, or if they are orthogonal? ..."
      - +@isprivate: "0"
        commentid: "7674"
        comment_count: "2"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2012-10-01 12:03:59 +0200
        thetext: such a subtype of style could also be useful for freq data ('pow','csd','powandcsd'), and timelock with currently 2 (in future 3) subtypes of 'avg', 'cov', 'avgandcov'.
