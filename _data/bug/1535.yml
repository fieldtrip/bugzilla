+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1535"
    creation_ts: 2012-06-18 13:43:00 +0200
    short_desc: Nanvar gives inaccurate results
    delta_ts: 2019-08-10 11:55:44 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: b.reuderink
      +@name: Boris Reuderink
    assigned_to: fieldtriptoolbox
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "6422"
        comment_count: "0"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2012-06-18 13:43:13 +0200
        thetext: "While writing unit-test for nansum, nanmean, nanvar and nanstd (see bug #1398), I found a problem in nanvar:\n\n---\n>> x = rand(10000, 1); \n>> for i = logspace(4, 12, 6);\n     v1 = var(x + i);\n     v2 = nanvar(x + i);\n     fprintf('offset: %.2g, \\tvar: %.2f, \\tnanvar: %.2f \\n', i, v1, v2);\nend;\n---\n\nresulting in:\n\n---\noffset: 1e+004, \tvar: 0.08, \tnanvar: 0.08 \noffset: 4e+005, \tvar: 0.08, \tnanvar: 0.08 \noffset: 1.6e+007, \tvar: 0.08, \tnanvar: 2.00 \noffset: 6.3e+008, \tvar: 0.08, \tnanvar: -2883.87 \noffset: 2.5e+010, \tvar: 0.08, \tnanvar: 3328932.55 \noffset: 1e+012, \tvar: 0.09, \tnanvar: 96326851278.31\n---\n\nThis is with FieldTrip's nanvar function. The nanvar variant in MATLAB's statistics toolbox gives the same variance as 'var' does. Note that these get inaccurate as well for offsets > 1e12.\n\nSome background information can be found on: http://www.johndcook.com/blog/2008/09/26/comparing-three-methods-of-computing-standard-deviation/"
      - +@isprivate: "0"
        commentid: "7662"
        comment_count: "1"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2012-09-28 14:54:53 +0200
        thetext: 'Fixed in #1398.'
      - +@isprivate: "0"
        commentid: "8096"
        comment_count: "2"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2012-11-02 13:29:53 +0100
        thetext: I am no longer working on FieldTrip. Hence, I donate all my bugs to the joint development user.
      - +@isprivate: "0"
        commentid: "19728"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 11:51:47 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue describing the issue on https://github.com/fieldtrip/fieldtrip/issues."
      - +@isprivate: "0"
        commentid: "19772"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 11:55:44 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue describing the issue on https://github.com/fieldtrip/fieldtrip/issues."
