+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2997"
    creation_ts: 2015-11-04 17:59:00 +0100
    short_desc: implement saturation in ft_sourceplot for surfaces
    delta_ts: 2017-11-20 20:14:13 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: plotting
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    see_also: http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3000
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - j.schoffelen
      - kristijan.armeni
      - r.oostenveld
      - stephen.whitmarsh
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "16287"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-04 17:59:28 +0100
        thetext: |-
          Stephen (and others) occasionally run into rendering problems with surface plots due to software openGL. This would be resolved if the surfaces were visualised without opacity. This is implemented in ft_plot_matrix (TFRs) and as of recently also in ft_plot_topo (thanks to Roemer, see bug 2574).


          I received a mat file from Stephen that I will copy to home/common/matlab/fieldtrip/test/bugxxx.mat
      - +@isprivate: "0"
        commentid: "16302"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-05 23:31:42 +0100
        thetext: '*** Bug 2955 has been marked as a duplicate of this bug. ***'
      - +@isprivate: "0"
        commentid: "18671"
        comment_count: "2"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2017-05-17 15:10:01 +0200
        thetext: bump
      - +@isprivate: "0"
        commentid: "18672"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-05-17 15:10:50 +0200
        thetext: who is going to do this?
      - +@isprivate: "0"
        commentid: "18777"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2017-06-27 15:24:09 +0200
        thetext: |-
          (In reply to Robert Oostenveld from comment #3)

          I guess I am, because I am getting totally annoyed by the fact that rendering is so extremely slow sometimes. As indicated by Roemer in the referenced bug, the code that is in ft_plot_matrix/_topo is not going to help us here, because this allows only for binary masking, i.e. either an alpha value of 0 or an alpha value of 1.

          I will look into a solution that would generically do a conversion of a rgba matrix into an rgb matrix, where the alpha-column can have any value.

          I suspect this needs the following to be generic:

          -allow for a data vector, which needs to be converted into an rgb matrix, given a colormap and a clim

          -add an alpha column to this rgb matrix based on the specified maskparameter + alphamap + alim

          -convert this into rgb again in combination with a specified background color-value, which can be other than [1 1 1], or [0 0 0]
      - +@isprivate: "0"
        commentid: "18778"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2017-06-27 15:28:38 +0200
        thetext: "the specs in my previous comment lead to a function with the following api:\n\nrgb = bg_rgba2rgb(rgba, bg) % both inputs Nx3\n\nor \n\nrgb = bg_rgba2rgb(dat, bg, cmap, clim, alpha, alphamap, alim);\n\n% dat = Nx1, bg = Nx3, cmap = Mx3, clim = 1x2, alpha = Nx1, alphamap = string, alim = 1,2"
      - +@isprivate: "0"
        commentid: "18791"
        comment_count: "6"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2017-07-05 15:23:18 +0200
        thetext: This has been done.
