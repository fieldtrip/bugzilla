+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "728"
    creation_ts: 2011-06-02 22:21:00 +0200
    short_desc: change to ft_channelselection in SVN commit 3548 breaks some wildcard functionality
    delta_ts: 2011-06-21 15:52:21 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: ekanal
      +@name: Eliezer Kanal
    assigned_to:
      +content: jorn
      +@name: Jörn M. Horschig
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "2286"
        comment_count: "0"
        who:
          +content: ekanal
          +@name: Eliezer Kanal
        bug_when: 2011-06-02 22:21:37 +0200
        thetext: "The code change in 3548 breaks wildcard selectors where the wildcard is in the middle, e.g. \"M*1\". The negation operator is being interpreted incorrectly here. See line 161, the code should be:\n\nIndex: ft_channelselection.m\n===================================================================\n--- ft_channelselection.m\t(revision 3613)\n+++ ft_channelselection.m\t(working copy)\n@@ -158,7 +158,7 @@\n     labelreg = labelreg | ~cellfun(@isempty, regexp(datachannel, ['^' channel{i}(1:end-1) '.*'], 'once'));\n     findreg  = [findreg i];\n   end\n-  if length(channel{i})>1 && ~channel{i}(1)=='*' && ~channel{i}(end)=='*' && any(channel{i}=='*') \n+  if length(channel{i})>1 && ~(channel{i}(1)=='*') && ~(channel{i}(end)=='*') && any(channel{i}=='*') \n     % the wildcard is in the middle\n     sel  = strfind(channel{i}, '*');\n     str1 = channel{i}(1:(sel-1));\n\nwith parenthesis around the \"channel{i}(1)==1\" statement. Ideally, the equality comparisons should all be replaced with `strcmp` calls, which are more robust for this sort of comparison."
      - +@isprivate: "0"
        commentid: "2287"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-06-03 09:44:24 +0200
        thetext: |-
          Hi Jörn,

          Could you look into this and fix it as suggested? Thanks, JM
      - +@isprivate: "0"
        commentid: "2323"
        comment_count: "2"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2011-06-07 13:42:44 +0200
        thetext: done + using strmcp and strfind instead of ==
