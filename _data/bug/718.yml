+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "718"
    creation_ts: 2011-05-31 17:48:00 +0200
    short_desc: ft_apply_montage of ft_megplanar causes ft_topoplotTFR problems after ft_rejectcomponent
    delta_ts: 2011-07-13 14:22:22 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Linux
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: dlozanosoldevilla
      +@name: Diego Lozano Soldevilla
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "2251"
        comment_count: "0"
        who:
          +content: dlozanosoldevilla
          +@name: Diego Lozano Soldevilla
        bug_when: 2011-05-31 17:48:00 +0200
        thetext: |-
          After rejection of ICs by means of ft_rejectcomponent, I get topoplotTFR display problems (it appears the electrodes and the topo scalp but without frequency information). Importantly is that this problem doesn't appear with ft_multiplotTFR.

          Lines 112-121 of ft_apply_montage seems to cause the problem. Specifically, without rejecting ICs, the sens.label and montage.labelorg have different channels and this extra channels (28) seem to be important for topoploting. Rejecting ICs, this extra channels not appear in megplanar calculations and latter appear the topoplot problems.
      - +@isprivate: "0"
        commentid: "2252"
        comment_count: "1"
        attachid: "60"
        who:
          +content: dlozanosoldevilla
          +@name: Diego Lozano Soldevilla
        bug_when: 2011-05-31 17:48:35 +0200
        thetext: |-
          Created attachment 60
          data example
      - +@isprivate: "0"
        commentid: "2429"
        comment_count: "2"
        attachid: "77"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-06-24 15:52:05 +0200
        thetext: |-
          Created attachment 77
          data causing problems in channelposition
      - +@isprivate: "0"
        commentid: "2430"
        comment_count: "3"
        attachid: "78"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-06-24 15:59:56 +0200
        thetext: |-
          Created attachment 78
          yet other data causing problems in channelposition
      - +@isprivate: "0"
        commentid: "2537"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-07-07 11:01:50 +0200
        thetext: |-
          Hi Diego,

          I think I solved it. I had to make a few changes to ft_componentanalysis and ft_rejectcomponent, among others. If I repeat the steps you take (i.e. ft_denoise_synthetic, ft_componentanalysis, ft_rejectcomponent, ft_megplanar, ft_combineplanar) all seems fine in terms of reconstructed sensor positions (which would mean no nans anymore).
          Unfortunately, you need to go back quite a few levels in your analysis pipeline to validate this. I would appreciate it if you coulr validate my changes with the 2 datasets which did not work for you. Could you let me know whether it works again? Thanks

          JM

          PS1: I am about to commit the changes, they will be available in about 20 minutes on /home/common/
          PS2: You can always still work with the 'bad' data by replacing the data.grad with the original one, prior to calling ft_megplanar.
      - +@isprivate: "0"
        commentid: "2562"
        comment_count: "5"
        attachid: "89"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-07-08 14:55:58 +0200
        thetext: |-
          Created attachment 89
          test data.grad
      - +@isprivate: "0"
        commentid: "2563"
        comment_count: "6"
        attachid: "90"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-07-08 14:58:02 +0200
        thetext: |-
          Created attachment 90
          test data.grad
      - +@isprivate: "0"
        commentid: "2564"
        comment_count: "7"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-07-08 14:59:16 +0200
        thetext: "(In reply to comment #4)\n> Hi Diego,\n> \n> I think I solved it. I had to make a few changes to ft_componentanalysis and\n> ft_rejectcomponent, among others. If I repeat the steps you take (i.e.\n> ft_denoise_synthetic, ft_componentanalysis, ft_rejectcomponent, ft_megplanar,\n> ft_combineplanar) all seems fine in terms of reconstructed sensor positions\n> (which would mean no nans anymore).\n> Unfortunately, you need to go back quite a few levels in your analysis pipeline\n> to validate this. I would appreciate it if you coulr validate my changes with\n> the 2 datasets which did not work for you. Could you let me know whether it\n> works again? Thanks\n> \n> JM\n> \n> PS1: I am about to commit the changes, they will be available in about 20\n> minutes on /home/common/\n> PS2: You can always still work with the 'bad' data by replacing the data.grad\n> with the original one, prior to calling ft_megplanar.\n\nHi Jan-Mathijs,\n\nI re-did my analysis from the very begining (ft_preprocessing->\nft_componentanalysis -> ft_rejectcomponent -> ft_rejectartifact ->\nft_megplanar) and when the planar calculation I get this error:\n\n\n%planar calculation\n    cfg                 = [];\n    cfg.planarmethod    = 'sincos';\n    cfg.channel         =  {'MEG'};\n    cfg.trials          = 'all';\n    meg                 = ft_megplanar(cfg, meg);\nthe input is raw data with 274 channels and 370 trials\nundoing the invcomp balancing\nWarning: the linear projection for the montage is not full-rank, the resulting\ndata will have reduced dimensionality \n> In ft_apply_montage at 76\n  In fieldtrip/private/undobalancing at 29\n  In fieldtrip/private/channelposition at 31\n  In fieldtrip/private/megplanar_sincos at 26\n  In ft_megplanar at 171\nundoing the comp balancing\nWarning: the linear projection for the montage is not full-rank, the resulting\ndata will have reduced dimensionality \n> In ft_apply_montage at 76\n  In fieldtrip/private/undobalancing at 29\n  In fieldtrip/private/channelposition at 31\n  In fieldtrip/private/megplanar_sincos at 26\n  In ft_megplanar at 171\n??? Error using ==> ft_apply_montage at 133\nnot all output channels of the montage are unique\n\nError in ==> undobalancing at 29\n    sens = ft_apply_montage(sens, sens.balance.(sens.balance.current),\n'inverse', 'yes', 'keepunused', 'yes');\n\nError in ==> channelposition at 31\nsens = undobalancing(sens);\n\nError in ==> megplanar_sincos at 26\n[pnt, ori, lab] = channelposition(grad);\n\nError in ==> ft_megplanar at 171\n  montage = megplanar_sincos(cfg, data.grad);\n\n\n\nIn ft_apply_montage at 133 seems to be a matrix dimension problem in the\ngrad.tra structure but I can't figure out why.\n\nI attach you my grad matrix."
      - +@isprivate: "0"
        commentid: "2592"
        comment_count: "8"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-07-12 14:41:06 +0200
        thetext: "Hi Jan-Mathijs,\n\nLast week Stephen told me that both you solve similar sensor problem. I re-do again the whole analysis for one of my problematic subjects and I get this error:\n\nmeg                 = ft_megplanar(cfg, meg);\nthe input is raw data with 274 channels and 388 trials\nundoing the invcomp balancing\nWarning: the linear projection for the montage is not full-rank, the resulting data will have reduced dimensionality \n> In ft_apply_montage at 76\n  In fieldtrip/private/undobalancing at 29\n  In fieldtrip/private/channelposition at 31\n  In ft_megplanar at 243\nundoing the comp balancing\nWarning: the linear projection for the montage is not full-rank, the resulting data will have reduced dimensionality \n> In ft_apply_montage at 76\n  In fieldtrip/private/undobalancing at 29\n  In fieldtrip/private/channelposition at 31\n  In ft_megplanar at 243\n??? Error using ==> ft_apply_montage at 133\nnot all output channels of the montage are unique\n\nError in ==> undobalancing at 29\n    sens = ft_apply_montage(sens, sens.balance.(sens.balance.current), 'inverse', 'yes', 'keepunused', 'yes');\n\nError in ==> channelposition at 31\nsens = undobalancing(sens);\n\nError in ==> ft_megplanar at 243\n    [sens.pnt, sens.ori, sens.label] = channelposition(data.grad);\n\n\n\nI saw your changes in the ft_megplanar code but the error that I get is because the same reason than in my previous reply: seems to be a matrix dimension problem in the grad.tra structure but I don't know what is the size that this matrix has to have because I get the same error running my code in the unique participant who I never had any problem until now! Importantly, on grad.tra I'm not getting NaNs anymore.\n\nYou can find the data on one of my problematic subjects in the temporary folder with my pipeline (/home/common/temporary/4Jan-Mathijs). I save the data after epoching (megdata_epochs.mat), after ica rejection (megdata_icrejected.mat) and before planar transformation bug (megdata_planar_bug.mat).\n\nI hope this will be informative for you.\n\nDiego\n\n\n(In reply to comment #7)\n> (In reply to comment #4)\n> > Hi Diego,\n> > \n> > I think I solved it. I had to make a few changes to ft_componentanalysis and\n> > ft_rejectcomponent, among others. If I repeat the steps you take (i.e.\n> > ft_denoise_synthetic, ft_componentanalysis, ft_rejectcomponent, ft_megplanar,\n> > ft_combineplanar) all seems fine in terms of reconstructed sensor positions\n> > (which would mean no nans anymore).\n> > Unfortunately, you need to go back quite a few levels in your analysis pipeline\n> > to validate this. I would appreciate it if you coulr validate my changes with\n> > the 2 datasets which did not work for you. Could you let me know whether it\n> > works again? Thanks\n> > \n> > JM\n> > \n> > PS1: I am about to commit the changes, they will be available in about 20\n> > minutes on /home/common/\n> > PS2: You can always still work with the 'bad' data by replacing the data.grad\n> > with the original one, prior to calling ft_megplanar.\n> \n> Hi Jan-Mathijs,\n> \n> I re-did my analysis from the very begining (ft_preprocessing->\n> ft_componentanalysis -> ft_rejectcomponent -> ft_rejectartifact ->\n> ft_megplanar) and when the planar calculation I get this error:\n> \n> \n> %planar calculation\n>     cfg                 = [];\n>     cfg.planarmethod    = 'sincos';\n>     cfg.channel         =  {'MEG'};\n>     cfg.trials          = 'all';\n>     meg                 = ft_megplanar(cfg, meg);\n> the input is raw data with 274 channels and 370 trials\n> undoing the invcomp balancing\n> Warning: the linear projection for the montage is not full-rank, the resulting\n> data will have reduced dimensionality \n> > In ft_apply_montage at 76\n>   In fieldtrip/private/undobalancing at 29\n>   In fieldtrip/private/channelposition at 31\n>   In fieldtrip/private/megplanar_sincos at 26\n>   In ft_megplanar at 171\n> undoing the comp balancing\n> Warning: the linear projection for the montage is not full-rank, the resulting\n> data will have reduced dimensionality \n> > In ft_apply_montage at 76\n>   In fieldtrip/private/undobalancing at 29\n>   In fieldtrip/private/channelposition at 31\n>   In fieldtrip/private/megplanar_sincos at 26\n>   In ft_megplanar at 171\n> ??? Error using ==> ft_apply_montage at 133\n> not all output channels of the montage are unique\n> \n> Error in ==> undobalancing at 29\n>     sens = ft_apply_montage(sens, sens.balance.(sens.balance.current),\n> 'inverse', 'yes', 'keepunused', 'yes');\n> \n> Error in ==> channelposition at 31\n> sens = undobalancing(sens);\n> \n> Error in ==> megplanar_sincos at 26\n> [pnt, ori, lab] = channelposition(grad);\n> \n> Error in ==> ft_megplanar at 171\n>   montage = megplanar_sincos(cfg, data.grad);\n> \n> \n> \n> In ft_apply_montage at 133 seems to be a matrix dimension problem in the\n> grad.tra structure but I can't figure out why.\n> \n> I attach you my grad matrix."
    attachment:
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "60"
        date: 2011-05-31 17:48:00 +0200
        delta_ts: 2011-05-31 17:48:35 +0200
        desc: data example
        filename: data.mat
        type: application/x-matlab-workspace
        size: "8887920"
        attacher:
          +content: dlozanosoldevilla
          +@name: Diego Lozano Soldevilla
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "77"
        date: 2011-06-24 15:52:00 +0200
        delta_ts: 2011-06-24 15:52:05 +0200
        desc: data causing problems in channelposition
        filename: testdata.mat
        type: application/octet-stream
        size: "8686352"
        attacher:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "78"
        date: 2011-06-24 15:59:00 +0200
        delta_ts: 2011-06-24 15:59:56 +0200
        desc: yet other data causing problems in channelposition
        filename: testdata2.mat
        type: application/octet-stream
        size: "8681537"
        attacher:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "89"
        date: 2011-07-08 14:55:00 +0200
        delta_ts: 2011-07-08 14:55:58 +0200
        desc: test data.grad
        filename: testgrad.mat
        type: application/octet-stream
        size: "3768982"
        attacher:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "90"
        date: 2011-07-08 14:58:00 +0200
        delta_ts: 2011-07-08 14:58:02 +0200
        desc: test data.grad
        filename: testgrad.mat
        type: application/octet-stream
        size: "3768982"
        attacher:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        data: REMOVED
