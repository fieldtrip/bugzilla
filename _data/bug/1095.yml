+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1095"
    creation_ts: 2011-11-01 12:02:00 +0100
    short_desc: negative trialpadding in ft_artifact_zvalue
    delta_ts: 2019-08-10 11:56:51 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: All
    op_sys: All
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P4
    bug_severity: enhancement
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: stephen.whitmarsh
      +@name: Stephen Whitmarsh
    assigned_to:
      +content: stephen.whitmarsh
      +@name: Stephen Whitmarsh
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "3771"
        comment_count: "0"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-11-01 12:02:18 +0100
        thetext: "ft_artifact_zvalue has the possiblity for specifying trialpadding. This helps prevent edgeartifacts (of the z-value based on edges, especially when using filter options), but only when reading from disc. When you have data in memory already, after preprocessing, this does not work.\nSolution might be simple: provide possiblity for 'negative trialpadding', i.e. only do artifact rejection on smaller window (e.g. starting 100 ms later, and ending 100 ms earlier). \nWhat do you think?\n\n(p.s. ofcourse working with partial artifact rejection is a possible workaround, but only in some cases).\n\ncheers,\nStephen"
      - +@isprivate: "0"
        commentid: "4076"
        comment_count: "1"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2011-11-17 10:46:50 +0100
        thetext: |-
          Changed the status of bugs without a specific owner to UNCONFIRMED. I'll try to replicate these bugs (potentially involving the submitter), and change confirmed bugs to NEW.

          Boris
      - +@isprivate: "0"
        commentid: "4106"
        comment_count: "2"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2011-11-17 14:10:47 +0100
        thetext: What should we do? Discuss in meeting? On mailing list? Here?
      - +@isprivate: "0"
        commentid: "4313"
        comment_count: "3"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2011-11-28 16:07:37 +0100
        thetext: Bump.
      - +@isprivate: "0"
        commentid: "4665"
        comment_count: "4"
        who:
          +content: b.reuderink
          +@name: Boris Reuderink
        bug_when: 2012-01-03 14:32:04 +0100
        thetext: Bump.
      - +@isprivate: "0"
        commentid: "5273"
        comment_count: "5"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2012-02-13 18:14:18 +0100
        thetext: "I now tried to fix the problem with a workaround that ended up driving into another dead end bug (will post in another)\n\nTaking another look at this suggestion for improvement I think the best way would actually be to introduce a toi field. That should also we relatively easy for someone who knows the code of ft_artifact_zvalue - which seems it could use a little cleaning up anyhow. Anyone wants me to look over their shoulder, or to buy them chocolates? \n\nAnd yes that is a bribe :-)\n\n~S~"
      - +@isprivate: "0"
        commentid: "5275"
        comment_count: "6"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-02-13 19:30:39 +0100
        thetext: |-
          I strongly oppose against 'cleaning up' ft_artifact_zvalue' because it has been reimplemented about five times by now (most of the times by me), and I am pretty happy with the result...

          I don't understand what is meant with the 'toi'. If it is the purpose to disregard 'artifacts' close to the edge of the trial (with data in memory), actual specifying a negatively valued trlpadding makes sense, and could be implemented without too much hassle. Of course the default would still remain 0.
      - +@isprivate: "0"
        commentid: "5341"
        comment_count: "7"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-02-23 12:11:47 +0100
        thetext: 'FIXME: we should also think about the correct begin and endpoints of the detected artifacts in the context of negative trial-padding. When artpadding > 0  the begin/end points could fall within the padded part of the data. This is not the case at present'
      - +@isprivate: "0"
        commentid: "6213"
        comment_count: "8"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2012-05-31 10:23:37 +0200
        thetext: this wsa done a while ago. note its use is documented on the wiki
      - +@isprivate: "0"
        commentid: "19854"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 11:56:51 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue describing the issue on https://github.com/fieldtrip/fieldtrip/issues."
