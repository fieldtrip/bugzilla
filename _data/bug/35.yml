+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "35"
    creation_ts: 2010-02-08 13:02:00 +0100
    short_desc: channel selection in ft_connectivityanalysis
    delta_ts: 2011-01-06 09:12:19 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Linux
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: andrembastos
      +@name: Andre Bastos
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "59"
        comment_count: "0"
        who:
          +content: andrembastos
          +@name: Andre Bastos
        bug_when: 2010-02-08 13:02:40 +0100
        thetext: |-
          2 things:

          1. connectivityanalysis does not support cfg.channelcmb = {'chan1' 'all'};

          2. To do 1 by hand, I manually set cfg.channelcmb = {'chan1' 'chan2'; 'chan1' 'chan3'; 'chan1' 'chan1'; 'chan2' chan2'l 'chan3'; 'chan3'} and call connectivityanalysis, but the channelcmb is inappropriately assigned after calling channelcombination on line 109. Commenting this line out fixes the problem. I am not sure why I was not seeing this problem in my previous analyses, but it could be do to the fact that I am now calculating coherence from chan1 to ALL (instead of just within an ROI).

          See my full cfg specification in the attachment. Also, could we work on this together? I would like to understand better the channelselection process as it seems to continually come up as a royal pain in the ass...

          =)
      - +@isprivate: "0"
        commentid: "60"
        comment_count: "1"
        attachid: "2"
        who:
          +content: andrembastos
          +@name: Andre Bastos
        bug_when: 2010-02-08 13:03:01 +0100
        thetext: |-
          Created attachment 2
          code
      - +@isprivate: "0"
        commentid: "61"
        comment_count: "2"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2010-02-08 13:15:48 +0100
        thetext: "Don't blame connectivityanalysis, it's probably an unwanted feature of channelcombination.\nPlease come down if you want to look at it together, once you have a vnc'able matlab session open in which the problem can be easily reproduced...\n\n(In reply to comment #0)\n> 2 things:\n> \n> 1. connectivityanalysis does not support cfg.channelcmb = {'chan1' 'all'};\n> \n> 2. To do 1 by hand, I manually set cfg.channelcmb = {'chan1' 'chan2'; 'chan1'\n> 'chan3'; 'chan1' 'chan1'; 'chan2' chan2'l 'chan3'; 'chan3'} and call\n> connectivityanalysis, but the channelcmb is inappropriately assigned after\n> calling channelcombination on line 109. Commenting this line out fixes the\n> problem. I am not sure why I was not seeing this problem in my previous\n> analyses, but it could be do to the fact that I am now calculating coherence\n> from chan1 to ALL (instead of just within an ROI).\n> \n> See my full cfg specification in the attachment. Also, could we work on this\n> together? I would like to understand better the channelselection process as it\n> seems to continually come up as a royal pain in the ass...\n> \n> =)\n>"
      - +@isprivate: "0"
        commentid: "62"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2010-02-08 14:14:11 +0100
        thetext: "Problems identified and partially fixed. \n\nproblem 1 was caused by working with an un-updated version of the code\nproblem 2 was caused by the feature of ft_channelcombination, which doesn't explicitly check\nthe input list for auto-combinations and always adds those if requested\n\n(In reply to comment #0)\n> 2 things:\n> \n> 1. connectivityanalysis does not support cfg.channelcmb = {'chan1' 'all'};\n> \n> 2. To do 1 by hand, I manually set cfg.channelcmb = {'chan1' 'chan2'; 'chan1'\n> 'chan3'; 'chan1' 'chan1'; 'chan2' chan2'l 'chan3'; 'chan3'} and call\n> connectivityanalysis, but the channelcmb is inappropriately assigned after\n> calling channelcombination on line 109. Commenting this line out fixes the\n> problem. I am not sure why I was not seeing this problem in my previous\n> analyses, but it could be do to the fact that I am now calculating coherence\n> from chan1 to ALL (instead of just within an ROI).\n> \n> See my full cfg specification in the attachment. Also, could we work on this\n> together? I would like to understand better the channelselection process as it\n> seems to continually come up as a royal pain in the ass...\n> \n> =)\n>"
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "2"
      date: 2010-02-08 13:03:00 +0100
      delta_ts: 2010-02-08 13:03:01 +0100
      desc: code
      filename: compare_V4_FEF_coh.m
      type: text/x-objcsrc
      size: "2768"
      attacher:
        +content: andrembastos
        +@name: Andre Bastos
      data: REMOVED
