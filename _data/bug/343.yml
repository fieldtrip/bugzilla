+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "343"
    creation_ts: 2010-12-24 13:59:00 +0100
    short_desc: purpose of baseline in ft_sourceanalysis?
    delta_ts: 2011-05-11 14:48:24 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: inverse
    version: unspecified
    rep_platform: All
    op_sys: All
    bug_status: CLOSED
    resolution: WORKSFORME
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: johanna.zumer
      +@name: Johanna
    assigned_to:
      +content: johanna.zumer
      +@name: Johanna
    cc:
      - j.schoffelen
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "747"
        comment_count: "0"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2010-12-24 13:59:30 +0100
        thetext: "Jan-Mathijs asked me in relation to bug 199: if all I want is dip.pow from beamformer_lcmv, why not just use inv(lf*InvCy*lf) outside of calling ft_sourceanalysis?   My reason is that the filter I compute is not usually based on the same Cy as that to which I would apply the filter.  I prefer to compute the filter from an average of two covariances (e.g. active and baseline, or condition1 and condition2), then apply this filter to each covariance separately, in order to feel justified in comparing the conditions in source space.  Yes, I could easily make this average happen in my own external code, after calling ft_timelockanalysis and before calling ft_sourceanalysis, but I mention this since a framework for entering a 'baseline' exists in ft_sourceanalysis and initially confused me.   \n  \nCurrently, 'baseline' is only entered to ft_sourceanalysis a) for use with randomization or permutation, _and_ b) as multi-trial.  I think it might be a useful option to allow for baseline.cov to be averaged with data.cov for computing Cy (either with Ntrials>1 or =1).  \n\nFor memory reasons like with data.cov, I prefer baseline.cov to be from 'keeptrials=no', so allow for that type of input?\n\nI have already hacked my copy of ft_sourceanalysis to do this, and am happy to share if this is reasonable; otherwise I can do these steps in my own external code if this should not be a supported option."
      - +@isprivate: "0"
        commentid: "1985"
        comment_count: "1"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2011-05-04 15:58:25 +0200
        thetext: the solution to bug 637 will solve this question of how to combine data using FT functions _after_ call to timelockanalysis or freqanalysis, for use to input to ft_sourceanalysis.   this 'worksforme'.
      - +@isprivate: "0"
        commentid: "2084"
        comment_count: "2"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2011-05-11 14:47:22 +0200
        thetext: 'further information: use of cfg.offset with ft_redefinetrial will also be used to allow ft_appendtimelock to work over trials of data with time-windows of different times but equal lengths.'
