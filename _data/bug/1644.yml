+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1644"
    creation_ts: 2012-08-10 11:00:00 +0200
    short_desc: optional display of dewar/sensors in combination with realtime MEG headlocalizer
    delta_ts: 2019-08-10 11:56:31 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: realtime
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    dependson: "1726"
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: a.stolk8
      +@name: Arjen Stolk
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "6979"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-10 11:00:27 +0200
        thetext: "For a MEG guidelines paper we received the following suggestion from a reviewer.\n\n> * Recommend to use software which shows the head position with \n> respect to the dewar right after the HPI measurement to ensure correct positioning.\n> Reply: Thanks for this comment. This statement has been added on page 6.\n\nIt is a good idea as sanity check. I propose to make it optional (perhaps even with a button in the RT figure [*]) to switch on/off the channel positions. That allows the user to validate that the head is in an appropriate position. We might also want to change the head that is displayed to be more realistic.\n\n@Eelke: \n*] The idea of the button follows the discussion in the FT meeting on wednesday. We can in principle for all GUIs consider which keyboard buttons have a role, and whether those should also be added to the figure itself. Just like the \"q\" button which is used in quite a few plots."
      - +@isprivate: "0"
        commentid: "6980"
        comment_count: "1"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-10 12:10:40 +0200
        thetext: Yep, that'd be cool. Although I can see it may be dysfunctional as well, so the option to switch it on/off would be a must.
      - +@isprivate: "0"
        commentid: "6982"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-10 12:51:00 +0200
        thetext: "I recall there is a \"reset\" key that can be pressed. I would imagine a similar key being defined to toggle the visibility of the MEG channels (ft_plot_sens). \n\nWe might want to improve ft_plot_sens to show actual coils, rather than points.\n\nThe keyboard shortcuts (also \"q\" to quit?) could be added to the GUI as buttons."
      - +@isprivate: "0"
        commentid: "6983"
        comment_count: "3"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-10 12:57:15 +0200
        thetext: Right now, there's an 'update' key (U) reflecting the updating of reference positions to that of the current/realtime position. We could make a similar one for showing the sensors. Would it be nice to have a transparant dewar/sensor surface?
      - +@isprivate: "0"
        commentid: "6984"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-10 13:14:30 +0200
        thetext: |-
          We don't have a dewar surface description, nor a realistic head surface. I was first only thinking of plotting the MEG coils.

          Getting the CTF275 dewar surface coregistered properly would require some lab work (Lucia and Gareth at FIL/UCL have a scanned version, but that won't be coregistered). Initially the coils should be enough.
      - +@isprivate: "0"
        commentid: "6985"
        comment_count: "5"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-10 14:58:11 +0200
        thetext: Oki doki!
      - +@isprivate: "0"
        commentid: "7008"
        comment_count: "6"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-14 22:23:39 +0200
        thetext: With respect to the 'q' button to quit the application; do you know of way to effectuate a 'ctrl+c' operation in the matlab command window? This is how the buffer application is stopped now. I'm thinking in terms of eval('CTRL+C')..
      - +@isprivate: "0"
        commentid: "7009"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-14 22:44:24 +0200
        thetext: to be discussed tomorrow
      - +@isprivate: "0"
        commentid: "7011"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-15 09:13:32 +0200
        thetext: |-
          I suggest to use a piece of code like this

          % read the template coil positions
          if ~isempty(cfg.template)
              template = ft_read_headshape(cfg.template, 'coordinates', 'dewar');
              transform_dewar2head = headcoordinates(nas, lpa, rpa, 0); % the flag 0 means CTF
              transform_head2dewar = inv(transform_dewar2head);
          else
              template = [];
              transform_dewar2head = eye(4);
              transform_head2dewar = eye(4);
          end

          and then use ft_warp_apply
      - +@isprivate: "0"
        commentid: "7012"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-15 09:40:01 +0200
        thetext: |-
          See the following for examples on dealing with key presses in a figure


          manzana> grep -i KeyPressFcn *.m
          ft_analysisprotocol.m:    set(fig, 'KeyPressFcn', @key);
          ft_databrowser.m:set(h, 'KeyPressFcn',           @keyboard_cb);
          ft_multiplotTFR.m:  set(gcf, 'KeyPressFcn', {@key_sub, zmin, zmax})
          ft_singleplotER.m:  set(gcf, 'keypressfcn', {@key_sub, xmin, xmax, ymin, ymax})
          ft_singleplotTFR.m:  set(gcf, 'KeyPressFcn', {@key_sub, zmin, zmax})
          ft_topoplotTFR.m:  set(gcf, 'KeyPressFcn', {@key_sub, zmin, zmax})
      - +@isprivate: "0"
        commentid: "7037"
        comment_count: "10"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-20 10:51:24 +0200
        thetext: |-
          Added gui environment and key- and buttonpress callbacks to display the sensors(s), update the references (u), and to stop the application (q), and a couple more.

          See revision 6380 and younger.
      - +@isprivate: "0"
        commentid: "7067"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-22 11:13:04 +0200
        thetext: "Should we also add the block size to the GUI? \nPeople might want to update it online."
      - +@isprivate: "0"
        commentid: "7069"
        comment_count: "12"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-22 11:19:44 +0200
        thetext: |-
          Yep, good idea.

          (In reply to comment #11)
      - +@isprivate: "0"
        commentid: "7070"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-22 12:17:27 +0200
        thetext: 'see comment #12'
      - +@isprivate: "0"
        commentid: "7075"
        comment_count: "14"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-08-22 15:06:13 +0200
        thetext: |-
          btw, we need to deal with the issue that the grad field and the orig.hc field are not accompanied with the hdr information when transmitted over the buffer. this blocks us, at the moment, from plotting the sensors when real-time..

          (In reply to comment #13)
      - +@isprivate: "0"
        commentid: "7080"
        comment_count: "15"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-22 16:02:58 +0200
        thetext: |-
          (In reply to comment #14)

          please determine what is passed along. Perhaps you can store the output of ft_read_header on the buffer  in a mat file so that we can look at it offline.

          The section of ft_read_header line 921 is the relevant part.

          Btw. I dont think that the hc is possible in any way for online, but the res4 should have something useful in it.
      - +@isprivate: "0"
        commentid: "7455"
        comment_count: "16"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-20 09:48:24 +0200
        thetext: |-
          The FT_CHUNK_CTF_RES4 should allow for the full channel details to be transmitted over the network. See

          http://fieldtrip.fcdonders.nl/development/realtime/buffer_protocol#chunks_for_transmitting_extended_header_information1

          Perhaps it does not work in our MEG lab because an old implementation (~2009 or 2010) seems to be used. See also bug #1726
      - +@isprivate: "0"
        commentid: "8547"
        comment_count: "17"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 10:42:16 +0100
        thetext: |-
          It turns out that the 'res4 chunk' was not present in the header because acq2ftx did not write it. The solution is to have aq2ftx write it by specifying the additional 'R' flag when calling acq2ftx:

          acq2ftx -:1972:GR:1:*
      - +@isprivate: "0"
        commentid: "8549"
        comment_count: "18"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 10:48:05 +0100
        thetext: |-
          improved chunk handling when reading

          roboos@lab-pre042> svn commit
          Sending        fileio/ft_chantype.m
          Sending        fileio/ft_read_header.m
          Transmitting file data ..
          Committed revision 7088.
      - +@isprivate: "0"
        commentid: "8550"
        comment_count: "19"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 10:48:58 +0100
        thetext: |-
          It turns out that the 'res4 chunk' was not present in the header because acq2ftx did not write it. The solution is to have aq2ftx write it by specifying the additional 'R' flag when calling acq2ftx:

          acq2ftx -:1972:GR:1:*
      - +@isprivate: "0"
        commentid: "8553"
        comment_count: "20"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 11:04:57 +0100
        thetext: |-
          TODO:
          rename sap2matlab into decodesap
      - +@isprivate: "0"
        commentid: "8554"
        comment_count: "21"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 11:14:05 +0100
        thetext: "roboos@lab-pre042> svn commit \nSending        fileio/ft_read_header.m\nAdding         fileio/private/decode_res4.m\nTransmitting file data ..\nCommitted revision 7089."
      - +@isprivate: "0"
        commentid: "8561"
        comment_count: "22"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-12-05 12:29:44 +0100
        thetext: |-
          (In reply to comment #20)

          I checked sap2matlab: it is a mex file, so better don't touch it.
      - +@isprivate: "0"
        commentid: "8572"
        comment_count: "23"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 18:17:12 +0100
        thetext: realtime plotting of MEG (CTF) sensors now is functional
      - +@isprivate: "0"
        commentid: "8573"
        comment_count: "24"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2012-12-05 20:12:44 +0100
        thetext: Note that in order to plot the sensors, the sensor information needed to be made available though the buffer, independently from any other files. ft_read_header therefore was adjusted so that it also reads the additional header chunk (see earlier comment). For efficiency purposes, this needs to be done once when the additional header chunk is not updated. ft_reader_header incorporates this intelligence.
      - +@isprivate: "0"
        commentid: "19830"
        comment_count: "25"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 11:56:31 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue describing the issue on https://github.com/fieldtrip/fieldtrip/issues."
