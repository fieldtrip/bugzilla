+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "773"
    creation_ts: 2011-06-21 12:13:00 +0200
    short_desc: 'ft_compute_leadfield: cfg.pos as Nx3 and reducerank=''yes'' gives wrong results'
    delta_ts: 2011-06-22 13:44:10 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: forward
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: johanna.zumer
      +@name: Johanna
    assigned_to:
      +content: johanna.zumer
      +@name: Johanna
    comment_sort_order: oldest_to_newest
    long_desc:
      +@isprivate: "0"
      commentid: "2410"
      comment_count: "0"
      who:
        +content: johanna.zumer
        +@name: Johanna
      bug_when: 2011-06-21 12:13:51 +0200
      thetext: |-
        If reducerank='yes', then svd of 'lf' is done.  If Ndipoles = 1, then this is svd of a matrix sized nchan*3.   If Ndipoles >1, then svd of nchan*(3*Ndipoles) matrix, which is the incorrect computation.

        Most calls to ft_compute_leadfield by other FT code (e.g. ft_prepare_leadfield or ft_dipolesimulation) are either for-loops over pos, or have reducerank='no', hence not a problem.

        But I found a few which seem to allow the option of Nx3 and reducerank specified by user:

        beamformer_pcc.m   (for refdip and supdip)
        beamformer_dics.m  (for refdip)
        beamformer_sam.m   (for vox_pos)
        dipole_fit.m       (for pos)

        Or if the user calls ft_compute_leadfield directly.
