+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1326"
    creation_ts: 2012-02-13 12:13:00 +0100
    short_desc: preproc loop can be removed in rejectvisual_XXX and ft_timelockanalysis when cfg.preproc is empty
    delta_ts: 2012-03-14 10:00:40 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: jorn
      +@name: Jörn M. Horschig
    assigned_to:
      +content: eelke.spaak
      +@name: Eelke Spaak
    cc:
      - eelke.spaak
      - johanna.zumer
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "5267"
        comment_count: "0"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2012-02-13 12:13:00 +0100
        thetext: "Email conversation:\n\n--------------\n\nHey JM,\n\nI just found these lines in rejectvisual_trial:\nfor i=1:ntrl\n  ft_progress(i/ntrl, 'filtering data in trial %d of %d\\n', i, ntrl);\n  [data.trial{i}, label, time, cfg.preproc] = preproc(data.trial{i}, data.label, fsample, cfg.preproc, offset(i));\nend\n\nI had the impression that a filter was used  by default. I do not use want to use any filter, thus no cfg.preproc, and luckily the default is also that it is empty.  Is it okay if we make the loop conditional on whether cfg.preproc is not empty, or does preproc do anything else with the data? I couldn't find any apparent difference prior and after the loop. Note that from the output arguments, label and time are not used. And cfg.preproc should contain only default settings (which should all be disabled filtersettings), right?\n\nOn the one hand it would speed things greatly up, on the other hand it would remove the ambiguous (and wrong) text output. Am I missing something here?\n\nBest,\nJörn\n\n\n--------------\n\nI think not. If the default cfg does not affect the output data, I would say you could make it conditional. Note: is there no basseline-correction involved?\n\nJM\n\nPS: note that this also could to be done in ft_timelockanalysis \n\n\n--------------\n\nI don't think so:\n\npolyremoval: 'no'\n         polyorder: 2\n           detrend: 'no'\n            demean: 'no'\n    baselinewindow: 'all'\n\n\nBest,\nJörn"
      - +@isprivate: "0"
        commentid: "5391"
        comment_count: "1"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-02-29 14:38:04 +0100
        thetext: Fixed in rejectvisual_trial and rejectvisual_channel; not applicable for rejectvisual_summary (preproc called anyway for selection of data); ft_timelockanalysis already checked for an empty cfg.preproc.
      - +@isprivate: "0"
        commentid: "5396"
        comment_count: "2"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-02-29 14:54:52 +0100
        thetext: 'Sorry, forgot: revision 5333.'
      - +@isprivate: "0"
        commentid: "5537"
        comment_count: "3"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-03-14 10:00:40 +0100
        thetext: closing several bugs that have been RESOLVED for a long time
