+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2444"
    creation_ts: 2014-01-20 14:35:00 +0100
    short_desc: ft_selectdata_new fails on component data
    delta_ts: 2014-03-06 15:37:21 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    blocked: "1021"
    everconfirmed: "1"
    reporter:
      +content: eelke.spaak
      +@name: Eelke Spaak
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "12544"
        comment_count: "0"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2014-01-20 14:35:20 +0100
        thetext: |-
          When doing the following:

          cfg = [];
          cfg.latency = [0 1];
          dat = ft_selectdata(cfg, comp);

          I get this:

          Undefined function or variable "dimord".

          Error in ft_selectdata_new (line 128)
            dimtok = tokenize(dimord, '_');

          Error in ft_selectdata (line 51)
            [varargout{1:nargout}] = ft_selectdata_new(varargin{:});

          It seems that the function tries to treat the data as timelock/freq (which have a dimord), rather than comp (which is like raw). Will make test script after filing the bug.
      - +@isprivate: "0"
        commentid: "12545"
        comment_count: "1"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2014-01-20 14:40:11 +0100
        thetext: |-
          bash-4.1$ svn commit test_bug2444.m
          Adding         test_bug2444.m
          Transmitting file data .
          Committed revision 9112.

          For convenience, this is in the test script:

          %% make some data

          comp = [];
          comp.label = {'comp1', 'comp2'};
          comp.topolabel = {'chan1', 'chan2'};
          comp.time = {1:1000, 1:1000};
          comp.trial = {randn(2,1000), randn(2,1000)};
          comp.topo = eye(2);
          comp.unmixing = eye(2);

          %% select some data

          cfg = [];
          cfg.latency = [10 20];
          selected = ft_selectdata(cfg, comp);
      - +@isprivate: "0"
        commentid: "12546"
        comment_count: "2"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2014-01-20 14:42:25 +0100
        thetext: FWIW, ft_selectdata_old seems to work fine on component data.
      - +@isprivate: "0"
        commentid: "12550"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2014-01-21 09:41:05 +0100
        thetext: |-
          Hi Eelke,
          Also check out test_ft_selectdata. It's an extensive test script that aims (eventually) at testing all user scenarios. Did not incorporate 'comp' data yet.
      - +@isprivate: "0"
        commentid: "12835"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2014-02-14 14:21:08 +0100
        thetext: |-
          Sending        utilities/ft_selectdata_new.m
          Transmitting file data .
          Committed revision 9200.
