+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "860"
    creation_ts: 2011-08-03 16:22:00 +0200
    short_desc: ft_neighbourplot crashes
    delta_ts: 2011-09-06 14:37:08 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: eelke.spaak
      +@name: Eelke Spaak
    assigned_to:
      +content: jorn
      +@name: Jörn M. Horschig
    cc: jorn
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "2815"
        comment_count: "0"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2011-08-03 16:22:07 +0200
        thetext: "Executing this:\n\n>> cfg = [];\ncfg.method = 'template';\ncfg.template = 'CTF275_neighb.mat';\ncfg.feedback = 'yes';\nneighbours = ft_neighbourselection(cfg,data);\n\nresults in this:\n\nTrying to load sensor neighbours from a template\nSuccessfully loaded neighbour structure from CTF275_neighb.mat\nthere are on average 7.5 neighbours per channel\nUsing the gradiometer configuration from the dataset.\nundoing the invcomp balancing\nWarning: the linear projection for the montage is not full-rank, the resulting data will have reduced\ndimensionality \n> In ft_apply_montage at 76\n  In ft-src/private/undobalancing at 29\n  In ft-src/private/channelposition at 31\n  In ft_neighbourplot at 82\n  In ft_neighbourselection at 199\nundoing the comp balancing\n??? Attempted to access proj(274,1); index out of bounds because size(proj)=[273,3].\n\nError in ==> ft_neighbourplot at 163\n        hs(i) = line(proj(i, 1), proj(i, 2), proj(i, 3),                                ...\n\nError in ==> ft_neighbourselection at 199\n        ft_neighbourplot(cfg, data);\n \n163         hs(i) = line(proj(i, 1), proj(i, 2), proj(i, 3),      ..."
      - +@isprivate: "0"
        commentid: "2816"
        comment_count: "1"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2011-08-03 16:24:17 +0200
        thetext: Also, I am a bit puzzled by ft_neighbourplot's behaviour. What is it doing with my gradiometer structure, if I explicitly use neighbours from a template?
      - +@isprivate: "0"
        commentid: "2817"
        comment_count: "2"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2011-08-04 09:33:44 +0200
        thetext: |-
          hey hey,

          the problem should be due to having a different amount of sensors in the neighbourhood structure than there are in the data. The template got 275 channels, while the neighbourhood structure of your data probably only got 273. I will work on that.

          To answer your other question: For plotting, the function needs information about the position of the sensors. In order to plot in 3D space, it reads from the grad to get the exact sensor positions.
      - +@isprivate: "0"
        commentid: "2818"
        comment_count: "3"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2011-08-04 10:00:43 +0200
        thetext: |-
          done, have fun ;)
          I also fixed a hole in the template around MLT26/MLT47
