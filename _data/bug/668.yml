+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "668"
    creation_ts: 2011-05-13 21:55:00 +0200
    short_desc: ft_artifact_zvalue causes a steadily increasing memory use
    delta_ts: 2011-09-14 14:33:30 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: minor
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: jorn
      +@name: Jörn M. Horschig
    cc:
      - j.schoffelen
      - johanna.zumer
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "2112"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-13 21:55:54 +0200
        thetext: |-
          ... which causes it to run out of memory on a ctf151 datasetr on my 4GB laptop!

          Once upon a time, it used to work so efficient memory wise, but this problem suggests that we cannot even process a 275 channel dataset on a 8GB computer any more.

          This needs discussion in the FT meeting.
      - +@isprivate: "0"
        commentid: "2119"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-13 21:57:14 +0200
        thetext: changed status from multiple bugs from NEW into ASSIGNED
      - +@isprivate: "0"
        commentid: "2126"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-13 21:58:09 +0200
        thetext: changed status from multiple bugs from NEW to ASSIGNED
      - +@isprivate: "0"
        commentid: "2127"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-05-15 20:06:00 +0200
        thetext: 'Are you passing a data structure as second input argument? In other words: is the function required to fetch or read the data?'
      - +@isprivate: "0"
        commentid: "2129"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-15 20:59:29 +0200
        thetext: reading from disk
      - +@isprivate: "0"
        commentid: "2757"
        comment_count: "5"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2011-07-26 12:04:04 +0200
        thetext: "Might the problem be caused just by storing the data? In my case, 137 trials, this is already ~1.5gigs:\n\nName                Size                  Bytes  Class      Attributes\ndat                 1x137            1408594544  cell \n\nThe rest of the code looks quite memory-efficient.\nBtw, in case you give data as an input argument, the data is stored again in a dat-matrix, which also is extremely inefficient.\n\nIf we do not want to store the data in memory, then we need to apply the preprocessing algorithm twice to the data (thus the function will be twice as slow), once for calculating the mean and standard devitation, and once for transforming the amplitude-values to z-values.\n\nShould I add a cfg-option which allows this? I think it might be preferable to do on low-memory machines."
      - +@isprivate: "0"
        commentid: "2957"
        comment_count: "6"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2011-08-29 17:06:36 +0200
        thetext: As discussed some weeks ago, I fixed this so that ft_artifact_zvalue can be called with cfg.memory='low', meaning that it will require way less memory (but more computation time). If strcmp(cfg.memory, 'low') then it will not store all the preprocessed data, but in return do the desired preprocessing two times, in two different loops
      - +@isprivate: "0"
        commentid: "3184"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-09-14 14:33:30 +0200
        thetext: "I closed all the bugs that were in the status RESOLVED. \n\nThis includes the ones that we just discussed in the weekly fieldtrip meeting, but also the bugs that we did not discuss."
