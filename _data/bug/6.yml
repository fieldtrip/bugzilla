+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "6"
    creation_ts: 2010-01-07 11:54:00 +0100
    short_desc: add cfg.inputfile and cfg.outputfile to all fieldtrip functions
    delta_ts: 2010-07-01 14:08:08 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: enhancement
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: t.engelkes
      +@name: Tim Engelkes
    cc: t.engelkes
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "9"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-01-07 11:54:39 +0100
        thetext: "Most functions work like this\n\nargout = funname(cfg, argin)\n\nit would be nice to be able to specify cfg.inputfile and cfg.outputfile instead of argin and argout, so that one could do \n\nfunname(cfg)\n\nwhich would also read and write to disk"
      - +@isprivate: "0"
        commentid: "134"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-04-29 16:53:34 +0200
        thetext: has been done for preprocessing
      - +@isprivate: "0"
        commentid: "135"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-04-29 17:01:05 +0200
        thetext: |-
          The following functions in fieldtrip/*.m use the nargin command and probably have variable number of input arguments

          roboos@mentat001> grep -l nargin *.m
          ft_appenddata.m
          ft_artifact_clip.m
          ft_artifact_ecg.m
          ft_artifact_eog.m
          ft_artifact_jump.m
          ft_artifact_muscle.m
          ft_artifact_threshold.m
          ft_artifact_zvalue.m
          ft_channelcombination.m
          ft_connectivityanalysis.m
          ft_databrowser.m
          ft_freqanalysis.m
          ft_headmodelplot.m
          ft_layoutplot.m
          ft_multiplotER.m
          ft_prepare_bemmodel.m
          ft_prepare_layout.m
          ft_prepare_leadfield.m
          ft_prepare_localspheres.m
          ft_prepare_mesh.m
          ft_prepare_singleshell.m
          ft_preprocessing.m
          ft_recodeevent.m
          ft_rejectartifact.m
          ft_rejectcomponent.m
          ft_singleplotER.m
          ft_sourceanalysis.m
          ft_sourcedescriptives.m
          ft_volumerealign.m
          sourcestatistics_randomization.m
          surfaceplot.m
          topoplot.m
      - +@isprivate: "0"
        commentid: "136"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-04-29 17:02:25 +0200
        thetext: |-
          (In reply to comment #2)

          you should also check on the presence of varargin
      - +@isprivate: "0"
        commentid: "137"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-04-29 17:12:21 +0200
        thetext: |-
          the following would make cfg.inputfile robust against the name of the variable in the file

          var = whos('-file', filename);
          if length(var)==1
            % read the one variable in the file, regardless of how it is called
            tmp = load(filename);
            data = tmp.(var.name);
            clear tmp
          else
            % if multiple variables are present, then one of them MUST be called data
            load(filename, 'data');
          end
      - +@isprivate: "0"
        commentid: "138"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-04-29 17:22:51 +0200
        thetext: |-
          (In reply to comment #4)

          more elaborate versions:

          function out = loadvar(filename, varname)
          var = whos('-file', filename);
          if length(var)==1
            % read the one variable in the file, regardless of how it is called
            tmp = load(filename);
            data = tmp.(var.name);
            clear tmp
          else
            % if multiple variables are present, then one of them MUST be called data
            load(filename, 'data');
          end



          function savevar(filename, varname, var)
          eval(sprintf('%s = var;', varname));
          save(filename, varname);
