+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3096"
    creation_ts: 2016-03-15 15:28:00 +0100
    short_desc: make a graphical channel selection
    delta_ts: 2017-08-23 08:51:04 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: ASSIGNED
    resolution:
    see_also:
      - http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3033
      - http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=2837
      - http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3334
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "17148"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-15 15:28:34 +0100
        thetext: |-
          this should probably be part of ft_channelselection, or possibly in private/select_channel_list

          The idea is that ft_databrowser, but also other functions, would show a dialog in which the user selects channels from a topography, just like selecting them in a multiplot.
      - +@isprivate: "0"
        commentid: "17150"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 10:10:35 +0100
        thetext: |-
          I implemented this. I now realize that the disadvantage is that sometimes not all channels are present in the layout (e.g. EOG and trigger channels). Hence I added a cfg.selectchannel=list/layout option to ft_databrowser, so that the user can specify either GUI.

          mac011> git commit -a
          [bug3096 1f0d4c8] ENH - implemented GUI for channel selection on basis of the layout, see http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3096
           3 files changed, 226 insertions(+), 102 deletions(-)

          mac011> git push --set-upstream origin bug3096
          X11 forwarding request failed on channel 0
          Counting objects: 106, done.
          Delta compression using up to 4 threads.
          Compressing objects: 100% (25/25), done.
          Writing objects: 100% (25/25), 5.60 KiB | 0 bytes/s, done.
          Total 25 (delta 18), reused 0 (delta 0)
          To git@github.com:robertoostenveld/fieldtrip.git
           * [new branch]      bug3096 -> bug3096
          Branch bug3096 set up to track remote branch bug3096 from origin.
      - +@isprivate: "0"
        commentid: "17151"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 10:11:40 +0100
        thetext: note that the default channel selection GUI has not changed
      - +@isprivate: "0"
        commentid: "17153"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 10:20:15 +0100
        thetext: |-
          I have been testing with elekta data, which has magnetometers, gradiometers and electrodes. I realize that the GUI selection is suboptimal. I wish I could do

          cfg.layout = {'neuromag306mag.lay', 'neuromag306planar.lay', 'eeg1010.lay'}

          and have them appear side by side.

          This relates to bug 3033 and to 2837.
      - +@isprivate: "0"
        commentid: "17159"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 12:17:01 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #3)

          I have now implemented this in ft_prepare_layout.
      - +@isprivate: "0"
        commentid: "17160"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 12:19:41 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #4)

          this has a number of interesting side-effects. It is possible to select the different types of channels, but also in ft_databrowser to make a multiplotER and subsequent topoplots. The vertical scaling is however very different and therefore the figures don't look good. But each channel type separately (mag, planar, eeg) work fine.
      - +@isprivate: "0"
        commentid: "17170"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 16:10:23 +0100
        thetext: |-
          It is extending well beyond channel selection. The reason for starting this is to demo video MEG on a Elekta dataset that includes EEG+MAG+GRAD channels. I am now continuing to implement scaling and multi/topoplotting with a super-layout, i.e. one that consists of three layouts (for the EEG, MAG and GRAD) side-by-side.

          mac011> git commit -a
          [bug3096 e0bf959] Enhancements to handling of multiple layouts, for channel selection, multiplot and for topoplot. The channel scaling is now done using ft_apply_montage. Small change in EEG selection in ft_channelselection. Use mask_individual instead of mask for interplim in ft_plot_topo.
           8 files changed, 95 insertions(+), 72 deletions(-)
