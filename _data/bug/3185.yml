+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3185"
    creation_ts: 2016-10-17 17:53:00 +0200
    short_desc: incompatibility of ft_realtime_headlocalizer and new CTF hardware electronics
    delta_ts: 2018-06-19 09:57:15 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: realtime
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: johanna.zumer
      +@name: Johanna
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc:
      - erik.vandenboogert
      - George.Oneill
      - r.oostenveld
      - sxm1085
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "17825"
        comment_count: "0"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2016-10-17 17:53:41 +0200
        thetext: "Hi all (but in particular Robert),\n\nI've collected MEG at Nottingham not too long ago (spring 2016) and the ft_realtime_headlocalizer there was working fine in communication with their CTF hardware.   However, over the summer they had a hardware upgrade, and apparently only 2 sites in the world have this new version (Nottingham and Beijing).   Unfortunately, it does not seem to communicate with the ft_realtime_headlocalizer anymore.\n\nI don't know the details of what aspect doesn't work... it is now Sebastian who is trying to use it.  Please contact Sebastian Michelmann (SXM1085@student.bham.ac.uk) and/or George O'Neill (George.Oneill@nottingham.ac.uk) for details.  (I'm just filing this on their behalf).   They should be added to the cc of this bug.  \n\nIs this something you can assist Sebastian/George with fixing?  Presumably more CTF sites will eventually get this hardware upgrade.\n\nCheers and thank you,\nJohanna"
      - +@isprivate: "0"
        commentid: "17826"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-10-17 21:50:05 +0200
        thetext: "I just added George to the bug report (@George, please reset your password).\n\nThere was a poster at Biomag from a CTF engineer outlining the new realtime interface. I forgot his name, but we should try to get that person in the loop to give us more details.\n\nRegarding new electronics: I am not sure whether the new electronics is per see the cause, or \"merely\" the upgrade to a new acquisition computer (with upgraded software). At Cardiff they also have the new computer, but with the old electronics. At Donders we'll also get that mixed setup.\n\nI had expected that the updated version of the Acq software still would allow the same shared memory (IPC shmem) interface. It would be the same inefficient interface, but I don't see why they would have removed it as it would not interfere with a newer interface.  \n\nCould you (i.e. someone at Nottingham) check the acquisition computer with the Linux IPCS command? See http://stackoverflow.com/questions/18786466/command-to-check-status-of-message-queue-and-shared-memory-in-linux. There should be a bunch of IPC shared memory segments. If you post them here, I can compare them to the ones we have on our old Nijmegen acquisition computer."
      - +@isprivate: "0"
        commentid: "17827"
        comment_count: "2"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2016-10-18 13:24:58 +0200
        thetext: "Running the command ipcs -m returns:\n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n0x00000000 1441792    meg        600        393216     2          dest         \n0x00000000 1474561    meg        600        393216     2          dest         \n0x00000000 1507330    meg        600        393216     2          dest         \n0x00000000 1540099    meg        600        393216     2          dest         \n0x00000000 1572868    meg        600        393216     2          dest         \n0x00000000 1605637    meg        600        393216     2          dest         \n0x00000000 1638406    meg        600        393216     2          dest         \n0x00000000 1671175    meg        600        393216     2          dest         \n0x00000000 1703944    meg        600        393216     2          dest         \n0x00000000 1736713    meg        600        393216     2          dest         \n0x00000000 1769482    meg        600        393216     2          dest         \n0x00000000 1802251    meg        600        393216     2          dest         \n0x00000000 1835020    meg        600        393216     2          dest         \n0x00000000 1867789    meg        600        393216     2          dest         \n0x00000000 1900558    meg        600        393216     2          dest         \n0x00000000 1966095    meg        600        393216     2          dest         \n0x00000000 1998864    meg        600        393216     2          dest         \n0x00000000 2031633    meg        600        393216     2          dest         \n0x00000000 2064402    meg        600        393216     2          dest         \n0x00000000 2097171    meg        600        393216     2          dest   \n\nJust as an additional sanity check, I queried /proc/sys/kernel/shmmax and it returned 68719476736."
      - +@isprivate: "0"
        commentid: "17828"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-10-18 13:49:12 +0200
        thetext: "(In reply to George O'Neill from comment #2)\n\nOn our acquisition computer I get this\n\nipcs -m\n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status      \n0x00000000 15826944   root      777        94208      1                       \n0x39457f73 29458441   meg       666        67600000   1                       \n0x00000000 16646154   root      644        106496     2          dest         \n0x00000000 29491213   root      777        4096       1                       \n0x00000000 29523982   root      777        4096       1                       \n\nSee also https://github.com/fieldtrip/fieldtrip/blob/master/realtime/src/acquisition/ctf/AcqBuffer.h\nwhich has\n#define ACQ_MSGQ_SIZE      600\n#define ACQ_MSGQ_SHMKEY    0x39457f73\n\nSo the 2nd segment is where the realtime data gets passed. That also makes sense on the basis of the size, it should hold 600 packets of 28160 samples each. Well, it does not match completely, but it is close: 28160*4*600=67584000 \n\nYou don't have this. Did you (or could you) try both sequences of starting acq2ftx and Acq? I.e. first start one, then the other, and vice versa. \n\nIf that does not solve it, we should bet CTF involved (and/or look at the CTF code, which I don't have)."
      - +@isprivate: "0"
        commentid: "17829"
        comment_count: "4"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2016-10-18 15:11:38 +0200
        thetext: "Apologies, I forgot to run acq2ftx when checking the shared memory. Indeed the addressed memory appears when running the binary.\n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status  \n    \n...\n        \n0x00000000 2129939    meg        600        393216     2          dest         \n0x39457f73 2162708    meg        666        67600000   2\n\nNote: nattch changes from 1 to 2 once acquisition starts on memory address 0x39457f73.     \n\n\nIf Acq is launched before acq2ftx (with options -:1972:RE:1:*) then ac2ftx hangs on 'Waiting (on 0)' irrespective if the data is being recorded to disk.\n\nIf we launch acq2ftx before Acq, it detects the file being created and reads the res4 file as shown below\n\nSetup | ID=0 | /ctfmeg/M041-acq2/data/meg/CTF_DATA/20161018/Noise_Noise_20161018_01.ds\n\nCTF RES4 file /ctfmeg/M041-acq2/data/meg/CTF_DATA/20161018/Noise_Noise_20161018_01.ds/Noise_Noise_20161018_01.res4 contains 3167523 bytes.\nNumber of channels: 302\nSampling frequency: 600.000000 Hz\nCh 1: SCLK01  Gain: 1\nCh 2: BG1  Gain: 7.96683e-15\nCh 3: BG2  Gain: -7.43626e-15\nCh 4: BG3  Gain: 8.28958e-15\nCh 5: BP1  Gain: -7.13271e-15 \n\netc.\n\nAfter that system repeatedly prints 'Waiting (on 1)' irrespective of head localisation being started or if data is being recording to disk or merely being previewed. \n\nHowever this is not all... The strangest part is that if acq2ftx enters this 'Waiting (on 1)' period then the MEG seems to detect ~uT amplitude field changes across all channels and Acq will crash at the end of recording, and reviewing the data in DataEditior shows a 'broken' fieldmap. (I can send some example data over if you are interested in what effect it has!). One has to restart the acquisition machine to return to normal operation. \n\nBelow is a somewhat intimidating crash log associated with it.\n\n*** glibc detected *** Acq: double free or corruption (out): 0xd5879008 ***\n======= Backtrace: =========\n/lib/libc.so.6[0x3ebc81]\n/lib/libc.so.6[0x3ee5a1]\n/usr/lib/libstdc++.so.6(_ZdlPv+0x22)[0xf74b1df2]\n/usr/lib/libstdc++.so.6(_ZdaPv+0x1e)[0xf74b1e4e]\nAcq[0x82bbe84]\nAcq[0x83d83c2]\nAcq[0x82de8df]\nAcq[0x82e23c4]\nAcq[0x82c1abd]\nAcq[0x8200630]\nAcq[0x81ddb7e]\nAcq[0x81e3909]\nAcq[0x81e438f]\n/usr/lib/libXt.so.6(XtCallCallbackList+0x121)[0xb32631]\n/usr/lib/libXm.so.4[0x7dbc68]\n/usr/lib/libXt.so.6(XtCallCallbackList+0xb6)[0xb325c6]\n/usr/lib/libXm.so.4[0x7e5e78]\n/usr/lib/libXm.so.4[0x7e747e]\n/usr/lib/libXm.so.4(_XmDispatchGadgetInput+0x1af)[0x7b62ff]\n/usr/lib/libXm.so.4(_XmGadgetActivate+0x3f)[0x870f5f]\n/usr/lib/libXt.so.6[0xb6a37b]\n/usr/lib/libXt.so.6(_XtTranslateEvent+0x394)[0xb6ab94]\n/usr/lib/libXt.so.6(XtDispatchEventToWidget+0x46a)[0xb40e1a]\n/usr/lib/libXt.so.6[0xb41653]\n/usr/lib/libXt.so.6(XtDispatchEvent+0xb1)[0xb405c1]\nAcq[0x8694712]\nAcq[0x8694690]\nAcq[0x8145348]\n/lib/libc.so.6(__libc_start_main+0xe6)[0x391d36]\nAcq[0x8057da1]\n======= Memory map: ========\n00359000-00377000 r-xp 00000000 fd:00 3149806                            /lib/ld-2.12.so\n00377000-00378000 r-xp 0001d000 fd:00 3149806                            /lib/ld-2.12.so\n00378000-00379000 rwxp 0001e000 fd:00 3149806                            /lib/ld-2.12.so\n0037b000-0050b000 r-xp 00000000 fd:00 3149663                            /lib/libc-2.12.so\n0050b000-0050c000 ---p 00190000 fd:00 3149663                            /lib/libc-2.12.so\n0050c000-0050e000 r-xp 00190000 fd:00 3149663                            /lib/libc-2.12.so\n0050e000-0050f000 rwxp 00192000 fd:00 3149663                            /lib/libc-2.12.so\n0050f000-00512000 rwxp 00000000 00:00 0 \n00514000-0051c000 r-xp 00000000 fd:00 943414                             /usr/lib/libXrender.so.1.3.0\n0051c000-0051d000 rwxp 00007000 fd:00 943414                             /usr/lib/libXrender.so.1.3.0\n0051f000-00655000 r-xp 00000000 fd:00 944423                             /usr/lib/libX11.so.6.3.0\n00655000-00659000 rwxp 00135000 fd:00 944423                             /usr/lib/libX11.so.6.3.0\n0065b000-00681000 r-xp 00000000 fd:00 3149733                            /lib/libexpat.so.1.5.2\n00681000-00683000 rwxp 00025000 fd:00 3149733                            /lib/libexpat.so.1.5.2\n00685000-006b8000 r-xp 00000000 fd:00 944379                             /usr/lib/libfontconfig.so.1.4.4\n006b8000-006ba000 rwxp 00032000 fd:00 944379                             /usr/lib/libfontconfig.so.1.4.4\n006bc000-006dc000 r-xp 00000000 fd:00 944377                             /usr/lib/libxcb.so.1.1.0\n006dc000-006dd000 rwxp 0001f000 fd:00 944377                             /usr/lib/libxcb.so.1.1.0\n006df000-00706000 r-xp 00000000 fd:00 944371                             /usr/lib/libpng12.so.0.49.0\n00706000-00707000 rwxp 00026000 fd:00 944371                             /usr/lib/libpng12.so.0.49.0\n00709000-0070c000 r-xp 00000000 fd:00 3149678                            /lib/libdl-2.12.so\n0070c000-0070d000 r-xp 00002000 fd:00 3149678                            /lib/libdl-2.12.so\n0070d000-0070e000 rwxp 00003000 fd:00 3149678                            /lib/libdl-2.12.so\n00710000-00724000 r-xp 00000000 fd:00 944490                             /usr/lib/libXft.so.2.3.1\n00724000-00725000 rwxp 00013000 fd:00 944490                             /usr/lib/libXft.so.2.3.1\n00727000-009ba000 r-xp 00000000 fd:00 944375                             /usr/lib/libXm.so.4.0.3\n009ba000-009d2000 rwxp 00293000 fd:00 944375                             /usr/lib/libXm.so.4.0.3\n009d2000-009d3000 rwxp 00000000 00:00 0 \n009d5000-00a6a000 r-xp 00000000 fd:00 944431                             /usr/lib/libfreetype.so.6.3.22\n00a6a000-00a6e000 rwxp 00094000 fd:00 944431                             /usr/lib/libfreetype.so.6.3.22\n00a70000-00a74000 r-xp 00000000 fd:00 3149712                            /lib/libuuid.so.1.3.0\n00a74000-00a75000 rwxp 00003000 fd:00 3149712                            /lib/libuuid.so.1.3.0\n00a77000-00a7e000 r-xp 00000000 fd:00 944465                             /usr/lib/libXp.so.6.2.0\n00a7e000-00a7f000 rwxp 00006000 fd:00 944465                             /usr/lib/libXp.so.6.2.0\n00a81000-00a98000 r-xp 00000000 fd:00 943368                             /usr/lib/libICE.so.6.3.0\n00a98000-00a9a000 rwxp 00016000 fd:00 943368                             /usr/lib/libICE.so.6.3.0\n00a9a000-00a9b000 rwxp 00000000 00:00 0 \n00a9d000-00aaf000 r-xp 00000000 fd:00 3149676                            /lib/libz.so.1.2.3\n00aaf000-00ab0000 r-xp 00011000 fd:00 3149676                            /lib/libz.so.1.2.3\n00ab0000-00ab1000 rwxp 00012000 fd:00 3149676                            /lib/libz.so.1.2.3\n00ab3000-00ab5000 r-xp 00000000 fd:00 943337                             /usr/lib/libXau.so.6.0.0\n00ab5000-00ab6000 rwxp 00001000 fd:00 943337                             /usr/lib/libXau.so.6.0.0\n00ab8000-00afe000 r-xp 00000000 fd:00 944492                             /usr/lib/libjpeg.so.62.0.0\n00afe000-00aff000 rwxp 00046000 fd:00 944492                             /usr/lib/libjpeg.so.62.0.0\n00aff000-00b0f000 rwxp 00000000 00:00 0 \n00b11000-00b22000 r-xp 00000000 fd:00 943383                             /usr/lib/libXext.so.6.4.0\n00b22000-00b23000 rwxp 00010000 fd:00 943383                             /usr/lib/libXext.so.6.4.0\n00b25000-00b7e000 r-xp 00000000 fd:00 944461                             /usr/lib/libXt.so.6.0.0\n00b7e000-00b82000 rwxp 00058000 fd:00 944461                             /usr/lib/libXt.so.6.0.0\n00b84000-00bac000 r-xp 00000000 fd:00 3149670                            /lib/libm-2.12.so\n00bac000-00bad000 r-xp 00027000 fd:00 3149670                            /lib/libm-2.12.so\n00bad000-00bae000 rwxp 00028000 fd:00 3149670                            /lib/libm-2.12.so\n00bb0000-00bc7000 r-xp 00000000 fd:00 944463                             /usr/lib/libXmu.so.6.2.0\n00bc7000-00bc8000 rwxp 00017000 fd:00 944463                             /usr/lib/libXmu.so.6.2.0\n00bca000-00bd1000 r-xp 00000000 fd:00 943385                             /usr/lib/libSM.so.6.0.1\n00bd1000-00bd2000 rwxp 00006000 fd:00 943385                             /usr/lib/libSM.so.6.0.1\n08048000-0878c000 r-xp 00000000 fd:00 2495702                            /opt/ctf/bin.release/Acq\n0878c000-088eb000 rwxp 00743000 fd:00 2495702                            /opt/ctf/bin.release/Acq\n088eb000-08a1d000 rwxp 00000000 00:00 0 \n0a417000-235a6000 rwxp 00000000 00:00 0                                  [heap]\n77f00000-77f21000 rwxp 00000000 00:00 0 \n77f21000-78000000 ---p 00000000 00:00 0 \n78000000-78021000 rwxp 00000000 00:00 0 \n78021000-78100000 ---p 00000000 00:00 0 \n78100000-78121000 rwxp 00000000 00:00 0 \n78121000-78200000 ---p 00000000 00:00 0 \n78200000-78221000 rwxp 00000000 00:00 0 \n78221000-78300000 ---p 00000000 00:00 0 \n78300000-78321000 rwxp 00000000 00:00 0 \n78321000-78400000 ---p 00000000 00:00 0 \n78400000-78421000 rwxp 00000000 00:00 0 \n78421000-78500000 ---p 00000000 00:00 0 \n78500000-78521000 rwxp 00000000 00:00 0 \n78521000-78600000 ---p 00000000 00:00 0 \n78600000-78621000 rwxp 00000000 00:00 0 \n78621000-78700000 ---p 00000000 00:00 0 \n78700000-78721000 rwxp 00000000 00:00 0 \n78721000-78800000 ---p 00000000 00:00 0 \n78800000-78821000 rwxp 00000000 00:00 0 \n78821000-78900000 ---p 00000000 00:00 0 \n78900000-78921000 rwxp 00000000 00:00 0 \n78921000-78a00000 ---p 00000000 00:00 0 \n78a00000-78a21000 rwxp 00000000 00:00 0 \n78a21000-78b00000 ---p 00000000 00:00 0 \n78b00000-78b21000 rwxp 00000000 00:00 0 \n78b21000-78c00000 ---p 00000000 00:00 0 \n78c00000-78c21000 rwxp 00000000 00:00 0 \n78c21000-78d00000 ---p 00000000 00:00 0 \n78d00000-78d21000 rwxp 00000000 00:00 0 \n78d21000-78e00000 ---p 00000000 00:00 0 \n78e00000-78e21000 rwxp 00000000 00:00 0 \n78e21000-78f00000 ---p 00000000 00:00 0 \n78f00000-78f21000 rwxp 00000000 00:00 0 \n78f21000-79000000 ---p 00000000 00:00 0 \n79000000-79021000 rwxp 00000000 00:00 0 \n79021000-79100000 ---p 00000000 00:00 0 \n79100000-79121000 rwxp 00000000 00:00 0 \n79121000-79200000 ---p 00000000 00:00 0 \n79200000-79221000 rwxp 00000000 00:00 0 \n79221000-79300000 ---p 00000000 00:00 0 \n79300000-793f9000 rwxp 00000000 00:00 0 \n793f9000-79400000 ---p 00000000 00:00 0 \n79400000-79421000 rwxp 00000000 00:00 0 \n79421000-79500000 ---p 00000000 00:00 0 \n79500000-79521000 rwxp 00000000 00:00 0 \n79521000-79600000 ---p 00000000 00:00 0 \n79600000-79621000 rwxp 00000000 00:00 0 \n79621000-79700000 ---p 00000000 00:00 0 \n79700000-79721000 rwxp 00000000 00:00 0 \n79721000-79800000 ---p 00000000 00:00 0 \n79800000-79821000 rwxp 00000000 00:00 0 \n79821000-79900000 ---p 00000000 00:00 0 \n79900000-79921000 rwxp 00000000 00:00 0 \n79921000-79a00000 ---p 00000000 00:00 0 \n79a00000-79a21000 rwxp 00000000 00:00 0 \n79a21000-79b00000 ---p 00000000 00:00 0 \n79b00000-79b21000 rwxp 00000000 00:00 0 \n79b21000-79c00000 ---p 00000000 00:00 0 \n79c00000-79c21000 rwxp 00000000 00:00 0 \n79c21000-79d00000 ---p 00000000 00:00 0 \n79d00000-79d21000 rwxp 00000000 00:00 0 \n79d21000-79e00000 ---p 00000000 00:00 0 \n79e00000-79e21000 rwxp 00000000 00:00 0 \n79e21000-79f00000 ---p 00000000 00:00 0 \n79f00000-79f21000 rwxp 00000000 00:00 0 \n79f21000-7a000000 ---p 00000000 00:00 0 \n7a000000-7a021000 rwxp 00000000 00:00 0 \n7a021000-7a100000 ---p 00000000 00:00 0 \n7a100000-7a121000 rwxp 00000000 00:00 0 \n7a121000-7a200000 ---p 00000000 00:00 0 \n7a200000-7a221000 rwxp 00000000 00:00 0 \n7a221000-7a300000 ---p 00000000 00:00 0 \n7a300000-7a321000 rwxp 00000000 00:00 0 \n7a321000-7a400000 ---p 00000000 00:00 0 \n7a400000-7a421000 rwxp 00000000 00:00 0 \n7a421000-7a500000 ---p 00000000 00:00 0 \n7a500000-7a521000 rwxp 00000000 00:00 0 \n7a521000-7a600000 ---p 00000000 00:00 0 \nc6600000-c666b000 rwxp 00000000 00:00 0 \nc666b000-c6678000 ---p 00000000 00:00 0 \nc6678000-c6700000 ---p 00000000 00:00 0 \nc6800000-c68f8000 rwxp 00000000 00:00 0"
      - +@isprivate: "0"
        commentid: "17831"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-10-18 17:19:02 +0200
        thetext: "(In reply to George O'Neill from comment #4)\n\nnattch changing from 1 to 2 is a good sign, it is the number of processes attached to the memory. The shared memory needs to be created prior to Acq using it, i.e. Acq does not create it, but will use it when present. \n\nAlso: if not already present at start of Acq, it will _not_ start using it later. Hence acq2ftx will wait forever.\n\nFurthermore, it reading the res4 file means that the name of the res4 file is still being picked up correctly from the shared memory. So it seems that the interface still exists, but that it is broken on the CTF side.\n\nIt might be (and would not surprise me) that the organization of the shared memory has changed, or is messed up in the new code. E.g. byte alignment of C structures represented in RAM may have changed due to switching from 32 to 64 bits OS.\n\nDo you have new (pdf) documentation to go with the updated software? Do you have access to CTF source code (under a NDA or so)?\n\nYou may want to explore the \"ctf_shm\" format in ft_read_header and ft_read_data, which use the fileio/private/read_ctf_shm.mexglx file and read_shm_data.m, read_shm_event.m, read_shm_header.m. \n\nThe source code for that mex file is in fieldtrip/src and it reads the packets directly from shared memory. I used it for debugging and as an initial implementation to the realtime CTF interface but realized that a stand-alone executable would be easier. \n\nBy peeking in the shared memory (with the mex file) you may get a better feel for what is going wrong.\n\nBut possibly more efficient is to ask a software engineer at CTF to get involved... do you have a lead at CTF for this? If not, I can ask at their support desk."
      - +@isprivate: "0"
        commentid: "17840"
        comment_count: "6"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2016-10-21 15:28:15 +0200
        thetext: |-
          We've not received any documentation with the new release of software, or have access to the source code yet. Having asked for new documentation recently we were told it will be "coming soon". I shall have a bit of a further dig and will report back in due course.

          Intrestingly, I've also found in the old Acq manual the appendix describing the realtime interface libraries ctf provided. I shall use those as another start point.
      - +@isprivate: "0"
        commentid: "17986"
        comment_count: "7"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2016-11-18 12:14:19 +0100
        thetext: |-
          I have some updates on the situation. CTF have pointed out that the size of the buffer has changed with the 3000 series electronics. See below.

          ---

          The feature has not extensively been tested with the new release, but the only change should be in an include file:

          In code /ctf/ctfacqrt/include/ACQ_MessagePacket.h

          The size of the data array has been increased from 28160 to 40000

          i.e.

          change

          //            int32_t  data[ 28160 ]; // For MEG2005. 110 packet * 1024 bytes / 4 bytes/long

          to
                          int32_t  data[ 40000 ];

          and then rebuild the real time application

          ---

          I haven't successfully managed to recompile ACQBuffer and acq2ftx yet (on the hunt for the appropriate dependencies) but it appears the solution is trivial. I will let you know if we managed to make it work reliably on our system soon.
      - +@isprivate: "0"
        commentid: "17989"
        comment_count: "8"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2016-11-18 18:29:21 +0100
        thetext: Update on compiling. I managed to create a binary, which runs and was detecting packets of data (which is further than we got before). However using bufferViewer it wasn't showing any data coming through at all. Could this be to do with that fact I compiled on a 64 bit system possibly? I haven't got access to all the 32 bit libraries required to cross compile to double check at the moment unfortunately.
      - +@isprivate: "0"
        commentid: "18624"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-05-03 14:28:44 +0200
        thetext: "(In reply to George O'Neill from comment #8)\n\nHi George,\n\nIt has been quiet for some while on this. We have a new CTF acquisition computer and face the same (similar) problems with access to the real time data. I have just CCed Erik from our technical group on this bug. \n\nDid you make any progress?\n\nbest\nRobert"
      - +@isprivate: "0"
        commentid: "18638"
        comment_count: "10"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2017-05-09 11:16:42 +0200
        thetext: "(In reply to Robert Oostenveld from comment #9)\n\nHi Robert,\n\nUnfortunately I didn't make any progress on this front. I think this arose from trying recompile the buffer on one type of RH linux and then deploying it onto the new MEG acquisition machine ran into library issues. I know simply installing packages onto the acquisition machine may solve these issues, however I don't have access to the Red Hat DVD and we cannot use yum over the internet on that machine. Also as we were to some extent the test lab for the new acquisition hardware I was hesitant to do anything to that computer whilst other bugs were still being diagnosed and fixed. \n\nAs it stands the suggestions in comment 7 may work, but I have not been able to confirm or deny that this works. Sorry!"
      - +@isprivate: "0"
        commentid: "19197"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-17 09:57:07 +0100
        thetext: "Our technical group spent some time working on this and have suggested a solution. To implement this, I started with cleaning up the existing code base (which revealed too much the hands of the various people that have worked on this in the past).\n\nI have make those initial changes available on https://github.com/fieldtrip/fieldtrip/pull/638 and will update them with the actual fix. After testing on our CTF system, this will be merged to the release version. \n\ncommit 58148d777d4e2e597d71e6ef8a6512ac2b72ba65\nAuthor: Robert Oostenveld \nDate:   Wed Jan 17 09:48:08 2018 +0100\n\nmade the file name of the source code and executables more consistent, updated the Makefile, removed the old binaries, updated the README.\n\n\ncommit de596f7679667262d7616647f4f5c941bedf4f06\nAuthor: Robert Oostenveld \nDate:   Wed Jan 17 09:22:26 2018 +0100\n\nremoved binaries from source code directory"
      - +@isprivate: "0"
        commentid: "19198"
        comment_count: "12"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-17 10:37:48 +0100
        thetext: "The following documentation was provided by Mike from our technical group. Sorry that it is all in Dutch.\n\n--------\n\nOm samen te vatten welke werkzaamheden ik verricht heb om CTF_ACQ2FT(x) aan de praat te krijgen:\n \nIk heb met “clone” de volledige Fieldtrip repository gedownload van Github, hier stonden de “originele” source files in voor meg2ft.\nDeze heb ik geplaats in: /root/Downloads/fieldtrip op de nieuwe ODIN (DCCN-MEG001) als de gebruiker root.\n \nTijdens het kijken in de repository kwam ik de make file tegen in de source folder, deze probeerde ik te runnen, maar liep tegen het probleem aan dat buffer.h niet gevonden kon worden.\nNa wat dingen gecheckt te hebben kwam ik er achter dat deze library nog niet gecompileerd was.\nDeze library heb ik met succes weten te compileren door de make te runnen in de folder: /root/Downloads/fieldtrip/realtime/src/buffer/src\n \nHierna vanzelfsprekend geprobeerd om de source files opnieuw te compileren, omdat nu de buffer library aanwezig was, dit was helaas nog niet succesvol door een variabele die verkeerd werd gedeclared.\nDeze bug heeft Robert zelf ook gevonden en al gefixt, dus dit ga ik verder niet toelichten in deze mail, gezien dit een non-issue is geworden.\n \nNa het fixen van de code kon ik de source files met succes opnieuw compileren.\n \nNadat ik dus vast had gesteld dat de source files succesvol gecompileerd kunnen worden ben ik gaan kijken naar de inhoudelijke code, om te zien of ik ergens referenties kon vinden naar de grootte van de originele buffersize (28160).\n \nDeze vond ik in meerdere bestanden terug:\n \n-          acq2ft.c\n-          Acq2ftx.c\n-          Acqbuffer.h\n-          Acqbuffer.c\n \nIn al deze bestanden heb ik 28160 veranderd naar 40000 zonder verdere aanpassingen te doen aan de code.\nNa deze mutatie heb ik de source files nogmaals gecompileerd met succes, er waren dus volgens de compiler geen illegale veranderingen gedaan aan de code.\n \nToen ik daarna de binary acq2ft probeerde te draaien in deze folder: /root/Downloads/fieldtrip/realtime/bin/glnxa64 Kreeg ik de foutmelding: “shmget: Invalid argument”\n \nNa het lezen van de WIKI van fieldtrip op: http://www.fieldtriptoolbox.org/development/realtime/ctf#known_problems_with_ctf_real-time_acquisition kwam ik er achter dat ’t te maken had met het harde limiet die wordt gesteld vanuit Linux bij het maken van shared memory.\n \nSamen met Edward heb ik dit opgelost door op de nieuwe ODIN (DCCN-MEG001) het limiet aan te passen zoals beschreven in de WIKI (opgehoogd naar: 1099511627776)\n \nToen ik na een reboot de binary probeerde te draaien ging dit met succes, en zag je de tekst: Waiting for (0) voorbij komen.\n \nEen aantal dagen later heb ik samen met Uriel gekeken of de data uit de shared memory buffer ook werd ingelezen door de acq2ft binary terwijl de nieuwe ODIN aan het MEG rack hing, dit leek inderdaad het geval te zijn, de data die we zagen in het venster kwam overeen met de data die we zien op de oude Odin.\n \nHiermee heb ik eigenlijk de conclusie getrokken (komt mede door het feit dat ik tegen de grens van mijn ervaring/kennis aan liep in deze) dat het programma functioneert zoals het zou moeten.\n\n-------------"
      - +@isprivate: "0"
        commentid: "19199"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-17 10:45:17 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #11)

          130-229-11-149-dhcp> git commit -a
          [bug3185-ctf-realtime 9e001e1] updated the buffer size from 28160 to 40000, see http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3185#c12
           1 file changed, 7 insertions(+)
      - +@isprivate: "0"
        commentid: "19233"
        comment_count: "14"
        who:
          +content: George.Oneill
          +@name: George O'Neill
        bug_when: 2018-01-30 17:48:58 +0100
        thetext: Excellent news, I should be able to work with those instructions to get it up and running again. Will update with news in due course. Thanks for getting round to looking into this in the end!
      - +@isprivate: "0"
        commentid: "19246"
        comment_count: "15"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-31 17:05:51 +0100
        thetext: |-
          (In reply to George O'Neill from comment #14)

          I have just tested the ctf2ft_v1, v2 and v3 executables on the old acquisition machine. They compile fine, as does the buffer source code. Furthermore, running all three also works fine.

          I will now proceed testing the compilation on the new acquisition machine.
      - +@isprivate: "0"
        commentid: "19247"
        comment_count: "16"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-01-31 17:11:41 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #15)

          The code changes have been merged with the master branch, i.e. the release version. See https://github.com/fieldtrip/fieldtrip/pull/638
      - +@isprivate: "0"
        commentid: "19360"
        comment_count: "17"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-06-19 09:27:52 +0200
        thetext: "this has been followed up and (as it seems) finally resolved. \n\nPlease see https://github.com/fieldtrip/fieldtrip/issues/699, https://github.com/fieldtrip/fieldtrip/issues/724 and http://www.fieldtriptoolbox.org/development/realtime/ctf#different_software_versions\n\nWith the 2018 version of the software and the current code we now have a working real-time headlocalizer."
