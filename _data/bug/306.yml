+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "306"
    creation_ts: 2010-12-15 12:13:00 +0100
    short_desc: too many resubmissions with small nr of collected jobs
    delta_ts: 2011-01-05 12:01:08 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: peer
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: enhancement
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: marcel.zwiers
      +@name: Marcel Zwiers
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "658"
        comment_count: "0"
        who:
          +content: marcel.zwiers
          +@name: Marcel Zwiers
        bug_when: 2010-12-15 12:13:57 +0100
        thetext: |-
          peercellfun resubmits massively when all jobs are submitted but only a small (e.g. 1) job has been collected, i.e. when (estimated_max - estimated_min) is very small (e.g. zero) and unreliable

          Suggested solution:
          Gradually move from the situation when there are no collected jobs (see line 399):

          estimated = 3*timreq

          to the situation when jobs have been collected (line 396):

          estimated = estimated_avg + 2*(estimated_max - estimated_min)

          I suggest replacing line 393 (which also contains a logical bug) till 399 with the following weighted average of the two:

          estimated_avg = mean(collecttime(collected) - submittime(collected));
          estimated = (3*timreq + sum(collected)*(estimated_avg + 2*(estimated_max - estimated_min))) / (1 + sum(collected))
      - +@isprivate: "0"
        commentid: "659"
        comment_count: "1"
        who:
          +content: marcel.zwiers
          +@name: Marcel Zwiers
        bug_when: 2010-12-15 13:09:08 +0100
        thetext: |-
          p.s. line 389 should, of course also be adapted to (nb timreq is never empty):
          elseif ~isempty(timreq)
      - +@isprivate: "0"
        commentid: "669"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-12-15 15:54:00 +0100
        thetext: If you specify an appropriate timreq or resubmittime, you should not have this problem. Can you please try with either one of these two options?
      - +@isprivate: "0"
        commentid: "672"
        comment_count: "3"
        who:
          +content: marcel.zwiers
          +@name: Marcel Zwiers
        bug_when: 2010-12-15 16:18:19 +0100
        thetext: |-
          Passing an appropriate timreq does not do anything (that is obvious from the code)
          Passing resubmittime does avoid the problem (that is also obvious from the code), but that is not a good solution to the problem (basically because resubmittime is static and typically very hard to estimate beforehand) but a undesirable work-around.
      - +@isprivate: "0"
        commentid: "675"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-12-15 20:05:42 +0100
        thetext: |-
          timreq is currently indeed not acting as expected and should be fixed.

          Should  resubmittime again be removed from the code (it was added upon your request)?
      - +@isprivate: "0"
        commentid: "713"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-12-19 09:36:58 +0100
        thetext: |-
          r2468 | roboos | 2010-12-19 09:32:18 +0100 (Sun, 19 Dec 2010) | 7 lines

          fixed, at the moment it does not use the distribution at all, only the estimated timreq (which is nanmax of the collecttime-submittime). It uses 3*timreq, just like the killswitch on the peerslave. Note that the timreq might slightly increase over time (with more jobs returning) and does not reflect the timreq that was used when submitting.
      - +@isprivate: "0"
        commentid: "826"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-05 11:57:03 +0100
        thetext: selected a long list of resolved bugs from roboos and changed the status into "RESOLVED"
      - +@isprivate: "0"
        commentid: "905"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-05 12:01:08 +0100
        thetext: selected all old bugs from roboos with status RESOLVED and changed it into CLOSED
