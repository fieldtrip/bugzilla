+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2198"
    creation_ts: 2013-06-13 10:47:00 +0200
    short_desc: throw an explicit warning by default when cfg options are not used?
    delta_ts: 2013-06-13 13:04:30 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: NEW
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: roemer.van.der.meij
      +@name: Roemer van der Meij
    assigned_to: fieldtriptoolbox
    cc:
      - johanna.zumer
      - jorn
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "10736"
        comment_count: "0"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2013-06-13 10:47:56 +0200
        thetext: "Just throwing it out there, refreshed after our discussion of cfg-monitoring yesterday. Can we think of an example where it is desired to add cfg options which are not used? Maybe some functions in the ft_XXXstatistics tree? Would there be options that are not read, but used later on?\nIf we can't think of an example, wouldn't it be desired to explicitly mention this after whatever function is completed? \nOr maybe even go as extreme as throwing an error? Which would be more difficult, as usually only after all computation the appropriate cfg options are touched."
      - +@isprivate: "0"
        commentid: "10737"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-06-13 11:08:27 +0200
        thetext: |-
          Sometimes options are not used by the initially called function, but by a low-level function. This makes it difficult (sometimes impossible) to figure out at the start of a function which options will be unused.

          Some spike functions make use of
          ft_checkconfig(cfg, 'allowed', {'method', 'channel', 'spikechannel', ...})

          We could do that more often, i.e. in all functions that do pass the cfg into another function. Please have a look in ft_checkconfig.

          The second option is to start using the config object, but as it stands, it is not 100% struct-compatible.
      - +@isprivate: "0"
        commentid: "10738"
        comment_count: "2"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2013-06-13 11:21:07 +0200
        thetext: "It might not be a bad idea to explicitly allow only certain config options, in all functions. Just like with how keyvalcheck works in lower level functions. It will take some effort, and probably mistakes, to get such a list right for each function (especially the nested function calls). \n\nThere are still 2 cfg object bugs that are assigned to, bug 1614 and bug 1762. The first bug still is not solved, I couldn't get a grasp on the cause of the error (for me, the recursion was partly to blame). The second bug still has an open question related to the nargout."
      - +@isprivate: "0"
        commentid: "10739"
        comment_count: "3"
        who:
          +content: jorn
          +@name: JÃ¶rn M. Horschig
        bug_when: 2013-06-13 11:29:24 +0200
        thetext: "I think I suggested this also a while ago, when I realized that some ft_sourceXXX function does not take the analog cfg options to the ft_freqXXX functions and wondered why. Instead of implementing this, Robert and me went over and adjusted names of the cfg fields.\n\nI can also strongly see the benefit of this, but as Robert said it is sometimes tricky, for example trialfuns or other user functions might be written such that they require some cfg-option being passed that is not FieldTrip standard. Thus, I would not throw an error but rather throw a neat warning saying that cfg.whatever might not be used. \nIn any case, this needs to be carefully done for all functions, i.e. would be lots of work, because we do not want users to get scared by some warning that is not justified (and we do not want to get tons of mails on the mailingslist asking about such things either)."
      - +@isprivate: "0"
        commentid: "10747"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-06-13 13:04:30 +0200
        thetext: "(In reply to comment #3)\n\nWe might want to add warnings (which ft_checkconfig-allowed will issue for us) for some of the simple functions that do not call other functions. \n\nI think that in general it is a good coding style, i.e. be explicit about what works."
