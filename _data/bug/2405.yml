+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2405"
    creation_ts: 2013-12-03 11:32:00 +0100
    short_desc: channelconnectivity fails on test_bug2404
    delta_ts: 2014-01-29 13:28:43 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    blocked: "2404"
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: eelke.spaak
      +@name: Eelke Spaak
    cc: j.herring
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "12188"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-12-03 11:32:59 +0100
        thetext: "I am using \n\ncfg.neighbours(1).label = '2';\ncfg.neighbours(1).neighblabel = {'1', '3'};\n\nto define the neighbours of a single channel that I want to repair, but get \n\nError using mat2cell (line 107)\nInput arguments, D1 through D2, must sum to each dimension of the input matrix size, [3  1].'\n\nError in channelconnectivity (line 63)\n  selneighb = mat2cell(selneighb, numAllNeighb);\n\nError in ft_channelrepair (line 151)\n    connectivityMatrix = channelconnectivity(cfg, data);\n\nError in test_bug2404 (line 32)\nfixedeeg = ft_channelrepair(cfg, eegdata);"
      - +@isprivate: "0"
        commentid: "12254"
        comment_count: "1"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2013-12-05 10:30:11 +0100
        thetext: |-
          In addition to now including an explicit check on whether neighbours are specified as row/column vectors (previously I assumed column), I have wrapped the fast code in a try/catch which falls back on the slow code in case of an error. (I suspect my optimizations cannot be retained if also the one-channel neighbours case needs to be supported, so this seems like the best option.)

          bash-4.1$ svn commit private/channelconnectivity.m
          Sending        private/channelconnectivity.m
          Transmitting file data .
          Committed revision 8966.
      - +@isprivate: "0"
        commentid: "12686"
        comment_count: "2"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2014-01-29 13:28:43 +0100
        thetext: changing lots of bugs from resolved to closed.
