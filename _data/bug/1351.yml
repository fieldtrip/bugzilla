+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1351"
    creation_ts: 2012-03-01 13:13:00 +0100
    short_desc: checksize in checkconfig takes ages on a grandaverage
    delta_ts: 2015-07-15 13:31:27 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: enhancement
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: jorn
      +@name: Jörn M. Horschig
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - eelke.spaak
      - j.schoffelen
      - r.oostenveld
      - roemer.van.der.meij
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "5407"
        comment_count: "0"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2012-03-01 13:13:41 +0100
        thetext: |-
          I assume time increases exponentially with the number of subjects and number of preprocessing steps... but it's VERY annoying when just plotting a topo and having to wait for (literally) several minutes because the function cleans up the cfg (of all my 20 subjects, which data underwent already various steps).

          Can the cfg check be just turned off if the number of desired output arguments is zero? This can dealt with by using nargout. However, e.g. ft_topoplotER is a wrapper around topoplotTFR, thus the wrapping needs to be taken care of additionally (so that nargout matches)
      - +@isprivate: "0"
        commentid: "5408"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-03-01 13:19:54 +0100
        thetext: |-
          did you try:

          global ft_default
          ft_default.trackconfig = 'off' ?
      - +@isprivate: "0"
        commentid: "5409"
        comment_count: "2"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2012-03-01 14:00:11 +0100
        thetext: Wouldn't it be easier to make sure checkconfig doesn't check single subject cfgs? They all underwent a check during the grandaverage, and nothing has changed after that, so it seems like a legitimate skip no?
      - +@isprivate: "0"
        commentid: "5413"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-03-01 16:56:09 +0100
        thetext: |-
          (In reply to comment #1)

          it ain't about cfg.trackconfig, but about cfg.checksize. If you specify inf, it should not check.

          (In reply to comment #2)

          checkconfig does not know about the nature of the cfgs, so would not be able to distinguish a single subject one from any other one. But I can imagine that a solution would be to prevent it from checking too deep into the nested configs, i.e. don't go all the way back into the history.

          @Jorn: it would be interesting to have your example data in a bug1351.mat file and a test_bug1351.m file with a tic and toc in it.
      - +@isprivate: "0"
        commentid: "5519"
        comment_count: "4"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2012-03-12 17:26:14 +0100
        thetext: "I committed a test script and (a snippet of) data. The data now only features two subjects - I could update it to the full 20 if desired (or write a loop that duplicates data), but I think the issue should be clear when running the data. \n\n... and I just extended the testscript to compute and output some profiling information:\n\nFunction\t\t\tTime\t\t\tRelativeTime\nft_topoplotER\t\t\t105.27s\t\t\t100.00%\nft_topoplotTFR\t\t\t103.96s\t\t\t98.75%\nft_postamble\t\t\t90.69s\t\t\t86.15%\nft_checkconfig\t\t\t90.40s\t\t\t85.87%\nutilities\\private\\ft_postamble_trackconfig\t\t\t90.22s\t\t\t85.70%\nft_checkconfig>checksizefun\t\t\t90.20s\t\t\t85.69%\nft_defaults\t\t\t3.75s\t\t\t3.57%\nft_hastoolbox\t\t\t3.52s\t\t\t3.34%\nft_prepare_layout\t\t\t3.00s\t\t\t2.85%\nft_freqdescriptives\t\t\t2.58s\t\t\t2.45%\nft_senstype\t\t\t2.56s\t\t\t2.44%\nft_channelselection\t\t\t2.45s\t\t\t2.33%\npath\t\t\t2.09s\t\t\t1.98%\nft_filetype\t\t\t1.61s\t\t\t1.53%\nft_senslabel\t\t\t1.51s\t\t\t1.44%\nft_plot_topo\t\t\t1.28s\t\t\t1.22%"
      - +@isprivate: "0"
        commentid: "5520"
        comment_count: "5"
        who:
          +content: jorn
          +@name: Jörn M. Horschig
        bug_when: 2012-03-12 17:27:30 +0100
        thetext: oh btw, I call the function 10 times in a row, that's why it takes to long ;)
      - +@isprivate: "0"
        commentid: "5555"
        comment_count: "6"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-03-14 11:08:12 +0100
        thetext: |-
          I tracked the issue down to the cfg.previous.pre(.....)vious.event structure array being processed recursively. I added an explicit check to ft_checkconfig>checksizefun whether a structure is called 'event', in which case, the struct should be checked as a whole, rather than it having its subfields checked for max. size.

          Also, I added a check whether the entire cfg is larger than max size; if not, don't enter the loop.

          Fixed in revision 5459.
      - +@isprivate: "0"
        commentid: "7142"
        comment_count: "7"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-08-23 10:35:14 +0200
        thetext: closing my bugs
      - +@isprivate: "0"
        commentid: "15690"
        comment_count: "8"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-05-07 11:15:35 +0200
        thetext: fails on the dashboard, it should be looked into why
      - +@isprivate: "0"
        commentid: "15691"
        comment_count: "9"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-05-07 11:23:29 +0200
        thetext: |-
          At some point the 'powspctrm' field is missing...

          The cause seems to be that the data in test_bug1351 is internally inconsistent.

          size(tmpdata.powspctrm): [842 25 2 2];

          numel(tmpdata.label): 15

          My hunch is that the stricter checking of internal consistency in data structures causes the issue.

          Suggested fix:

          make the data consistent and overwrite....
      - +@isprivate: "0"
        commentid: "15692"
        comment_count: "10"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-05-07 11:25:40 +0200
        thetext: |-
          @robert: could you at your earliest convenience change the file permissions of bug1351.mat on /home/common/matlab/fieldtrip/data/test?

          Thanks.
      - +@isprivate: "0"
        commentid: "15698"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-05-07 13:36:47 +0200
        thetext: |-
          (In reply to Jan-Mathijs Schoffelen from comment #10)

          permissions should now be fixed.
      - +@isprivate: "0"
        commentid: "15699"
        comment_count: "12"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-05-07 13:42:42 +0200
        thetext: thanks.
