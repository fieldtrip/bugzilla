+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1304"
    creation_ts: 2012-02-01 13:57:00 +0100
    short_desc: revamp the handling of artifacts
    delta_ts: 2016-03-03 14:44:08 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: ASSIGNED
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    blocked: "21"
    everconfirmed: "1"
    reporter:
      +content: eelke.spaak
      +@name: Eelke Spaak
    assigned_to:
      +content: eelke.spaak
      +@name: Eelke Spaak
    cc:
      - johanna.zumer
      - roemer.van.der.meij
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "5042"
        comment_count: "0"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-02-01 13:57:49 +0100
        thetext: "First, some statements. Functions that take a cfg structure as an argument, modify it, and return the cfg again, are evil, since they obfuscate the structure of the analysis pipeline. A cfg should only be the input to a function, specifying what the function should do. The output of the function in a syntax-sense should reflect the output of the function in a semantic sense.\n\nTaking this into account, I propose the following.\n\n(1) Create a new data type for handling artifacts. This would be a structure like this:\n\nart = \n\n          type: 'visual'\n    badsamples: [20x2 double]\n     badtrials: [4 8 24 6]\n   badchannels: {'CH01'  'CH45'}\n\nwith 'type' a required indicator for the type of artifacts contained (e.g. visual/eog/blink/whatever). Any combination of the other three fields would be possible, with badsamples corresponding to how artifacts are now maintained (beginsample and endsample of artifacts).\n\n(2) Make a clear conceptual split between artifact detection functions and functions that modify data. All detection functions should return an artifact structure like the one defined above. Functions that modify the data should handle those structures:\n\n(3) E.g.:\n\ncfg = [];\ncfg.artifacts = {artVisual, artEog}; % each one of those is an art structure\ndata = ft_rejectartifact(cfg, data); % modify the data\n\n(4) Databrowser should also understand and return an artifact structure."
      - +@isprivate: "0"
        commentid: "5043"
        comment_count: "1"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2012-02-01 14:03:16 +0100
        thetext: |-
          Love it. Also, I agree we should remove output that is a cfg, evil indeed!

          Are there other functions that use the cfg to give 'data-type-structures'? I know of the layouts, but not of others. Should this thus be multiple data inputs instead of cfgs?
          Like:
          data = ft_rejectartifact(cfg, data, artVisual, artEog);
      - +@isprivate: "0"
        commentid: "5060"
        comment_count: "2"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-02-01 14:42:56 +0100
        thetext: art.badtrials is ill-specified and possibly redundant, so just stick to badsamples/badchannels. Other than that, Robert issued executive 'GO' command :)
      - +@isprivate: "0"
        commentid: "17054"
        comment_count: "3"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-03-03 14:44:08 +0100
        thetext: I just came across on a climbing wander through the bug tree. Still love this idea. Was any progress made?
