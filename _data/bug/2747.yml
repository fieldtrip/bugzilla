+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2747"
    creation_ts: 2014-10-27 21:23:00 +0100
    short_desc: subspace projection not applied in beamformer_lcmv with subspace<1, and inconsistent regularization (lambda)
    delta_ts: 2019-04-01 08:56:47 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: inverse
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: marc.lalancette
      +@name: Marc Lalancette
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - j.schoffelen
      - johanna.zumer
      - marc.lalancette
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "14698"
        comment_count: "0"
        who:
          +content: marc.lalancette
          +@name: Marc Lalancette
        bug_when: 2014-10-27 21:23:24 +0100
        thetext: |-
          There are some inconsistencies in how regularization (using the lambda parameter) is applied for various types of "subspace projection" in beamformer_lcmv:

          1.1 Bug: Line 190 should be end, not else: that "if" block converts a "fraction of largest eigenvalue" to an eigenvalue index, the following lines actually do the projection.  So as is, no projection is done for subspace<1.

          1.2 Regularization is absent in invCy with "data-specific" subspace projection: line 194:
          invCy    = diag(1./diag(Cy));

          1.3 With "dip.subspace" (source-specific subspace projection) the covariance includes regularization: line 235:
          Cy    = dip.subspace{i} * (Cy_pre_subspace + lambda * eye(size(Cy_pre_subspace))) * dip.subspace{i}';
          So power and such have regularization as well as the filter.  Other subspace options (including no subspace) do not add regularization to covariance (as I think it should be), only in the inverse covariance for filter computation.
      - +@isprivate: "0"
        commentid: "14715"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2014-10-30 13:15:34 +0100
        thetext: |-
          Hi Marc,
          We did not manage to discuss your points during yesterday's meeting. If I have some spare time this week, I'll look into it myself. At first glance your points seem very reasonable indeed.
      - +@isprivate: "0"
        commentid: "14775"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2014-11-08 12:50:35 +0100
        thetext: "Hi Marc,\n\n\nRe 1.1, fixed.\n\nRe 1.2, I changed that into \n    invCy    = diag(1./diag(Cy + lambda * eye(size(Cy))));\n\nRe 1.3, it is not clear to me what the exact issue is and whether something needs to be done. Perhaps you or Jan-Mathijs can comment.\n\n\n---\nmac011> svn commit beamformer_lcmv.m\nSending        beamformer_lcmv.m\nTransmitting file data .\nCommitted revision 9943."
      - +@isprivate: "0"
        commentid: "14781"
        comment_count: "3"
        attachid: "674"
        who:
          +content: marc.lalancette
          +@name: Marc Lalancette
        bug_when: 2014-11-10 17:15:41 +0100
        thetext: |-
          Created attachment 674
          Further fixed beamformer_lcmv for source-specific subspace projection

          Made "source-specific" subspace projection compatible with "data-specific" subspace projection in terms of keepfilter and keepleadfield options.  Also removed "regularization" of the covariance matrix with this projection method, only inverse matrix should be regularized, as is the case when this option is not used.
      - +@isprivate: "0"
        commentid: "14782"
        comment_count: "4"
        who:
          +content: marc.lalancette
          +@name: Marc Lalancette
        bug_when: 2014-11-10 17:17:38 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #2)
          Thanks for the updates Robert.

          To clarify 1.3, without getting too technical, only the inverse covariance should have the regularization added.  Adding regularization to the covariance matrix is equivalent to adding noise in the data after computing the weights, which I am pretty sure has no beneficial effect at all and reduces SNR.  So I'd replace line 232:
              Cy    =      dip.subspace{i} * (Cy_pre_subspace + lambda * eye(size(Cy_pre_subspace))) * dip.subspace{i}';

          with:
              Cy    =      dip.subspace{i} * Cy_pre_subspace * dip.subspace{i}';

          Although I don't use it, I also saw that the "source-specific subspace projection", i.e. isfield(dip, 'subspace'), wasn't completely implemented with some other options: keepfilter keeps the projected filter with "data-specific" and non-projected with "source-specific"; and keepleadfield keeps the non-projected leadfield with "data-specific" and the projected one with "source-specific".  Thus I've fixed this (and the above) in the file I just attached.

          Cheers,
          Marc
      - +@isprivate: "0"
        commentid: "14783"
        comment_count: "5"
        attachid: "675"
        who:
          +content: marc.lalancette
          +@name: Marc Lalancette
        bug_when: 2014-11-10 17:25:01 +0100
        thetext: |-
          Created attachment 675
          Fixed beamformer_lcmv

          (As previous submission, which was missing the covariance fix.)
      - +@isprivate: "0"
        commentid: "19655"
        comment_count: "6"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2019-03-27 13:28:09 +0100
        thetext: I think that with the code evolving the remaining open point is not an issue anymore, we have replaced the computation of the inverse covariance matrix by a dedicated function ft_inv. Yet, reading the current code I am not so sure whether a dip.subspace case will work these days. But I suggest to follow that up somewhere else if needed.
    attachment:
      - +@isobsolete: "1"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "674"
        date: 2014-11-10 17:15:00 +0100
        delta_ts: 2014-11-10 17:25:01 +0100
        desc: Further fixed beamformer_lcmv for source-specific subspace projection
        filename: beamformer_lcmv.m
        type: text/plain
        size: "16919"
        attacher:
          +content: marc.lalancette
          +@name: Marc Lalancette
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "675"
        date: 2014-11-10 17:25:00 +0100
        delta_ts: 2014-11-10 17:25:01 +0100
        desc: Fixed beamformer_lcmv
        filename: beamformer_lcmv.m
        type: text/plain
        size: "16879"
        attacher:
          +content: marc.lalancette
          +@name: Marc Lalancette
        data: REMOVED
