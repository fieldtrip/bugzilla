+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1514"
    creation_ts: 2012-06-11 14:34:00 +0200
    short_desc: ft_spike_select should be merged with ft_selectdata
    delta_ts: 2016-05-09 08:50:05 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: spike
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: WONTFIX
    see_also: http://bugzilla.fcdonders.nl/show_bug.cgi?id=2534
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    blocked: "1021"
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: j.schoffelen
      +@name: Jan-Mathijs Schoffelen
    cc:
      - i.andolina
      - j.schoffelen
      - thiwom
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "6340"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-06-11 14:34:38 +0200
        thetext: "as that is the general function for data handling. I don't know how easy it is to merge them, but it has my preference to keep one function for data-handling instead of multiple. Inside that function, it can of course distinguish between various datatypes (raw, spike, freq, timelock, ...)\n \nFurthermore, the data handling should in general be done in the subsequent analysis function and not in an intermediate function. E.g. we don't do\n\nft_preprocessing\nft_selectdata\nft_freqanalysis\n\nbut rather \n\nft_preprocessing\nft_freqanalysis\n\nwhere in freqanalysis you specify the selection to work on (cfg.channel, cfg.trials). The freqanalysis function then calls the helper function ft_selectdata for the actual data handling. \n\nAlso the user may call the helper function, but in general should not have to. An appropriate reason for the user to call it is if he/she wants to continue analysis in custom code."
      - +@isprivate: "0"
        commentid: "6341"
        comment_count: "1"
        who:
          +content: martinvinck
          +@name: Martin Vinck
        bug_when: 2012-06-11 14:42:36 +0200
        thetext: |-
          I thought about that indeed - however the whole section with dimord checking comes first and it would be hard to fit it in there. I also don't know what the plan is with ft_selectdata as there are two implementations and little help on the options.
          We may simply add the ft_spike_select as a subfunction there and check in the beginning if the datatype is spike and then refer to a subfunction ft_spike_select.
          There are some things this function should be able to do, e.g. select based on the spike times (latency), trials, channel, I am not sure whether this can all be fitted in.

          Where would the user do the selection of channels then in this case?
          Some channels often need to be removed, e.g. from the .nex files, before going to the next ft_spike_maketrials or ft_appendspike level, as they do not contain proper data.
      - +@isprivate: "0"
        commentid: "6342"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-06-11 14:57:30 +0200
        thetext: |-
          (In reply to comment #1)

          Let's discuss this in person next week and not get distracted at the moment. There are more important things to do right now...
      - +@isprivate: "0"
        commentid: "13326"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2014-04-14 20:25:37 +0200
        thetext: "improved the detection of spike data.\n\nmac011> svn commit utilities/ft_datatype.m      \nSending        utilities/ft_datatype.m\nTransmitting file data .\nCommitted revision 9410."
      - +@isprivate: "0"
        commentid: "13327"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2014-04-14 20:30:12 +0200
        thetext: |-
          started implenting handling for spike data. Since spike data has {chan} as possible dimension, this needs to be treated more like {pos} and {rpt}. Changed the time/trial selection for raw data, there might be a potentiall issue still with this due to double selections in the same field.

          mac011> svn commit utilities/
          Sending        utilities/ft_selectdata_newer.m
          Sending        utilities/private/getdimord.m
          Transmitting file data ..
          Committed revision 9412.
      - +@isprivate: "0"
        commentid: "13330"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2014-04-15 11:57:17 +0200
        thetext: |-
          I extended ft_selectdata_newer so that it also supports spike data. The cfg options it uses for spike data are the same as ft_spike_select (i.e. trials/latency/channel).

          mac011> svn commit
          Sending        test/test_ft_selectdata.m
          Sending        utilities/ft_selectdata_newer.m
          Sending        utilities/private/getdimord.m
          Transmitting file data ...
          Committed revision 9417.
      - +@isprivate: "0"
        commentid: "14188"
        comment_count: "6"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-07-22 12:31:47 +0200
        thetext: Would you now consider this FIXED and therefore usable?
      - +@isprivate: "0"
        commentid: "16142"
        comment_count: "7"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-09-25 13:53:31 +0200
        thetext: I'd like to be able to close this one. Do we have some benchmark spike data on the file-server?
      - +@isprivate: "0"
        commentid: "16143"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-09-25 13:56:46 +0200
        thetext: |-
          (In reply to Jan-Mathijs Schoffelen from comment #7)

          I think the best option is to look at the two spike tutorial scripts, which  will have spike data at intermediate levels of processing. There are also test scripts (with some data) in contrib/spike/test/
      - +@isprivate: "0"
        commentid: "17028"
        comment_count: "9"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-03-01 17:05:02 +0100
        thetext: Taking over from Martin, because not much has happened here over the past years.
      - +@isprivate: "0"
        commentid: "17029"
        comment_count: "10"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-03-01 17:05:19 +0100
        thetext: won't fix for now
