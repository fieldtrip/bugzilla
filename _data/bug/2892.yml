+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2892"
    creation_ts: 2015-05-07 17:52:00 +0200
    short_desc: add support in ft_analysispipeline for Tim's Pipeline Program
    delta_ts: 2015-07-20 12:11:28 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: external
    version: unspecified
    rep_platform: All
    op_sys: All
    bug_status: ASSIGNED
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: enhancement
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: t.vanmourik
      +@name: Tim van Mourik
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc: eelke.spaak
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "15704"
        comment_count: "0"
        attachid: "712"
        who:
          +content: t.vanmourik
          +@name: Tim van Mourik
        bug_when: 2015-05-07 17:52:03 +0200
        thetext: |-
          Created attachment 712
          This includes [AllTypes.type], [tvm_filterFunctionals.node] and [LayerPipeline.pipe]

          Hi Robert,

          With regard to our discussion, here is the explanation of how to make files for the pipeline program that I wrote.

          There are three types of files, nodes, types and pipes. A node file (.node, just an xml file) that tells you what a node looks like. Every node contains a title, input and output. Of the latter, there can be any number, including zero. Every input/output has a class, i.e. data type. At the moment just one, in the future preferably more. The data type must be one of the supported data types [AllTypes.type]. Clearly, this list can be expanded. Rather than me writing down how this is implemented, just have a look at the example [tvm_filterFunctionals.node]. Tells you everything you need to know.

          So you need (a) type file(s) to make a node and node files to make a pipeline. Note that the pipeline doesn't know about the types. A pipeline save file [LayerPipeline.pipe] stores the type of nodes and their position in the GUI, its ports and links. Every port has an identifier and each link goes from identifier to identifier (which is just an int64 in hex).

          Every input port has an output port as well. The reason is that this makes it easier to pass on data that is unchanged but needs to be used in subsequent functions nonetheless (e.g. some reference volume). This is also the reason that the input and output ports are arranged in 'port pairs'. For an output argument, the left side of the pair is null.

          Bugzilla lets me upload only one file with this bug report, so I put all the text in one file, marked where each file begins.

          Let me know what you think of it!

          Best,

          Tim
      - +@isprivate: "0"
        commentid: "15943"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-07-16 18:32:01 +0200
        thetext: I made a test script that should run stand-alone and using only data on disk (as discussed). Please see /home/common/matlab/fieldtrip/test/inspect_bug2892.m or https://code.google.com/p/fieldtrip/source/browse/trunk/test/inspect_bug2892.m?spec=svn10554&r=10554
      - +@isprivate: "0"
        commentid: "15961"
        comment_count: "2"
        attachid: "724"
        who:
          +content: t.vanmourik
          +@name: Tim van Mourik
        bug_when: 2015-07-20 12:11:28 +0200
        thetext: |-
          Created attachment 724
          All files required to generate the pipeline

          I recreated the example pipeline with my program. Attached you'll find a zip file that includes:
          -the original scripts
          -the recreated script
          -the save file of the visualisation (as .pipe file)
          -a screenshot of the program
          -the modules (as .node files) for the FieldTrip functions
          -the ft_analysispipeline output that is identical for both matlab sripts

          There were two manual edits required for the matlab script:
          -one being that ft_analysispipeline required two input arguments. I guess this is taken care of in a prospective commit
          -one (previously discussed with Robert) that the cell array inputfile in ft_freqstatistics had to be represented as two inputs.
    attachment:
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "712"
        date: 2015-05-07 17:52:00 +0200
        delta_ts: 2015-05-07 17:52:03 +0200
        desc: This includes [AllTypes.type], [tvm_filterFunctionals.node] and [LayerPipeline.pipe]
        filename: ThreeFiles.txt
        type: text/plain
        size: "15156"
        attacher:
          +content: t.vanmourik
          +@name: Tim van Mourik
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "724"
        date: 2015-07-20 12:11:00 +0200
        delta_ts: 2015-07-20 12:11:28 +0200
        desc: All files required to generate the pipeline
        filename: FieldtripTest.zip
        type: application/x-zip-compressed
        size: "111253"
        attacher:
          +content: t.vanmourik
          +@name: Tim van Mourik
        data: REMOVED
