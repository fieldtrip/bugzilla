+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1650"
    creation_ts: 2012-08-13 13:14:00 +0200
    short_desc: similar cfg options should have similar reference documentation
    delta_ts: 2013-07-23 23:07:29 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: documentation
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: NEW
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to: fieldtriptoolbox
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "6994"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-13 13:14:56 +0200
        thetext: |-
          if you look scroll over http://fieldtrip.fcdonders.nl/reference/index
          you see that some options have almost -- but not exactly the same -- reference documentation (i.e. in the help in the m-file).

          For example cfg.baselinewindow is explained in three different ways, whereas they all seem to have the same meaning/interpretation/explanation and the same default values.

          Also cfg.channel has slightly different documentations.

          These should (where possible) all be made the same. In case of doubt keep the original documentation.

          If you see any other inconsistencies (e.g. I noticed cfg.unit and cfg.units both being used, but in slightly different functions), please write them down.
      - +@isprivate: "0"
        commentid: "6995"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-13 13:33:52 +0200
        thetext: see also ft_documentationindex which runs every evening
      - +@isprivate: "0"
        commentid: "7290"
        comment_count: "2"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-09-04 18:08:18 +0200
        thetext: |-
          (In reply to comment #1)
          are cfg options of ft_artifact_eog "default" options or "hard-wired" options that users can't change?
          because it looks like the later one now.
      - +@isprivate: "0"
        commentid: "7291"
        comment_count: "3"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-09-04 18:21:03 +0200
        thetext: |-
          (In reply to comment #1)
          How should the reference look like?

          for example:

          cfg.baseline     = [begin end] (default = 'no')
          cfg.baselinetype = 'absolute', 'relchange' or 'relative' (default = 'absolute')
          cfg.parameter    = field for which to apply baseline normalization, or
                             cell array of strings to specify multiple fields to normalize
                                 (default = 'powspctrm')

          could be better like this?

          cfg.baseline     = number or string, [begin end] in seconds or 'no' if no baseline should be applied  (default = 'no')
          cfg.baselinetype = string, 'absolute', 'relchange' or 'relative' (default = 'absolute')
          cfg.parameter    = string, name of field for which to apply baseline normalization, or
                             cell array of strings, name of fields to specify multiple fields to normalize
                                 (default = 'powspctrm')
      - +@isprivate: "0"
        commentid: "7292"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-04 18:23:54 +0200
        thetext: I like the second style!
      - +@isprivate: "0"
        commentid: "7298"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-09-05 14:03:15 +0200
        thetext: |-
          (In reply to comment #3)
          specify also: string,scalar,1xN vector, MxN matrix, cell array of strings

          width for help in a certain scope: 100-120 character
      - +@isprivate: "0"
        commentid: "7440"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-19 22:21:16 +0200
        thetext: '*** Bug 1252 has been marked as a duplicate of this bug. ***'
      - +@isprivate: "0"
        commentid: "7943"
        comment_count: "7"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-10-19 15:47:05 +0200
        thetext: "(In reply to comment #3)\n\ncfg.absnoise \nin ft_connectivitysimulation:\n trial{tr} = ft_preproc_baselinecorrect(trial{tr} + cfg.absnoise*randn(size(trial{tr})));\n\ncfg.absnoise in ft_dipolesimulation:\n\n relnoise = randn(size(simulated.trial{trial})) * cfg.relnoise * rms;\n  absnoise = randn(size(simulated.trial{trial})) * cfg.absnoise;\n  simulated.trial{trial} = simulated.trial{trial} + relnoise + absnoise;\n\n\nam I getting well that they do almost the same?\n(there default is different though)\n\nbecause then the description in the reference docu could be the same."
      - +@isprivate: "0"
        commentid: "7953"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-20 08:28:00 +0200
        thetext: |-
          (In reply to comment #7)

          No, they do something different. Relnoise is relative to the signal amplitude in the data (i.e. the underlying dipole) whereas absnoise is absolute and independent of the underlying signal amplitude.

          The rms term in the equation is the signal amplitude.
      - +@isprivate: "0"
        commentid: "10929"
        comment_count: "9"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2013-07-23 23:07:29 +0200
        thetext: I started but I didn't finish. I re-assign it to joint development user. lilla
