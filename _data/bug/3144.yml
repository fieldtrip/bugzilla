+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3144"
    creation_ts: 2016-06-13 14:43:00 +0200
    short_desc: ft_checkdata_sens returns error when using MEG structs that worked fine last week
    delta_ts: 2018-05-08 14:30:14 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Linux
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: critical
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: m.leenders
      +@name: Maarten
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc:
      - eelke.spaak
      - j.schoffelen
      - n.n.oosterhof
      - r.oostenveld
      - weiyong.w.xu
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "17450"
        comment_count: "0"
        who:
          +content: m.leenders
          +@name: Maarten
        bug_when: 2016-06-13 14:43:59 +0200
        thetext: "Hi,\n\nI tried to execute my script just now, and it didn't work. I receive the following error:\n\n\nError using ft_datatype_sens (line 282)\nunexpected channel unit \"\" in channel 117unexpected channel unit \"nknown\" in\nchannel\nError in ft_datatype_freq (line 118)\n      freq.grad = ft_datatype_sens(freq.grad);\nError in ft_checkdata (line 223)\n  data = ft_datatype_freq(data); \n\nI think it is no longer recognizing my data-struc as containing channel-labels. I don't know whether something recently changed?\n\nI have attached a file that will produce the same error, with the following code:\n\n% enter correct path to file \"data.mat\" here\nload('~/maarten/matlab/scripts/temp/data.mat');\n\nft_checkdata(data);\n\n\nI'm really sorry if this turns out to be on my end, rather than yours, but I couldn't find anything, and none of my MEG data is working anymore.\n\nBest,\n\nMaarten\n\nEdit: Woops forgot the attachment"
      - +@isprivate: "0"
        commentid: "17452"
        comment_count: "1"
        who:
          +content: m.leenders
          +@name: Maarten
        bug_when: 2016-06-13 14:50:47 +0200
        thetext: "I can't add the struct because of filesize, but for those at the Donders, it is currently at:\n\nH:\\common\\temporary\\4bugzilla\\data.mat\n\nAlso, I made a typo in the title: \n\nI meant ft_checkdata, and specifically ft_datatype_sens. \n\nMondays.... ;)"
      - +@isprivate: "0"
        commentid: "17453"
        comment_count: "2"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-06-13 14:52:32 +0200
        thetext: |-
          I don't have permission to read the data.
          Please put it on /home/common/temporary
      - +@isprivate: "0"
        commentid: "17454"
        comment_count: "3"
        who:
          +content: m.leenders
          +@name: Maarten
        bug_when: 2016-06-13 14:56:25 +0200
        thetext: "Oh, I thought that's where I put it. Under 4bugzilla. Put it in the /home/common/temporary/data.mat now as well. \n\nDoes\n\nload('home/common/temporary/data.mat');\n\nor\n\nload('home/common/temporary/4bugzilla/data.mat');\n\nft_checkdata(data);\n\nnot work?\n\nAnyhow, I think it results from the same bug as #3143 reported just before (Which I missed. Sorry)."
      - +@isprivate: "0"
        commentid: "17455"
        comment_count: "4"
        who:
          +content: m.leenders
          +@name: Maarten
        bug_when: 2016-06-13 14:57:56 +0200
        thetext: |-
          ... sorry, I could edit my comments I would:

          load('/home/common/temporary/4bugzilla/data.mat');

          is what I meant.
      - +@isprivate: "0"
        commentid: "17456"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-06-13 15:00:05 +0200
        thetext: |-
          So this is another occurrence of the (recently introduced: see bug 3143 for instance) attempt to more explicitly require the sensors in the grad array to have correct physical units.

          Apparently, this needs to be thought through a bit more, because the code should not start failing.
      - +@isprivate: "0"
        commentid: "17457"
        comment_count: "6"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-06-13 15:00:31 +0200
        thetext: No need to apologize :o)
      - +@isprivate: "0"
        commentid: "17458"
        comment_count: "7"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-06-13 15:02:14 +0200
        thetext: |-
          I guess the issue is that your data is planar gradient combined TFR data, which was computed on 3D order gradient balanced component-rejected data....
          In other words: even I wouldn't know what the correct unit of the channels now would be...
      - +@isprivate: "0"
        commentid: "17459"
        comment_count: "8"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-06-13 15:03:05 +0200
        thetext: As a workaround for now you could try and remove the grad-field from your data structure before proceeding to your next analysis step
      - +@isprivate: "0"
        commentid: "17464"
        comment_count: "9"
        who:
          +content: m.leenders
          +@name: Maarten
        bug_when: 2016-06-13 15:32:02 +0200
        thetext: Ah, yes, that seems to work. I don't know about the units either ;). Thanks!
      - +@isprivate: "0"
        commentid: "17539"
        comment_count: "10"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-14 17:17:01 +0200
        thetext: "for reference, I did \n> cp data.mat /home/common/matlab/fieldtrip/data/test/bug3144.mat\n\nI see that it contains\n\n>> data.grad\nans = \n     chanpos: [302x3 double]\n     chanori: [302x3 double]\n    chantype: {302x1 cell}\n    chanunit: {302x1 cell}\n       label: {302x1 cell}\n        unit: 'cm'\n\n\nwhich is (as already commented by JM) remarkably similar to one I just encountered in bug 3143 by Nick (now CC).\n\nWe could also consider that the \"chanpos\" style sensor description should be supported by ft_datatype_sens as well. It could not be used by any (forward) computation, but can for plotting and neighbors.\n\nE.g. we could consider that our sensor descriptions are either\n grad (only coilpos, coiloir, label, tra)\n elec (only elecpos, label, possibly, tea)\n opto (something similar as above)\nor \n grad+chanpos\n elec+chanpos\n opto+chanpos\nor simply only\n chanpos"
      - +@isprivate: "0"
        commentid: "17561"
        comment_count: "11"
        who:
          +content: m.leenders
          +@name: Maarten
        bug_when: 2016-06-17 17:05:53 +0200
        thetext: "Hey, \n\nI can't get passed ft_rejectcomponent by deleting the grad structure. I get the error in the description whether I remove it or not.\n\nI call ft_rejectcomponent(cfg,ica,meg), and I have tried all combinations of deleting the grad field (remove it in ica but keep in in meg, remove in both, etc.).\n\nAny clues on how I can convince fieldtrip to work as it did before?"
      - +@isprivate: "0"
        commentid: "17562"
        comment_count: "12"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-20 09:30:25 +0200
        thetext: |-
          I have replaced the error by a warning. It should be updated on /home/common/matlab in 15 mins or so.


          mac011> git commit -a
          [master f5ff9cf] FIX - use warning instead of error in case of unknown chantype. This is less strict than desired, but a.o. needed to deal with data structures that have been ICA cleaned. See http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3144
           1 file changed, 42 insertions(+), 43 deletions(-)
          mac011> git push upstream master
          X11 forwarding request failed on channel 0
          You're about to push master, is that what you intended? [y|n] y
          Counting objects: 4, done.
          Delta compression using up to 4 threads.
          Compressing objects: 100% (4/4), done.
          Writing objects: 100% (4/4), 939 bytes | 0 bytes/s, done.
          Total 4 (delta 3), reused 0 (delta 0)
          To git@github.com:fieldtrip/fieldtrip.git
             899b0ea..f5ff9cf  master -> master
      - +@isprivate: "0"
        commentid: "17563"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-20 09:33:36 +0200
        thetext: |-
          (In reply to Robert Oostenveld from comment #12)

          mac011> git commit -a
          [master 32a794f] ENH - added test script for http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3144
           1 file changed, 13 insertions(+)
           create mode 100644 test/test_bug3144.m
      - +@isprivate: "0"
        commentid: "17571"
        comment_count: "14"
        who:
          +content: weiyong.w.xu
          +@name: Weiyong Xu
        bug_when: 2016-06-21 16:48:36 +0200
        thetext: |-
          Hi Robert,

          I got a similar error to this BUG:

          Reference to non-existent field 'tra'.

          Error in ft_datatype_sens (line 292)
                      coil = find(abs(sens.tra(i,:))~=0);

          Error in ft_datatype_timelock (line 102)
                timelock.grad = ft_datatype_sens(timelock.grad);

          Error in ft_checkdata (line 229)
            data = ft_datatype_timelock(data);

          Error in ft_combineplanar (line 318)
            data = ft_checkdata(data, 'datatype', 'timelock');

          Error in AV_APV_light (line 209)
              timelock_cgra_A       = ft_combineplanar(cfg, timelock_gra_A);


          I did ICA artifact rejection and then try to combine planar gradient using ft_combineplanar().
      - +@isprivate: "0"
        commentid: "17572"
        comment_count: "15"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-21 16:50:33 +0200
        thetext: |-
          (In reply to Weiyong Xu from comment #14)

          could you share the input cfg and data that you are passing into ft_combineplanar?
      - +@isprivate: "0"
        commentid: "17573"
        comment_count: "16"
        who:
          +content: weiyong.w.xu
          +@name: Weiyong Xu
        bug_when: 2016-06-21 17:20:48 +0200
        thetext: |-
          I uploaded the data to:
          https://www.dropbox.com/s/36egh22lnvy38l7/timelock_gra_A.mat?dl=0

          the cfg is a empty configure as :

          cfg=[];
          timelock_cgra_A       = ft_combineplanar(cfg, timelock_gra_A);
      - +@isprivate: "0"
        commentid: "17574"
        comment_count: "17"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-22 09:07:00 +0200
        thetext: "(In reply to Weiyong Xu from comment #16)\n\nfor reference, I did\n\nmac011> cd /home/common/matlab/fieldtrip/data/test/\nmac011> cp ~/Downloads/timelock_gra_A.mat bug3144b.mat\n\nthere was already the first bug3144.mat file, which I renamed to \"a\". \n\nI will add it to the test script and see what is wrong."
      - +@isprivate: "0"
        commentid: "17575"
        comment_count: "18"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-22 12:51:32 +0200
        thetext: "mac011> git commit -a -m \"ENH - improve combined planar MEG sensor handling, see http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3144\"\n[master 882dba3] ENH - improve combined planar MEG sensor handling, see http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3144\n 15 files changed, 232 insertions(+), 143 deletions(-)\n\nthis resolves the concrete error. \n\nI think we still have an issue with the sensor representation not meeting the expectation. In this last case it was because of combineplanar, elsewhere because of ICA cleaning. I expect this to re-surface, but it is difficult to deal with it (except for simply discarding sensor information in case the updating of the sensor array fails)."
      - +@isprivate: "0"
        commentid: "18188"
        comment_count: "19"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-01-17 11:29:44 +0100
        thetext: closed multiple bugs that were resolved some time ago
      - +@isprivate: "0"
        commentid: "19342"
        comment_count: "20"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2018-05-04 13:45:21 +0200
        thetext: |-
          The warning that is now raised in ft_datatype_sens line 266 (e.g. 'Warning: unexpected channel unit "unknown" in channel 186') can be quite annoying. ft_datatype_sens is always called by ft_checkdata in case a grad/elec is present in the data, and many functions always call ft_checkdata (sometimes several times). Data that has been e.g. cleaned using ICA will have no grad.chanunit anymore, and will therefore always trigger this warning. Since the warning text additionally contains the channel index, the warning will be triggered num_chan times per call to ft_checkdata.

          Proposed solution: simply remove the warning. If we really need a unit in the data, check this outside ft_checkdata/ft_datatype_sens. Or perhaps add a flag to ft_datatype_sens like 'requireunit' or so.
      - +@isprivate: "0"
        commentid: "19343"
        comment_count: "21"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2018-05-04 14:00:16 +0200
        thetext: |-
          (In reply to Eelke Spaak from comment #20)
          I now read in ft_datatype_sens that chantype and chanunit are required. Am I correct in asserting that the units of an ICA decomposition are the same as the original data (e.g. T)? Then we could just add this info to the grad in ft_componentanalysis. (Though maybe it depends on the type of component analysis being performed.)
      - +@isprivate: "0"
        commentid: "19344"
        comment_count: "22"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2018-05-08 14:30:14 +0200
        thetext: |-
          (In reply to Eelke Spaak from comment #21)

          If all channels that mix into the component are of the same type and units, then the component time series has the same units. If the unmoving is done on combined EEG+MEG or planar+axial, then the units are unknown.
