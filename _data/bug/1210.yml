+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1210"
    creation_ts: 2011-12-01 19:43:00 +0100
    short_desc: inconsistent number of grad.pnt  and grad.labels
    delta_ts: 2011-12-06 09:59:40 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: INVALID
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "0"
    reporter:
      +content: h.tan
      +@name: May
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "4392"
        comment_count: "0"
        who:
          +content: h.tan
          +@name: May
        bug_when: 2011-12-01 19:43:08 +0100
        thetext: "D is a small mat data file with 9 trials derived from 4D data\n\n% D = \n% \n%            hdr: [1x1 struct]\n%          label: {248x1 cell}\n%           time: {1x9 cell}\n%          trial: {1x9 cell}\n%        fsample: 1.0172e+003\n%     sampleinfo: [9x2 double]\n%      trialinfo: [9x5 double]\n%           grad: [1x1 struct]\n%            cfg: [1x1 struct]\n% \n\nI would like to get D.grad.pnt for say sensor 'A1'\nBUT there are more D.grad.pnt (N==276) than there are lables (N==271) for them.\n\nHow should I go about doing this?\n\nLabelIdx=find(strcmp(D.grad.label,'A1')) \n\nLabelIdx = 186 --> presumably isn't straightforwardly corresponding to \nD.grad.pnt(186,:) is it?\n\nCould someone kindly help?\n\n\nThank you,\nmay\n\n\n\n% D.hdr.grad\n% \n% ans = \n% \n%         pnt: [276x3 double]\n%         ori: [276x3 double]\n%         tra: [271x276 double]\n%       label: {271x1 cell}\n%        unit: 'm'\n%     balance: [1x1 struct]\n% \n% D.grad\n% \n% ans = \n% \n%         pnt: [276x3 double]\n%         ori: [276x3 double]\n%         tra: [271x276 double]\n%       label: {271x1 cell}\n%        unit: 'm'\n%     balance: [1x1 struct]\n\n\n\n\n\n%% How D was created.\n% subjNUM=1\n% iset=2\n% irun=1\n% \n% cd([subj{subjNUM}.runpath{irun}])\n% \n% %% load raw data\n% cfg = [];\n% \n% cfg.subjNUM = subjNUM;\n% cfg.irun=irun;\n% \n% cfg.headerfile = 'c,rfDC';\n% cfg.datafile = cfg.headerfile;\n% cfg.trialfun ='trialfun_general';\n% %         cfg.channel={'all'}; % need all for denoise_pca later!!!\n% cfg.channel={'MEG'};\n% cfg.continuous='yes';\n% cfg.trialdef.eventtype  = '?';\n% %         cfg.trialdef.eventtype  = 'RESPONSE'; %'TRIGGER';\n% cfg=ft_definetrial(cfg); %--->cfg.events\n% \n% cfg.header = ft_read_header(cfg.headerfile)\n% %         cfg2=ft_definetrial(cfg);\n% \n% \n% cfg.continuous='yes';\n% cfg.trialdef.eventtype  = '?';\n% \n% cfg=ft_definetrial(cfg); %--->cfg.events\n% \n% cfg.header = ft_read_header(cfg.headerfile);\n% % just to be sure\n% cfg = rmfield(cfg,'trl');\n% \n% \n% %% specify 'trial' information for 'epoching'\n% cfg.detrend='yes';      %no other filtering at the moment.\n% \n% cfg.trialdef.stimulusSETnum  = [iset];\n% cfg.trialdef.eventtype = 'PostStimTriggerIdx';  %%\n% cfg.trialdef.eventinfo  = 'PostStimSampleTime';\n% cfg.trialdef.eventvalue  = [iset].*2 + 128;\n% \n% cfg.trialdef.response_time=[1]; % to include RXNtime in the definetrial procedure...\n% cfg.trialdef.CorrectWrong = [1]; %only correct ones\n% \n% cfg.trialdef.prestim = 2; % duration in secs before '0'\n% cfg.trialdef.poststim = 2; % duration in secs after '0'\n% \n% cfg.trialfun ='trialfun_readEventgetRespInfo'; %%CHANGE 3rd Column!!!\n% \n% cfg=ft_definetrial(cfg);\n% %      cfg.trl ==//// [begsam endsam off runN stimN ]\n% \n% D=ft_preprocessing(cfg);"
      - +@isprivate: "0"
        commentid: "4393"
        comment_count: "1"
        attachid: "195"
        who:
          +content: h.tan
          +@name: May
        bug_when: 2011-12-01 19:54:11 +0100
        thetext: "Created attachment 195\ninconsistent number of grad_labels for grad_pnt\n\n% Not sure if you need the orignal raw data -- it is huge!\n\nD is a small mat data file with 9 trials derived from 4D data\n\n% D = \n% \n%            hdr: [1x1 struct]\n%          label: {248x1 cell}\n%           time: {1x9 cell}\n%          trial: {1x9 cell} ----> only 1 trial kept to keep file size small\n%        fsample: 1.0172e+003\n%     sampleinfo: [9x2 double]\n%      trialinfo: [9x5 double]\n%           grad: [1x1 struct]\n%            cfg: [1x1 struct] ---> REMOVED to keep file size small\n% \n\nI would like to get D.grad.pnt for say sensor 'A1'\nBUT there are more D.grad.pnt (N==276) than there are lables (N==271) for them.\n\nHow should I go about doing this?\n\nLabelIdx=find(strcmp(D.grad.label,'A1')) \n\nLabelIdx = 186 --> presumably isn't straightforwardly corresponding to \nD.grad.pnt(186,:) is it?\n\nCould someone kindly help?\n\n\nThank you,\nmay\n\n% D.hdr.grad\n% \n% ans = \n% \n%         pnt: [276x3 double]\n%         ori: [276x3 double]\n%         tra: [271x276 double]\n%       label: {271x1 cell}\n%        unit: 'm'\n%     balance: [1x1 struct]\n% \n% D.grad\n% \n% ans = \n% \n%         pnt: [276x3 double]\n%         ori: [276x3 double]\n%         tra: [271x276 double]\n%       label: {271x1 cell}\n%        unit: 'm'\n%     balance: [1x1 struct]\n\n\n\n\n\n%% How D was created.\n% subjNUM=1\n% iset=2\n% irun=1\n% \n% cd([subj{subjNUM}.runpath{irun}])\n% \n% %% load raw data\n% cfg = [];\n% \n% cfg.subjNUM = subjNUM;\n% cfg.irun=irun;\n% \n% cfg.headerfile = 'c,rfDC';\n% cfg.datafile = cfg.headerfile;\n% cfg.trialfun ='trialfun_general';\n% %         cfg.channel={'all'}; % need all for denoise_pca later!!!\n% cfg.channel={'MEG'};\n% cfg.continuous='yes';\n% cfg.trialdef.eventtype  = '?';\n% %         cfg.trialdef.eventtype  = 'RESPONSE'; %'TRIGGER';\n% cfg=ft_definetrial(cfg); %--->cfg.events\n% \n% cfg.header = ft_read_header(cfg.headerfile)\n% \n% % just to be sure\n% cfg = rmfield(cfg,'trl');\n% \n% \n% %% specify 'trial' information for 'epoching'\n% cfg.detrend='yes';      %no other filtering at the moment.\n% \n% cfg.trialdef.stimulusSETnum  = [iset];\n% cfg.trialdef.eventtype = 'PostStimTriggerIdx';  %%\n% cfg.trialdef.eventinfo  = 'PostStimSampleTime';\n% cfg.trialdef.eventvalue  = [iset].*2 + 128;\n% \n% cfg.trialdef.response_time=[1]; % to include RXNtime in the definetrial procedure...\n% cfg.trialdef.CorrectWrong = [1]; %only correct ones\n% \n% cfg.trialdef.prestim = 2; % duration in secs before '0'\n% cfg.trialdef.poststim = 2; % duration in secs after '0'\n% \n% cfg.trialfun ='trialfun_readEventgetRespInfo'; %%CHANGE 3rd Column!!!\n% \n% cfg=ft_definetrial(cfg);\n% %      cfg.trl ==//// [begsam endsam off runN stimN ]\n% \n% D=ft_preprocessing(cfg);\n% \n% D = rmfield(D,'cfg')\n% D.trial = D.trial{1}\n% whos D\n% save D.mat D"
      - +@isprivate: "0"
        commentid: "4402"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-12-02 09:50:29 +0100
        thetext: |-
          Hi May,

          Since you are referring to grad.pnt, it is clear that you are using an old fieldtrip version. In the recent fieldtrip versions that field is called grad.coilpos. There is also a field grad.chanpos, which is the one you want to have.

          grad.pnt is the position of each coil. The Glasgow MEG system has magnetometers, but also a small number of gradiometers which consist of two coils. The field grad.tra tells how the coils are combined in channels, have a look at imagesc(grad.tra).

          See the help of FT_DATATYPE_SENS

          With a recent fieldtrip version, you can do gradnew = ft_datatype_sens(gradold) to update the gradiometer structure. The new gradiometer structure represents both the channel and the coil positions.

          best
          Robert
      - +@isprivate: "0"
        commentid: "4403"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-12-02 09:58:45 +0100
        thetext: |-
          I added a test script to our development version to ensure that it works as advertised

          ---------------------------------------------------------------

          manzana> svn commit test_bug1210.m*
          Adding         test_bug1210.m
          Adding  (bin)  test_bug1210.mat
          Transmitting file data ..
          Committed revision 4926.

          ---------------------------------------------------------------

          load test_1210.mat

          % the input is old-style
          assert(isfield(D.grad, 'pnt'));
          assert(isfield(D.grad, 'ori'));

          gradnew = ft_datatype_sens(D.grad);

          % the output should be new-style
          assert(isfield(gradnew, 'chanpos'));
          assert(isfield(gradnew, 'chanori'));
          assert(isfield(gradnew, 'coilpos'));
          assert(isfield(gradnew, 'coilori'));
      - +@isprivate: "0"
        commentid: "4411"
        comment_count: "4"
        who:
          +content: h.tan
          +@name: May
        bug_when: 2011-12-03 00:25:18 +0100
        thetext: "(In reply to comment #2 &#3)\nHi Robert\nThanks for taking a look! I shall try your suggestions. And also those of comment3.\nMuch appreciated!\nBest, \nMay"
      - +@isprivate: "0"
        commentid: "4412"
        comment_count: "5"
        who:
          +content: h.tan
          +@name: May
        bug_when: 2011-12-03 00:26:20 +0100
        thetext: |-
          And thanks to JM too!
          May
          (In reply to comment #4)
      - +@isprivate: "0"
        commentid: "4413"
        comment_count: "6"
        who:
          +content: h.tan
          +@name: May
        bug_when: 2011-12-05 12:27:50 +0100
        thetext: |-
          (In reply to comment #3)
          Hi Robert
          Sorry it's me again.
          I get an error with this:
          >> gradnew = ft_datatype_sens(D.grad)
          ??? Undefined function or method 'channelposition' for input arguments of type 'struct'.

          Error in ==> ft_datatype_sens at 95
                  [chanpos, chanori, chanlab] = channelposition(sens, 'channel', 'all');


          Do I have to specify a field D.channel='MEG'or something else? There seems to be some missing information (channelposition) it needs.

          Hope to hear back from you.
          Thanks again,
          May
      - +@isprivate: "0"
        commentid: "4416"
        comment_count: "7"
        who:
          +content: h.tan
          +@name: May
        bug_when: 2011-12-05 13:41:38 +0100
        thetext: "(In reply to comment #6)\n\nHi again,\n\nI wonder if the problem might not rather be that FT doesn't really prune out the unselected channels from the hdr.grad related fields when cfg.channel={'MEG'}; is specified for ft_definetrial or ft_preprocessing etc. \n\nmay"
      - +@isprivate: "0"
        commentid: "4424"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-12-06 09:55:32 +0100
        thetext: |-
          (In reply to comment #6)

          please upgrade your fieldtrip version, because the file utilities/private/channelposition.m (which should be called) does exist in later version.
      - +@isprivate: "0"
        commentid: "4425"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-12-06 09:59:40 +0100
        thetext: "(In reply to comment #7)\n\nselecting channels from the data should not change the gradiometer structure. \n\n------\n\nIt is not clear what the problem or bug is. Please download the latest version of fieldtrip and rerun your analysis using cfg settings that are consistent with the current documentation. If you then still find any behavior that you believe to be an error and due to the implementation of the code, please report it as a new bug.\n\n\nI will close this bug."
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "195"
      date: 2011-12-01 19:54:00 +0100
      delta_ts: 2011-12-01 19:54:11 +0100
      desc: inconsistent number of grad_labels for grad_pnt
      filename: D.mat
      type: application/octet-stream
      size: "7648418"
      attacher:
        +content: h.tan
        +@name: May
      data: REMOVED
