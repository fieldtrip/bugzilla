+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2533"
    creation_ts: 2014-04-14 13:21:00 +0200
    short_desc: add cfg.plotselection to only plot those trials present in cfg.trials
    delta_ts: 2016-02-22 09:07:48 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: spike
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: NEW
    resolution:
    bug_file_loc: https://github.com/fieldtrip/fieldtrip/pull/35
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: i.andolina
      +@name: Ian Andolina
    assigned_to:
      +content: martinvinck
      +@name: Martin Vinck
    cc:
      - bart.gips
      - j.schoffelen
      - r.oostenveld
      - thiwom
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "13311"
        comment_count: "0"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-04-14 13:21:26 +0200
        thetext: |-
          I consider this a bug, but i've wrapped this in a new cfg setting to not alter current behaviour. Currently ft_spike_plot_raster.m plots a position for all trials on the y-axis, including those that have been excluded using cfg.trials. This means if you have 320 trials but only select 20 trials you still have a y-axis for 320 trials and a useless raster plot. If you set cfg.plotselection to 'yes', then the y-axis is scaled to the number of trials in cfg.trials and a normal raster plot is produced.

          I also replaced plot with line is it is faster, and added the computed plot positions to the cfg output...
      - +@isprivate: "0"
        commentid: "13312"
        comment_count: "1"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-04-14 13:21:53 +0200
        thetext: https://github.com/fieldtrip/fieldtrip/pull/35
      - +@isprivate: "0"
        commentid: "13329"
        comment_count: "2"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-04-15 00:03:03 +0200
        thetext: "It would also be great to not have the trials be sorted in numerical order but retain the order in which they're passed (I like to sort by both presentation time and reaction/saccade time for example), I'll think about adding this as another setting, though I don't know if this will affect the vectorisation of spike times to pass to plot/line. \n\nAs an aside lots of the spike functions don't handle either cfg.trials or cfg.latency (and spike data structures don't seem well supported by the main FT functions), I've had to make my own selection functions to address this, not sure if this is on a to-do somewhere?"
      - +@isprivate: "0"
        commentid: "16901"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-22 09:06:32 +0100
        thetext: '*** Bug 2534 has been marked as a duplicate of this bug. ***'
      - +@isprivate: "0"
        commentid: "16902"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-22 09:07:02 +0100
        thetext: |-
          Copying over Robert's comment in bug 2534->

          although I have not looked at the details yet, I suspect that a better solution is to not make data selection specific to plotting, but rather use ft_selectdata or ft_spike_select. See also bug #1514
      - +@isprivate: "0"
        commentid: "16903"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2016-02-22 09:07:48 +0100
        thetext: Is this still an open issue? Can the suggested functionality be achieved using function calls as per Robert's suggestion? Is there anyone willing to push this forward? If not, I suggest to close this bug
