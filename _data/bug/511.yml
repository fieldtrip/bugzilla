+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "511"
    creation_ts: 2011-03-01 20:38:00 +0100
    short_desc: warning using ft_write_volume
    delta_ts: 2011-03-31 14:13:57 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: fileio
    version: unspecified
    rep_platform: PC
    op_sys: Linux
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: minor
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: lilla.magyari
      +@name: Lilla Magyari
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    cc:
      - j.schoffelen
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "1540"
        comment_count: "0"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2011-03-01 20:38:14 +0100
        thetext: "Hi\n\nwhen I use \n\nft_write_volume for writing .mgz file, I get a warning:\n\n>> ft_write_volume('/home/coherence/roboos/data/lilmag/subjects/subject01/mri/Subject01.mgz',       mri_tal_rs.anatomy, 'transform', mri_tal_rs.transform);\nWarning: could not open\n/home/coherence/roboos/data/lilmag/subjects/subject01/mri/Subject01.mgz \n> In fileio/private/filetype_check_header at 54\n  In ft_filetype at 692\n  In ft_write_volume at 46\n\nhowever, I do get an mgz file at the right place (so... despite of the warning that it could not open the file, it writes the volume to the .mgz)\n\nbest,\nLilla"
      - +@isprivate: "0"
        commentid: "1546"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-03-02 10:57:48 +0100
        thetext: perhaps you shouldn't try to write into robert's home directory? ;o)
      - +@isprivate: "0"
        commentid: "1550"
        comment_count: "2"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2011-03-02 12:15:37 +0100
        thetext: |-
          (In reply to comment #1)
          > perhaps you shouldn't try to write into robert's home directory? ;o)

          My quota was all used, and I got extra quota from him for the mne analysis of the experimental data. He made me this folder under his directory.
      - +@isprivate: "0"
        commentid: "1626"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-03-16 22:30:32 +0100
        thetext: "should ft_write_volume not be called ft_write_mri (for consistency with ft_read_mri)?\n\nft_filetype tries to read the header to detect the fileformat, which of course fails here. The same problem is the case for other write functions:\n\nMacBook> grep ft_filetype ft_write_*\nft_write_data.m:dataformat    = keyval('dataformat',    varargin); if isempty(dataformat), dataformat = ft_filetype(filename); end\nft_write_event.m:eventformat = keyval('eventformat', varargin); if isempty(eventformat), eventformat = ft_filetype(filename); end\nft_write_volume.m:dataformat    = keyval('dataformat',    varargin); if isempty(dataformat), dataformat = ft_filetype(filename); end\n \nidea 1: \nlocal reimplementation of filetype detection in the write function that avoids reading the first bytes of the file\n\nidea 2:\nfix ft_filetype so that it does not try to read the first bytes of the header"
      - +@isprivate: "0"
        commentid: "1627"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-03-16 22:32:24 +0100
        thetext: "I have checked out ft_filetype, the warning was due to the incorrect order of \n- checking the first few bytes of the header and then the file extension\ninstead of \n- checking the extension and if that matches the first few bytes of the header \n\nI changed it at 4 locations in the filetype detection."
      - +@isprivate: "0"
        commentid: "1731"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-03-31 14:13:57 +0200
        thetext: changed the status of most recently resolved/fixed bugs into "CLOSED"
