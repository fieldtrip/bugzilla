+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "572"
    creation_ts: 2011-04-08 14:27:00 +0200
    short_desc: ft_megplanar outputs old ICA channel labels (and too many channels)
    delta_ts: 2011-05-05 21:24:34 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: stephen.whitmarsh
      +@name: Stephen Whitmarsh
    assigned_to:
      +content: stephen.whitmarsh
      +@name: Stephen Whitmarsh
    cc:
      - j.schoffelen
      - johanna.zumer
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "1782"
        comment_count: "0"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-04-08 14:27:53 +0200
        thetext: ft_megplanar outputs 3x as many channels+labels as it got in, instead of 2x (e.g. runica001_dH, runica200_dV + original channels/labels). Using ICA channels/labels of a several previous processing steps makes no sense to me...
      - +@isprivate: "0"
        commentid: "1783"
        comment_count: "1"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-04-08 14:28:19 +0200
        thetext: btw, this was on timelockeddata
      - +@isprivate: "0"
        commentid: "1784"
        comment_count: "2"
        attachid: "40"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-04-08 14:31:10 +0200
        thetext: |-
          Created attachment 40
          an averaged timelock datafile on which the problem occured
      - +@isprivate: "0"
        commentid: "1785"
        comment_count: "3"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-04-08 15:16:00 +0200
        thetext: "the problem is caused by the function channelposition. Here the gradiometer structure is reverted to its 'unbalanced' state, i.e. it undoes the previous balancing step. In your case the last balancing step was a linear projection applied in ft_rejectcomponent, which transformed from ica-space back to sensor space. \n\nchannelposition must be made robust against this, moreover we need to implement consistent handling of balancing throughout the code"
      - +@isprivate: "0"
        commentid: "1786"
        comment_count: "4"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-04-08 15:27:24 +0200
        thetext: |-
          Thanks Mattie!

          Shall I remove the cfg as a workaround?

          In any case I think I will balance my poor self now by orienting tangentially to the earth's gravitational field. On the grass that is. :-)
      - +@isprivate: "0"
        commentid: "1789"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-04-08 16:23:37 +0200
        thetext: "I think that if you temporarily remove the grad from the data, and replace this with an original grad, it should work. \nNote that we have to look into how the grad.tra looks for the ft_rejectcomponent data if you want to do a source reconstruction on this type of data"
      - +@isprivate: "0"
        commentid: "1791"
        comment_count: "6"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-04-08 16:31:37 +0200
        thetext: "I already replaced the .grad from a previous step and it somehow got it out of\nthe cfg. \n\nI agree that we should make 100% clear what happens with the grad field in\nrejectcomponents as well as any other functions that handle it, e.g. denoising\nwith 3rd order gradient, which is still a bit unclear for me."
      - +@isprivate: "0"
        commentid: "1867"
        comment_count: "7"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-04-22 21:11:38 +0200
        thetext: "Please test it. I updated the code with respect to balancing and keeping track of subsequent steps. It should work now. \n\nVerify this and close it if it works."
      - +@isprivate: "0"
        commentid: "1881"
        comment_count: "8"
        who:
          +content: stephen.whitmarsh
          +@name: Stephen Whitmarsh
        bug_when: 2011-04-26 15:13:11 +0200
        thetext: "It seems to work for me! \nClosing bug"
      - +@isprivate: "0"
        commentid: "2030"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-05-05 21:24:34 +0200
        thetext: 'bulk action: closed all bugs with status "resolved/fixed"'
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "40"
      date: 2011-04-08 14:31:00 +0200
      delta_ts: 2011-04-08 14:31:10 +0200
      desc: an averaged timelock datafile on which the problem occured
      filename: dataBL.mat
      type: application/octet-stream
      size: "3725133"
      attacher:
        +content: stephen.whitmarsh
        +@name: Stephen Whitmarsh
      data: REMOVED
