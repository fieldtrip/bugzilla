+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2817"
    creation_ts: 2015-01-30 12:30:00 +0100
    short_desc: bemcp output not 'sensible'
    delta_ts: 2019-08-10 12:43:53 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: WONTFIX
    see_also:
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=1954
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=1794
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: johanna.zumer
      +@name: Johanna
    assigned_to: fieldtriptoolbox
    cc:
      - j.schoffelen
      - litvak.vladimir
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "15115"
        comment_count: "0"
        attachid: "695"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2015-01-30 12:30:35 +0100
        thetext: |-
          Created attachment 695
          test_ft_headmodel_bemcp.m

          Hello,
          Even after a recent change by Robert to make sure that vol.mat of the output of 'bemcp' was not NaN (see also bug 1954), the resulting leadfields from a vol created with 'bemcp' (still?) don't look 'sensible'.  (By 'sensible', I mean the typical dipolar patterns, as seen in output from concentricspheres or dipoli on same data).

          I created test_ft_headmodel_bemcp.m, committed to SVN and also attached here.

          I don't think it's a 'units' issue, as I tested 'mm', 'cm', and 'm'.  Although clearly the 'correct' units should be used, it is not clear to me which are the 'correct' units for input to 'bemcp'.

          See also 'comment 10' of bug 1794.
      - +@isprivate: "0"
        commentid: "15116"
        comment_count: "1"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2015-01-30 12:43:39 +0100
        thetext: Related to this, the 'standard_bem' provided by FT is the output of 'dipoli'.  It would be great if a 'standard_bemcp' could also be provided, against which future testing could be made.
      - +@isprivate: "0"
        commentid: "15117"
        comment_count: "2"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2015-01-30 14:55:49 +0100
        thetext: |-
          (In reply to Johanna from comment #1)
          Hi Johanna,

          Could this be related to the recently fixed bug in prepare_vol_sens. I.e. if you did your prepare_vol_sens during the bug period (mid Dec to mid Jan), saved the result and using it now it could screw up the dipolar patterns.

          Vladimir
      - +@isprivate: "0"
        commentid: "15118"
        comment_count: "3"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2015-01-30 15:24:57 +0100
        thetext: |-
          (In reply to Vladimir Litvak from comment #2)
          Hi Vladimir,

          I don't think so, as in, I only started running/testing this code in the past week with an up-to-date FT version, and the test function I made calls the template files existing in FT already (computed much earlier than Dec 2014).
      - +@isprivate: "0"
        commentid: "16008"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-08-19 15:30:23 +0200
        thetext: |-
          I came across this bug and test script and decided to clean it up a bit (as some aspects were not correct). I have not solved the issue yet, but the test script should now be more helpful in finding the solution.

          mac011> svn commit template/ test/test_ft_headmodel_bemcp.m
          Adding  (bin)  template/headmodel/standard_seg.mat
          Sending        test/test_ft_headmodel_bemcp.m
          Transmitting file data ..
          Committed revision 10606.
      - +@isprivate: "0"
        commentid: "19667"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2019-03-28 15:38:50 +0100
        thetext: |-
          This test script has been demoted to failed_ft_headmodel_bemcp

          I fixed it, and can confirm the 'not sensible' output.

          This is probably because bemcp is not robust enough against mesh-related issues (e.g. problems with local curvature estimation or almost touching boundaries).

          It was however decided with Robert over tea just now, not to prioritize this. Rather, we have a generic functioning implementation of openmeeg.
      - +@isprivate: "0"
        commentid: "20543"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:43:53 +0200
        thetext: "This closes a whole series of bugs that have recently been resolved (either FIXED/WONTFIX/INVALID). \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
    attachment:
      +@isobsolete: "0"
      +@ispatch: "0"
      +@isprivate: "0"
      attachid: "695"
      date: 2015-01-30 12:30:00 +0100
      delta_ts: 2015-01-30 12:30:35 +0100
      desc: test_ft_headmodel_bemcp.m
      filename: test_ft_headmodel_bemcp.m
      type: text/plain
      size: "6178"
      attacher:
        +content: johanna.zumer
        +@name: Johanna
      data: REMOVED
