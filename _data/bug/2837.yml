+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "2837"
    creation_ts: 2015-02-11 13:57:00 +0100
    short_desc: extend and document electrocorticography (ecog) tools
    delta_ts: 2019-08-10 12:33:14 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: documentation
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    see_also:
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=2781
      - http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3033
      - http://bugzilla.fieldtriptoolbox.org/show_bug.cgi?id=3096
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    dependson:
      - "2793"
      - "2839"
      - "3013"
    blocked: "3059"
    everconfirmed: "1"
    reporter:
      +content: a.stolk8
      +@name: Arjen Stolk
    assigned_to:
      +content: a.stolk8
      +@name: Arjen Stolk
    cc:
      - bugzilla
      - dlozanosoldevilla
      - j.schoffelen
      - l.brinkman
      - martin.krebber
      - r.oostenveld
      - roemer.van.der.meij
      - sarang
      - tzvetan.popov
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "15285"
        comment_count: "0"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-02-11 13:57:13 +0100
        thetext: "There is a growing interest in tools that promote the analysis of (human) ECoG with FieldTrip. This bug aims at systematically implementing and documenting tools that either exist or require development. An initial but not fully exhaustive list includes:\n\n1) a general pipeline for preprocessing (e.g. lay-outs, re-referencing), analyzing, and plotting EcoG data\n2) accurate co-registration of sensorspace electrode positions (CT-scan) and sourcespace brain voxels/surface points (MRI-scan)\n3) an approach for group analysis (e.g. warping single-subject electrodes to a template MNI-brain)\n4) an approach for linking electrode positions to cortical parcellations and labels (e.g. electrode xxx over area xxx) \n\nMore suggestions are welcome.\n\nSome relevant existing documentation:\n\nrelated to point 1:\nhttp://fieldtrip.fcdonders.nl/tutorial/ecog\nhttp://fieldtrip.fcdonders.nl/tutorial/layout\nhttp://bugzilla.fcdonders.nl/show_bug.cgi?id=2781\n\nMore references are welcome."
      - +@isprivate: "0"
        commentid: "15908"
        comment_count: "1"
        who:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        bug_when: 2015-07-15 13:39:35 +0200
        thetext: |-
          Monkey Ecog is coming from :

          http://neurotycho.org/
      - +@isprivate: "0"
        commentid: "15909"
        comment_count: "2"
        who:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        bug_when: 2015-07-15 13:39:58 +0200
        thetext: |-
          Template macaque brain:
          http://www.bic.mni.mcgill.ca/ServicesAtlases/MacaqueDownload
      - +@isprivate: "0"
        commentid: "15913"
        comment_count: "3"
        who:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        bug_when: 2015-07-15 14:07:47 +0200
        thetext: |-
          Breaking down the tutorial:

          1) Various sources of distortion:
           - lens distortion will lead to mismatch between MRI and photo of the electrodes
           - MRI is also misplaced, e.g. brain is at different position with respect to the skull while seated and supine.
      - +@isprivate: "0"
        commentid: "15914"
        comment_count: "4"
        attachid: "718"
        who:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        bug_when: 2015-07-15 14:15:18 +0200
        thetext: |-
          Created attachment 718
          Dalal et al. 2009
      - +@isprivate: "0"
        commentid: "15915"
        comment_count: "5"
        attachid: "719"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-07-15 14:21:44 +0200
        thetext: |-
          Created attachment 719
          Miller et al., Brain surface electrode co-registration using MRI and x-ray
      - +@isprivate: "0"
        commentid: "15916"
        comment_count: "6"
        attachid: "720"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-07-15 14:22:40 +0200
        thetext: |-
          Created attachment 720
          Hermes et al., Automated electrocorticographic electrode localization on individually rendered brain surfaces
      - +@isprivate: "0"
        commentid: "15919"
        comment_count: "7"
        who:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        bug_when: 2015-07-15 15:51:32 +0200
        thetext: |-
          For the tutorial documentation:
          - clarify the difference between EcoG, iEEG and stereotactical EEG.
          iEEG and stereotactic are the same.
      - +@isprivate: "0"
        commentid: "15920"
        comment_count: "8"
        who:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        bug_when: 2015-07-15 16:05:41 +0200
        thetext: Provide a documentation of the existence and usability of the macaque template
      - +@isprivate: "0"
        commentid: "15928"
        comment_count: "9"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-07-15 18:04:47 +0200
        thetext: "The general approach for now is to chunk the relevant analysis steps, depending on the type of data available, e.g.:\n-preprocessing of ecog data (maybe buttonpress data?) - though this may be obsolete given the already present tutorials on this step regarding eeg and meg data\n-photography-based layout and topoplotting\n-co-registration of x-ray and mri to obtain 3d electrode positions on a rendered cortical surface (for surface-based plotting of data), see directly below\n\nIn a nutshell, x-ray & mri co-registration involves (according to Miller et al. technique):\n1) manual overlay (by stretching etc) of a rendered cortical surface* on a CT scan, such that the outlines overlap (Fig 4A, note this is a y- and z- dimension view, with x-dimension ignored at this stage)\n2) manual placement of 'anchor points' in 2D (e.g. on brain outline, Fig 4B) \n3) removal of the cortical surface overlay, such that the anchor points, as well as the electrodes, become visible and assignable on the x-ray\n4) calculation of a scaling factor s, between anchor positions on brain b and x-ray x, etc.\n5) 3rd projection of 2d electrode positions on cortical hull\n\nidea for a first step:\nconstruct manual (or automated) image registration/alignment, in which (transparent) MRI volume (or slice, e.g. mean along x-dimension) is overlaid on x-ray\n(see interactive code in ft_electro/volumerealign, defacevolume)"
      - +@isprivate: "0"
        commentid: "16264"
        comment_count: "10"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-10-26 20:47:38 +0100
        thetext: "(In reply to Arjen Stolk from comment #9)\nnotes from meeting with Cal, on ecog recons:\n\n1) MR (structural, mostly multiple, requires selection of the best one - in bioimage suite): \ndicom images\n->\nanonymize (Jamie's script) \n->\n.nii \n->\nbioimage suite\n\n\n2) CT (mostly multiple scans (eg 5-15), requires selection of the best one - in bioimage suite):\ndicom images\n->\nanonymize (Jamie's script)\n->\n.nii \n->\nbioimage suite\n->\nconvert to 3d (consider PRS to LPS orientation)\n\n\n3.1) Recon/coregr (product of MR and CT):\nbioimage suite\n-> \nload in MR\n->\nbrain extraction\n\nbioimage suite\n->\nload in CT\n->\nthreshold so that electrodes are visible (grids are not visible on intra-operative MR)\n->\ndetermine coordinates of electrodes in CT space\n\n\n3.2) Cogregr ct to extracted brain (Jamie's script, spits out multiple trans matrices, e.g. linear, affine)\n->\nbioimage suite\n-> \nselect the best transformation matrix (e.g. linear inverse, generally works best) by comparing electrode positions to brain\n\n\n3.3) Coregr extracted brain to mni (Jamie's scripts)"
      - +@isprivate: "0"
        commentid: "16265"
        comment_count: "11"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-10-26 21:04:02 +0100
        thetext: Quick follow-up on this, a first time-saving implementation would be to make a thresholding tool that allows sliding the image intensity thresholds such that the electrodes can be isolated from brain tissue. Then there should be an option to (bwlabel alike) identify the separate image blobs (electrodes), and assign an electrode position to the center coordinates of each blob. Ideally, those positions are also spit out in bioimage suit compatible format.
      - +@isprivate: "0"
        commentid: "16266"
        comment_count: "12"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-10-27 09:44:40 +0100
        thetext: "(In reply to Arjen Stolk from comment #11)\n\nI suggest a ft_volumethreshold function that takes a volume as input, default cfg.parameter=anatomy, and that presents the 3-ortho-view like ft_sourceplot and two sliders: one for the lower and one for the higher threshold. \n\nThere would also be a button to toggle between the view of the full anatomy (grey values) and the thresholded binary image (black-white). And/or the result of thresholding would be shown color coded and with opacity on top of the anatomical MRI (in grey values)."
      - +@isprivate: "0"
        commentid: "16267"
        comment_count: "13"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-10-27 09:53:22 +0100
        thetext: |-
          We could consider building this into ft_volumesegment with cfg.method = 'interactive';
          Don't know whether this merits a separate function.

          Note, there's a private function called volumethreshold.

          Note, tangentially, there's also a private function called volumeedit, which may deserve to be called from within a higher level ft-function (e.g. ft_volumesegment) to do additional manual refinements to any segmentation. It was designed to improve the white matter segmentation provided by freesurfer, but it might be useful for Arjen's purposes as well.
      - +@isprivate: "0"
        commentid: "16268"
        comment_count: "14"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-10-27 09:54:22 +0100
        thetext: |-
          (In reply to Jan-Mathijs Schoffelen from comment #13)

          thanks, those are valuable suggestions!
      - +@isprivate: "0"
        commentid: "16314"
        comment_count: "15"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-09 01:03:16 +0100
        thetext: "Thanks both. \n\nJust wanted to let you know I'm still gaining intel from others and exploring the different functions out there. It seems that the volume thresholding and automatic electrode assignment may be a great addition, just is not bulletproof. The CT scans may contain artefacts (e.g., electrode blurring in a certain direction), so some manual labor is still required or even the predominant approach, in the form of handpicking electrodes. Another desired functionality, I think (but haven't seen it in other toolboxes), is to change the luminance/intensity of the image for spotting the electrodes in the first place. In conclusion, it seems a separate function may be needed here, e.g. ft_electrodelocalise, that does all that. For overview purposes, this gui should:\n- large view of a CT slice\n- toggle between different views (toggle)\n- adjustment of intensity/luminance (sliders)\n- handpicking of electrodes, and undoing (mouse polling and clicking functionality)\n- thesholding and automatic selection of electrodes"
      - +@isprivate: "0"
        commentid: "16315"
        comment_count: "16"
        attachid: "751"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-10 08:41:08 +0100
        thetext: "Created attachment 751\nft_electrodelocalise\n\nWork in progress:\n\nThe bottom slider allows moving 1 slice in the z-direction. The slides on the side allow changing the intensity of the image. \n\nIt's become clear that automatic thresholding is not going to be a desired feature: there is overlap in intensity between electrodes and skull tissue, meaning that simple intensity-based thresholding is not straightforward.\n\nDesired features:\n1) Ability to specify electrodes labels, for guiding the selection process and assignment process (two birds with one stone). For instance:\n\ncfg.eleclabels = hdr.labels; makes a list of electrodes show up on the side. Each time an electrode is selected, the electrode label on the top of the list disappears (=assignment).\n\nOtherwise, the labels list will be a growing; 1, 2, etc, i.e. in order of selection. One thus later has to sort these out / re-assign them so that they match the hdr.label.\n\n2) Another realtime axis showing the selected electrodes in 3D (e.g. plot3)."
      - +@isprivate: "0"
        commentid: "16316"
        comment_count: "17"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-10 10:52:13 +0100
        thetext: "(In reply to Arjen Stolk from comment #16)\n\nwe should try to keep the functions consistent. \n\nThere is now ft_sensorrealign and ft_electroderealign. I always forget why there are two, but somehow there was a reason. I am aware that I am always asking myself: \"why are there two separate functions?\" but I always forget to write down the answer.\n\nThe method=manual option in ft_sensorrealign allows for clicking electrodes (on the skin surface). That is functionality-wise similar to what you are now trying to implement (i.e. manual placement, of course your geometrical input data is different)."
      - +@isprivate: "0"
        commentid: "16317"
        comment_count: "18"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2015-11-10 11:03:31 +0100
        thetext: |-
          Note:
          -there's a hidden option in ft_volumerealign that allows to store additional points (i.e. beyond the fiducials), to be achieved by right-clicking. (I intended this once upon a time to mark electrode positions on patient CTs :o).
          -fieldtrip/private/volumeedit has an efficient way of going through slices quickly (if I remember correctly, by moving over the panels with the left-button pressed).
          -w.r.t the electroderealign/sensorrealign: there's also an interactiverealign
      - +@isprivate: "0"
        commentid: "16325"
        comment_count: "19"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-10 16:55:43 +0100
        thetext: |-
          (In reply to Jan-Mathijs Schoffelen from comment #18)
          Many wheels invented already. Ill check those out as soon as im sure sbout things like the layout, eg ortho vs single slice view.


          Thx for the tips. Speed is an issue. The ortho is relatively slow ( clearing many of the uiresumes helps) so volumeedit may certainly be interesting.
      - +@isprivate: "0"
        commentid: "16332"
        comment_count: "20"
        attachid: "752"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-11 07:11:13 +0100
        thetext: "Created attachment 752\nversion 2\n\nNot fully functional yet. The idea is to have\n\n1) A list of electrodes for selecting/assigning, either with cfg.channel = hdr.label in the function call. Otherwise a list is automatically created consisting of elec1, elec2, .. \nEach time a elec label is clicked, its font turns black, and the position of the crosshair is stored (latter needs to be implemented). Also a marker needs to be placed.\n2) Labels radiobutton allows seeing the labels associated with the markers within the orthoplot (to be implemented). Otherwise correcting say the order of an electrode array would be impossible.\n3) Magnet radiobutton activates a search to a near-click-location (e.g. 3mm radius) peak intensity voxel (to be implemented)."
      - +@isprivate: "0"
        commentid: "16333"
        comment_count: "21"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-11 07:52:56 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #20)
          BTW, so far there's strong overlap in code with the ortho part of ft_volumerealign. However, that function name does not fit well the present purpose of localizing electrodes. :/
      - +@isprivate: "0"
        commentid: "16340"
        comment_count: "22"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-11 14:49:53 +0100
        thetext: the http://www.fieldtriptoolbox.org/tutorial/ecog tutorial explains the 2D layout for plotting, but not the procedure for obtaining 3D electrode positions (as it is not needed there). Arjen is currently working on the 3D positions.
      - +@isprivate: "0"
        commentid: "16343"
        comment_count: "23"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-11 15:03:40 +0100
        thetext: |-
          I made a new function (actually Arjen made it, I only added it to SVN) for electrode placement (e.g. by poking the surface or a CT/MRI).


          mac011> svn commit ft_electrodeplacement.m
          Adding         ft_electrodeplacement.m
          Transmitting file data .
          Committed revision 10873.

          See also bug 2837.
      - +@isprivate: "0"
        commentid: "16346"
        comment_count: "24"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-11 15:55:42 +0100
        thetext: "(In reply to Robert Oostenveld from comment #23)\n\n\nmac011> svn commit ft_electrodeplacement.m plotting/\nSending        ft_electrodeplacement.m\nSending        plotting/ft_select_point3d.m\nTransmitting file data ..\nCommitted revision 10875.\n\nPlacing electrodes on a surface now works. \n\nmac011> svn commit ft_electrodeplacement.m plotting/\nSending        ft_electrodeplacement.m\nSending        plotting/ft_plot_mesh.m\nTransmitting file data ..\nCommitted revision 10876.\n\nAnd this makes it even better. Try this\n\ncfg = [];\ncfg.headshape = ft_read_headshape('surface_pial_both.mat')\nft_electrodeplacement(cfg)"
      - +@isprivate: "0"
        commentid: "16349"
        comment_count: "25"
        attachid: "754"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-13 01:58:56 +0100
        thetext: |-
          Created attachment 754
          ft_electrodeplacement

          Function is good to go. Might do a bit more tweaking, but in essence it works pretty good. Especially the magnet feature makes it easy to directly localize electrodes and their center coordinates.
      - +@isprivate: "0"
        commentid: "16355"
        comment_count: "26"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-14 03:20:00 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #25)

          See this documentation for a human ecog pipeline in spe:
          http://www.fieldtriptoolbox.org/tutorial/ecog

          The electrodeplacement bit is ready. Previously, we've built in support for reading in ecog data recordings in edf fileformat (the bay area standard it seems). What needs emphasis still is:
          1) coregistering CT to MR: explore specialized algorithms out there (AFNI?)
          2) projecting electrodes to a brain surface hull to correct for the ~1cm brain shift under CT (due to surgery drugs; necessary for grids only)
          3) project/plot data on a brain surface (I believe Roemer has quite some experience here)
      - +@isprivate: "0"
        commentid: "16371"
        comment_count: "27"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-16 12:02:25 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #26)

          I don't think that monkey and human ecog should be part of the same tutorial. Perhaps for human we should start with only an example page, as we'll also not be sharing data.
      - +@isprivate: "0"
        commentid: "16374"
        comment_count: "28"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-16 19:04:37 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #27)

          Agreed, I've created this (unlinked) page for the moment. We can choose a different title and location as it evolves:

          http://www.fieldtriptoolbox.org/faq/how_can_i_place_electrodes_on_an_anatomical_ct_or_mr
      - +@isprivate: "0"
        commentid: "16375"
        comment_count: "29"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2015-11-16 19:41:43 +0100
        thetext: "Hadn't responded here yet, but fantastic work Arjen!\n\nI currently don't have much experience localizing electrodes, the data I've used always had it done already. But I will be doing this more often, and will gladly contribute. I'll be mostly working with depth electrodes, so will mostly be able to contribute there.  \n\nPlotting I've done with custom code for years. Single value per electrode, but also vectors/matrices. Can contribute there!\n\nW.r.t. to reconstructions:\nOne thing to keep in mind though, when writing code/documentation, is that there's not a lot of standards. Many labs do it in different ways. Some, like e.g. the Knight lab, use a preop MR and a postop CT, others use pre/postop MR (which will probably become more common?). Some do it in Talairach space (e.g. the Kahana lab), some in MNI. Not saying of course we should worry about this, but just to keep it in the back of our mind (e.g., not enforcing a CT in MNI as input). \n\nFantastic work Arjen, looking forward to using it! The tools I've seen so far, often a patching together of random software bits it seemed, were not great. Time to do it better! :)"
      - +@isprivate: "0"
        commentid: "16376"
        comment_count: "30"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-16 19:58:49 +0100
        thetext: |-
          (In reply to Roemer van der Meij from comment #29)

          Nice to see your enthusiasm! And welcome aboard :P
      - +@isprivate: "0"
        commentid: "16402"
        comment_count: "31"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-11-21 00:22:40 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #30)

          One more objective down: coregistration & electrodeplacement are implemented

          http://www.fieldtriptoolbox.org/faq/how_can_i_place_electrodes_on_an_anatomical_ct_or_mr

          Open/remaining challenge: correct for a brainshift in CT (grid cases) by, for instance, projecting electrodes on a surface hull. The same hull could also be used for plotting ecog data.
      - +@isprivate: "0"
        commentid: "16437"
        comment_count: "32"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-11-25 11:03:37 +0100
        thetext: "On 20 Nov 2015, at 21:30, Arjen Stolk wrote:\n\nHeb die viewdim's ingebouwd in realign and sourceplot: \n\nsvn commit ft_volumerealign.m -m 'enhancement: added the possibility to change the orthoplot axes, either square of data dimension-dependent'\nsvn commit ft_sourceplot.m -m 'enhancement: added the possibility to change the orthoplot axes, either square of data dimension-dependent'\n\n-------------\n\nI will follow this up in bug 3013"
      - +@isprivate: "0"
        commentid: "16498"
        comment_count: "33"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-12-04 10:47:25 +0100
        thetext: "The development of documentation is too scattered and inconsistent, us working on out (jointly) should be more transparent and include contributions from all. \n\nI renamed the existing ecog tutorial to monkey_ecog. I have deleted\n\nhttp://www.fieldtriptoolbox.org/faq/how_can_i_place_electrodes_on_an_anatomical_ct_or_mr\n\nand moved the content over to the new\n\nhttp://www.fieldtriptoolbox.org/tutorial/human_ecog\n\nThis page is linked in the tutorial overview and I expect all relevant documentation to appear here. It does not have to be perfect from the start, but by having it visible we can have many people contributing on perfecting it!"
      - +@isprivate: "0"
        commentid: "16507"
        comment_count: "34"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-12-06 00:58:55 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #33)
          Thanks for thinking along, Robert. It seems the website wasn't updated yet, so I've created that human_ecog weblink myself. Haven't incorporated the other changes you mentioned (renaming/relocating animal ecog, deleting old elecetrode placement page).

          The status quo:
          In principle, the pipeline is finished for analyzing depth-recordings. I've tested in on a couple of tough cases (patients with big lesions/lobotomies, poor quality scans), but the coregistration using spm12 seems to operate just fine (because it looks for mutual information across ct and mri, which mostly constitutes the skull). Another positive aspect is the little amount of time manual labor needed. A rough layout of the steps and their required time:
          - read in and align the mr (<1 min, manually)
          - read in and align the ct (<1 min, manually)
          - coregistration of the ct to the mr (<5 min)
          - localize electrode positions on the ct (<15 min, manually)
          - create surface mesh using freesurfer (~8 hours, not manually!)

          For grid-recordings, what needs to be added still is a correction for the 'brain shift' (obj #1). Practically, this involves the creation of a brain mask/hull, and project the positions stored in elec.elecpos onto it using a still to be selected algorithm. Some input/suggestion is  needed here. There is a project_elec function in the private dir. And ft_volumesegment allows building brainmasks, but those are based on the whole brain (incl. csf), whereas ideally we have a smooth surface around the cortex (i.e. as how an electrode grid would lay over the cortex).

          The second remaining objective (obj #2) is to develop/adjust the existing plotting functionalities for plotting the ecog data on the freesurfer meshes. Some Roemer-magic may come in handy here. ;)

          A third, less critical point (obj #3) is to investigate the quality of inter-brain coregsitrations/normalisations for plotting ecog data or electrode locations on a template/group mri/surface.
      - +@isprivate: "0"
        commentid: "16508"
        comment_count: "35"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2015-12-06 14:24:53 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #34)

          Hi Arjen,

          On Friday the DCCN web server crashed and had to be restored from backup. A few hours of work have been lost.
      - +@isprivate: "0"
        commentid: "16510"
        comment_count: "36"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2015-12-06 19:01:47 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #35)

          Ouch :/
      - +@isprivate: "0"
        commentid: "16743"
        comment_count: "37"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-01 21:56:24 +0100
        thetext: "I'm working on one of the plotting functions right now, and I have a request. \n\nCould we provide an additional field in the elec structure, indicating whether an electrode is a 'surf' surface electrode, or a 'depth' electrode. \n\nCould we use the field elec.chantype for this? If so, Arjen, do you think we could add this distinction in ft_electrodeplacement? \n\nThe reason is simple, surface electrode need to be plotted on a pial surface, while depths need to be plotted on an MRI, which both require different handling in terms of preparing and visualization and things like surface area coloring.\n\nAnother option is for this to be user-provided information, but I think it blends well with ft_electrodeplacement.\n\nThoughts?"
      - +@isprivate: "0"
        commentid: "16764"
        comment_count: "38"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-04 00:04:42 +0100
        thetext: "I'm going through the tutorial a bit, and got stuck at realigning the CT prior to coregistration. \n\nAccording to the tutorial I have to define the ears, nose, and midline. But, how do you do that? Ear's are big :p. Or isn't it that important? Either way, the reader will be curious as well.\n\nI couldn't see anything at the CT due to the contrast limit, so I stole and added the intensity sliders from ft_electrodeplacement. Thanks! ;). (waiting on approval of the pull request currently). The sliders half disappeared in the background, as that was set to white by default. I changed this back to matlab defaulting it, making the sliders fully visible. I noticed the same thing actually in ft_electrodeplacement, would be great to change there too. \n\nEven with modifying the contrast, I could still not identify the ears though."
      - +@isprivate: "0"
        commentid: "16765"
        comment_count: "39"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-04 00:25:09 +0100
        thetext: (made ft_electrodeplacement contrast changing quite a bit faster by removing the explicit clipping of the data, which existed both there and in ft_plot_ortho, ft_plot_slice handles this using a quick caxis)
      - +@isprivate: "0"
        commentid: "16766"
        comment_count: "40"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-02-04 02:33:15 +0100
        thetext: |-
          Nice work!

          Yeah, clicking the exact location of the ears is not necessary, on the CT. It's just to ensure left is left and right is right.
      - +@isprivate: "0"
        commentid: "16792"
        comment_count: "41"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-06 01:26:37 +0100
        thetext: "RE brain shift:\nI've been thinking about this a bit. Thought would be maybe good to brainstorm a bit. I'll try and find an 'extreme case' of a brain shift and attach it.\n\nGoal: make electrodes from grid fall exactly on the subject's individual cortex, as the grid should be.\n\nStep 1: obtain smoothed surface from pial surface/MRI\n- I've seen this popup occasionally while browsing through some of the source/headshape related functions. Am I correct in that something of this form is already implemented? \n\n\nStep 2: wrap grid on smooth surface\nThis can be really sophisticated, but I find it hard to get my search terms right for this, because I'm sure some algorithms exist. \nWe can't simply do a 'closest point on surface for all electrodes simultaneously', because that would not take into account the inter-electrode difference, which should remain intact, to some reasonable degree at least. \n\nSo, here's the simplest algorithm I can think of right now. \n\n1) find inter-electrode distance: average of distance to closest neighbor for each electrode using their xyz coordinates\n2) for electrodes with a distance to the nearest surface point of 5% of this, snap the electrode to this point.\n3) lock these electrodes in place\n4) find the electrode with the next biggest distance to the surface\n5) shift this electrode to the surface\n6) for all electrodes, whose x,y,z sign of the distance to the closest point on the surface is the same, move all these electrodes the same degree to the surface as the electrode in 5\n7) lock the electrode in 5, and return to 2\n\nWhat this hopefully achieves, is that when a grid is 'sticking out' partly, it is wrapped to the surface in a way that somewhat preserves the inter-electrode distance\n\nA more sophisticated approach in step 5 would be to fit a spline to the surface, with the origin being the closest electrode-on-surface, and the distance being equal to the electrode in 5 the this origin. Save the endpoint of the spline. Do this for some number of splines whose endpoint will be close to the electrode in 5 (or all in the circle from the origin) and select the spline whose endpoint coordinate has the least difference with the electrode in 5.\nThat will be the new location of the electrode in 5. Use the translation to shift all electrodes, following step 6.\n\nIdeas?"
      - +@isprivate: "0"
        commentid: "16793"
        comment_count: "42"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-02-06 04:55:26 +0100
        thetext: |-
          Thanks for raising this issue. I've been playing a bit with the hull creation and came up with:

          mesh_l = ft_read_headshape('SubjectUCI29_lh.pial');
          shp_l = alphaShape(mesh_l.pos, 5); % alpha shape

          ft_plot_mesh(mesh_l,'facecolor', [0.781 0.762 0.664], 'EdgeColor', 'none')
          hold on; plot(shp_l, 'facealpha',0.3)
          lighting gouraud
          material shiny
          camlight

          The challenge is to snap electrodes to it, possibly using any of the sophisticated methods you outlined. I've snapped electrodes to their nearest hull coordinate, but the result was unsatisfying as those coordinates (shp.Points) are on the edges really (e.g. gyri) and never on the ridges (e.g. above sulci).
      - +@isprivate: "0"
        commentid: "16800"
        comment_count: "43"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-09 01:24:23 +0100
        thetext: "I thought we could use something like the following, which I stole from ft_volumerealign.\n\nHowever, it is clear the electrodes have partially 'sunk' into the brain. Which I was surprised about. For sure there could be some noise in the procedure, but it extracts \n'brain' (defined as csf, white, grey), as such it should fit? Or am I interpreting ft_volumesegment incorrectly?\n\nRegardless, it made me wonder how successful the coregistration was. Could you add a step to the tutorial to check this? Is there a way we can plot both of them on top of each other? I added a fixme for the tutorial for this. \n\n\n\n\n*************\n% read MRI\nmri            = ft_read_mri('SubjectECoG_MR_preproc.mgz');\nmri.coordsys   = 'tal';\n% segment mri and extract brain\ncfg            = [];\ncfg.method     = 'spm8';\ncfg.output     = 'brain';\nsegmented = ft_volumesegment(cfg, mri);\n% use extracted brain to generate surface\ncfg             = [];\ncfg.tissue      = 'brain';\ncfg.method      = 'isosurface';\ncfg.numvertices = inf;\nbrain           = ft_prepare_mesh(cfg, segmented);\n% plot mesh\nfigure\nft_plot_mesh(brain, 'edgecolor', 'none', 'facecolor', 'cortex')\ncamlight(0,0);\nlighting phong\nmaterial dull\nset(gca,'DataAspectRatio',[1 1 1], 'PlotBoxAspectRatio', [1 1 1]);\nalpha(.7)\nhold on\n\n% add electrodes\nplot3(elec.elecpos(:,1),elec.elecpos(:,2),elec.elecpos(:,3),'o','markerfacecolor','r','markeredgecolor',[0 0 0])\n*************"
      - +@isprivate: "0"
        commentid: "16801"
        comment_count: "44"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-02-09 01:42:54 +0100
        thetext: |-
          "'brain' (defined as csf, white, grey)"
          I've been playing with ft_volumesegment in the past for this purpose. By default, the 'brain' option outputs a mask involving csf indeed, which - after carefully checking - creates a hull that is rather large. Or at least, not as tight to the cortex surface as I'd hoped. This means, for ecog purposes, we'd like to have a hull option, which is only the white and grey matter, but then smoothed so that the hull does not follow the surfaces of the gyri too strictly.

          I guess you can plot both meshes, making the hull mesh transparent, to see whether the freesurfer surface mesh fits?
      - +@isprivate: "0"
        commentid: "16806"
        comment_count: "45"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-11 20:07:36 +0100
        thetext: "Hey both,\n\nI added an option to ft_volumerealign, cfg.viewresult (default is no).\nWhen the input is one volume, cfg.viewresult produces an interactive figure at the end of the volume in the new coordinate space.\nWhen the input is two volumes, like in our case here, they are plotted on top of each other, using transparency masking, with the target volume being red (MRI in our case), and the realigned volume being blue (CT in our case here). It's interactive, so you can click through the ortho plot to check whether the alignment succeeded. \n\nI've added a picture showcasing it here.\n\nThis might seem trivial, as realigned works perfectly in most experimental situation (?). However, in the case of ECoG, the MRIs and the CT are usually taken for medical purposes, and can contain all sorts of things that can disrupt the realignment. Examples are contrast fluid MRIs, a particular noisy anatomical sequence, and of course intense artifacts produced by (the wires from) the electrodes, especially in the case of a post implantation MRI.\n\nI'll add it to the wiki in a sec, and create a pull request to master."
      - +@isprivate: "0"
        commentid: "16807"
        comment_count: "46"
        attachid: "775"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-11 20:09:50 +0100
        thetext: |-
          Created attachment 775
          Example showing cfg.viewresult for MRI + CT

          Note that the purpose of the colors chosen such that, when using a preop and postop MRI, the result will be purple in the case of good alignment
      - +@isprivate: "0"
        commentid: "16808"
        comment_count: "47"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-02-11 20:52:23 +0100
        thetext: Great work, Roemer! How did you solve the issue of the CT and MR having different dimensions? Do you reslice one of the two on-the-fly, or plot them on top of each other using different axis dimensions?
      - +@isprivate: "0"
        commentid: "16809"
        comment_count: "48"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-02-12 00:06:22 +0100
        thetext: ft_plot_ortho/slice take care of that actually. As long as their in the same coordinate space, which they should if the realignment was successful, they should fall on top of each other. The images are actually surface objects, so it's not really pixels that are drawn, but polygons, and then it doesn't matter whether they are sampled identically or not. (which probably also holds for ft_sourceplot?)
      - +@isprivate: "0"
        commentid: "16810"
        comment_count: "49"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-02-12 00:45:24 +0100
        thetext: |-
          Niicceee. Yeah, ft_sourceplot (method ortho and slice) also call ft_plot_ortho and ft_plot_slice under the hood.

          I'm still very curious to see those surface renderings you made.. ;)
      - +@isprivate: "0"
        commentid: "17133"
        comment_count: "50"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-03-15 03:41:53 +0100
        thetext: |-
          Instead of working on my deadline, I followed a hunch. Good news is that another outstanding obstacle bit the dust, i.e. spatial normalization of electrodepositions:

          % normalise anatomical scan
          mri_n = ft_volumenormalise([], mri); % non-linear transformation

          % normalise electrode positions
          elec_n = elec;
          elec_n.elecpos = ft_warp_apply(mri_n.params, elec.elecpos, 'individual2sn');

          Two obstacles left:
          1) correct for 'the brain shift' using a 'hull', i.e. snap electrodes to outer surface
          2) (surface-)plotting, projecting functional data on the brain (using ft_sourceplot method surface?)

          Did you make any progress with either one of these, Roemer? For instance, were you able to create a good hull? I lost track of what you were doing. :)

          These are the things I came up, but not happy with the results:

          mesh_l = ft_read_headshape(['SubjectUCI29_lh.pial']);
          shp_l = alphaShape(mesh_l.pos, 5); % alpha shape

          Freesurfer also outputs a mask, which would need further smoothing to make a hull:
          mask = ft_read_mri(['xxx/freesurfer/mri/ribbon.mgz']);
      - +@isprivate: "0"
        commentid: "17136"
        comment_count: "51"
        attachid: "783"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-03-15 04:32:06 +0100
        thetext: |-
          Created attachment 783
          hull, using code by Roemer
      - +@isprivate: "0"
        commentid: "17137"
        comment_count: "52"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-03-15 04:34:22 +0100
        thetext: |-
          That hull looks awesome - sorry, saw and tried out your code only just now. Only presumed inaccuracy is that it includes the csf as well, which is not exactly at the brain's outline?

          % segment mri and extract brain
          cfg            = [];
          cfg.method     = 'spm8';
          cfg.output     = 'brain';
          segmented = ft_volumesegment(cfg, mri);
      - +@isprivate: "0"
        commentid: "17138"
        comment_count: "53"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-03-15 04:44:17 +0100
        thetext: |-
          Actually in this instance, it looks pretty good (even with csf included?):

          mri.dat = double(segmented.brain);

          cfg = [];
          cfg.funparameter = 'dat';
          ft_sourceplot(cfg, mri);

          Notice that ft_volumesegment thinks that that left hemisphere hematoma is brain tissue as well.
      - +@isprivate: "0"
        commentid: "17139"
        comment_count: "54"
        attachid: "784"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-03-15 04:47:19 +0100
        thetext: |-
          Created attachment 784
          hull & mri
      - +@isprivate: "0"
        commentid: "17145"
        comment_count: "55"
        attachid: "785"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-15 13:08:21 +0100
        thetext: "Created attachment 785\ncolor-coded 3D mesh\n\nOk, so I have just been trying to catch up with all the comments on this thread. \n\nWhat I care about is that we implement things in a way that allows them to be reused. Simon (now also CC) is working on electrode placement on basis of 3D photogrammetry and 3D scanning (and on spatial matching of individual head surfaces to template EEG volume conduction models).\n\nFor that we also want to use ft_electrodeplacement, with as input a headshape mesh like the one attached (the picture is a screen shot of the color-coded 3D mesh). Also for that the clicked electrode locations are displaced relative to the surface, so here we also need the electrodes to be projected onto a surface. \n\nI propose to make the projection of electrodes on a surface part of ft_electroderealign (with a new method), where the surface could be either the skin compartment of a EEG volume conduction model, or a bounding mesh around a FS cortical sheet, or some other surface. \n\nGiven previous discussions on different handling of elec.chantype for sEEG and ECoG and EEG channels, the ft_electroderealign cfg.method=projectsurface implementation would project a subset of channels (default cfg.channel={'ECoG' 'EEG'}) and excluding sEEG. \n\nChannel selection on the basis of elec.label is not done anywhere in FT code at the moment. Besides ft_electroderealign, also ft_prepare_layout should do it (allowing for a 2D topographic layout being constructed from an ECoG grid, but excluding sEEG). To include the sEEG channels in a multi plot, they would have to be placed somewhere at the side. Or make a combination of two layouts (one with the channels on the surface, another one with method=ordered) and merge them.\n\n@Jan-Mathijs, about a month ago we also discussed layouts and planar channels and ICAs and merging layouts, etc.  That had to do with ft_databrowser. Do you know where that was?"
      - +@isprivate: "0"
        commentid: "17149"
        comment_count: "56"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2016-03-15 17:30:57 +0100
        thetext: |-
          (In reply to Arjen Stolk from comment #50)
          I'll go through the comments and catch up later. As a quick reply, Arjen, please discuss all post-localization plotting matters in bug3059.
      - +@isprivate: "0"
        commentid: "17152"
        comment_count: "57"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-16 10:17:08 +0100
        thetext: |-
          (In reply to Robert Oostenveld from comment #55)

          to answer my own question about "layouts and planar channels and ICAs and merging layouts, etc." -> that is part of bug 3033.
      - +@isprivate: "0"
        commentid: "17189"
        comment_count: "58"
        who:
          +content: martin.krebber
          +@name: Martin Krebber
        bug_when: 2016-03-30 18:59:35 +0200
        thetext: |-
          Hi everyone,

          First of all, great work on the new ECoG functionality! I believe this will be very helpful to many people.

          I'm not sure if this is the right place for my comment, but I wanted to let you know that I uploaded the functional analysis part of the human ECoG tutorial as we talked about earlier this year. I broke it down into easily digestible bits of FieldTrip code and left out most of our custom code (except for the high gamma extraction).

          I left some of the sections empty that I wasn't sure about. I didn't really have much to say about re-referencing, although I understand that this is an important point. As for visualizing the data, I don't think we need special multiplotters for ERP/TFR data, since that can already be accomplished with existing FieldTrip functions (by making an ordered layout or an individual layout based on an image of electrode placements). I just wasn't aware of this before.

          I also included your new functions for surface rendering and electrode plotting, so users can now plot the electrode positions of our dataset the same way you do in the first section (if that's no too redundant).

          We'd be grateful for any suggestions and feedback.
      - +@isprivate: "0"
        commentid: "17190"
        comment_count: "59"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-30 20:01:13 +0200
        thetext: "Hi Martin,\n\nVery good to report here. I had noticed your wiki edits over the last days.\n\nI have added the dataset to \nhttp://www.fieldtriptoolbox.org/faq/what_types_of_datasets_and_their_respective_analyses_are_used_on_fieldtrip?&#ecog-visual\ngiven it the name ecog-visual (and the tag), added the shared page\nhttp://www.fieldtriptoolbox.org/tutorial/shared/ecog-visual\nwhich I subsequently included in \nhttp://www.fieldtriptoolbox.org/tutorial/human_ecog\n\nThe idea of the shared sections (also used for other datasets) is that we keep the complete dataset description in once place, but can use the data in multiple tutorials and have them link to each other. You may want to edit the respective pages to complete them or further reorganize.\n\n@Arjen, should we call the other ecog-anatomy (for tags and a shared section)?\n\n@Arjen, should we present the section on \"calculate and plot HGPs\" both with corrected TFRs and with differentiated and broadband power analysis?"
      - +@isprivate: "0"
        commentid: "17191"
        comment_count: "60"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-03-30 20:12:23 +0200
        thetext: |-
          Nice work indeed, Martin.

          @Arjen, should we call the other ecog-anatomy (for tags and a shared section)?
          > Sure

          @Arjen, should we present the section on "calculate and plot HGPs" both with corrected TFRs and with differentiated and broadband power analysis?
          > I'm working on a proof of concepts of the 'differentiated' analysis. I'll think of how to add it to this page as soon as it's finished, so let's leave it out for moment as it's far from routine.
      - +@isprivate: "0"
        commentid: "17192"
        comment_count: "61"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-03-30 21:04:07 +0200
        thetext: "(In reply to Arjen Stolk from comment #60)\n\n@Arjen, can you then provide content for \nhttp://www.fieldtriptoolbox.org/tutorial/shared/ecog-anatomy\nand\nhttp://www.fieldtriptoolbox.org/faq/what_types_of_datasets_and_their_respective_analyses_are_used_on_fieldtrip?&#ecog-anatomy\n\n@Martin, there is now the sentence \"Support by the CRCNS Data Sharing Grant 01GQ1416 is gratefully acknowledged\" at a not so logical place around here\nhttp://www.fieldtriptoolbox.org/tutorial/human_ecog#processing_of_functional_data\nshould that not be be part of the shared section for ecog-visual"
      - +@isprivate: "0"
        commentid: "17193"
        comment_count: "62"
        who:
          +content: martin.krebber
          +@name: Martin Krebber
        bug_when: 2016-03-31 12:38:22 +0200
        thetext: |-
          (In reply to Robert Oostenveld from comment #61)

          Great. Shared sections for the datasets make a lot of sense. I added some descriptions to that section and removed the unnecessary parts from the main tutorial.

          @Arjen: Do you mind if I ask what the 'differentiated' analysis you are working on is? Is it related to high-gamma analysis? It sounds interesting to me.
      - +@isprivate: "0"
        commentid: "17469"
        comment_count: "63"
        who:
          +content: bugzilla
          +@name: Gio Piantoni
        bug_when: 2016-06-14 13:36:29 +0200
        thetext: |-
          I just wanted to add that I implemented the Dykstra 2012 algorithm to correct the brain-shift in ECoG recordings, see this pull request

          https://github.com/fieldtrip/fieldtrip/pull/179
      - +@isprivate: "0"
        commentid: "17545"
        comment_count: "64"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-06-14 18:27:46 +0200
        thetext: |-
          Excellent work, Gio. Thanks for this.

          I noticed make_outer_surface is a matlab script, which we could technically also supply in /external/freesurfer to prevent users from having to add freesurfer. But presumably mris_fill requires the freesurfer repository anyway?
      - +@isprivate: "0"
        commentid: "17551"
        comment_count: "65"
        who:
          +content: bugzilla
          +@name: Gio Piantoni
        bug_when: 2016-06-14 20:02:55 +0200
        thetext: |-
          Yeah, if possible, make_outer_surface should be in external/freesurfer. There are two things that we need to figure out.

          I don't understand the Freesurfer license enough to see if we can just copy those scripts to a GPLv3 project, see https://surfer.nmr.mgh.harvard.edu/registration.html It seems to be the case, but I'm not sure.

          Some of the functions in external/freesurfer are taken from freesurfer v4.3 and v5.1. I used freesurfer v5.3. I don't expect big changes but I'm not comfortable modifying the external/freesurfer folder if that means introducing some regressions. Also, I think that FieldTrip uses a slightly modified version of the freesurfer matlab toolbox.
      - +@isprivate: "0"
        commentid: "17552"
        comment_count: "66"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-06-14 20:17:03 +0200
        thetext: |-
          (In reply to Gio Piantoni from comment #65)

          we should not put our own stuff in external/freesurfer. That directory should only contain MATLAB code that we borrow from Freesurfer, under their license and according to their release/versioning schedule.
      - +@isprivate: "0"
        commentid: "17748"
        comment_count: "67"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-08-20 05:55:03 +0200
        thetext: "(In reply to Robert Oostenveld from comment #61)\n\n@Robert, \nI have added content about the Ecog-anatomy dataset to http://www.fieldtriptoolbox.org/faq/what_types_of_datasets_and_their_respective_analyses_are_used_on_fieldtrip?&#ecog-anatomy\n\nWhat was the idea behind this page again? http://www.fieldtriptoolbox.org/tutorial/shared/ecog-anatomy \nIs it an intended location replacement for this one? http://www.fieldtriptoolbox.org/tutorial/human_ecog\nIf so, I have no objections keeping things as they are.\n\n@Martin,\nIt's a neural measure we have been developing. It's currently still in the process of testing and being documented."
      - +@isprivate: "0"
        commentid: "17749"
        comment_count: "68"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2016-08-22 11:40:08 +0200
        thetext: |-
          (In reply to Arjen Stolk from comment #67)

          I have removed the empty shared page, it is not needed any more. The current format (part 1 anatomy with dataset 1, part 2 functional with dataset 2) is fine. If in the future we want to elaborate, we can always change it.

          There is still some (apparently relatively) small stuff that needs to be done (teach for fixme on the page), but overall I think that the tutorial is already perfectly useful for ECoG researchers. Hence I have removed the warning about it being in development and possibly wrong.
      - +@isprivate: "0"
        commentid: "17753"
        comment_count: "69"
        who:
          +content: a.stolk8
          +@name: Arjen Stolk
        bug_when: 2016-08-23 06:57:06 +0200
        thetext: "(In reply to Robert Oostenveld from comment #68)\nThanks, pretty content with the tutorial myself. \n\nThere's a bunch of stuff that is currently implemented - sort of - that still needs to be documented, such as electrode normalization using a template and snapping of electrodes to a surface (courtesy of Gio). I will document these tools at a later stage, when we have a broader scope of the different methods out there (i.e. what works best) and thus what we really want to include in this already long tutorial.\n\nFor now I will close this thread, since it seems we have achieved the goal to \"extend and document electrocorticography (ecog) tools\". But feel free to re-open it, or post related comments."
      - +@isprivate: "0"
        commentid: "20181"
        comment_count: "70"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:33:14 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
    attachment:
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "718"
        date: 2015-07-15 14:15:00 +0200
        delta_ts: 2015-07-15 14:15:18 +0200
        desc: Dalal et al. 2009
        filename: nihms69234.pdf
        type: application/pdf
        size: "894077"
        attacher:
          +content: tzvetan.popov
          +@name: Tzvetan Popov
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "719"
        date: 2015-07-15 14:21:00 +0200
        delta_ts: 2015-07-15 14:21:44 +0200
        desc: Miller et al., Brain surface electrode co-registration using MRI and x-ray
        filename: MillerIEEE2010.compressed.pdf
        type: application/pdf
        size: "608207"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "720"
        date: 2015-07-15 14:22:00 +0200
        delta_ts: 2015-07-15 14:22:40 +0200
        desc: Hermes et al., Automated electrocorticographic electrode localization on individually rendered brain surfaces
        filename: HermesJNSmethods2010.compressed.pdf
        type: application/pdf
        size: "493744"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "751"
        date: 2015-11-10 08:41:00 +0100
        delta_ts: 2015-11-10 08:41:08 +0100
        desc: ft_electrodelocalise
        filename: Screen Shot 2015-11-09 at 11.27.32 PM.png
        type: image/png
        size: "960751"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "752"
        date: 2015-11-11 07:11:00 +0100
        delta_ts: 2015-11-11 07:11:13 +0100
        desc: version 2
        filename: Screen Shot 2015-11-10 at 9.57.57 PM.png
        type: image/png
        size: "383604"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "754"
        date: 2015-11-13 01:58:00 +0100
        delta_ts: 2015-11-13 01:58:56 +0100
        desc: ft_electrodeplacement
        filename: Screen Shot 2015-11-12 at 1.42.16 PM.png
        type: image/png
        size: "137597"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "775"
        date: 2016-02-11 20:09:00 +0100
        delta_ts: 2016-02-11 20:09:50 +0100
        desc: Example showing cfg.viewresult for MRI + CT
        filename: realignviewresult.png
        type: image/png
        size: "118291"
        attacher:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "783"
        date: 2016-03-15 04:32:00 +0100
        delta_ts: 2016-03-15 04:32:06 +0100
        desc: hull, using code by Roemer
        filename: Screen Shot 2016-03-14 at 8.31.22 PM.png
        type: image/png
        size: "557582"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "784"
        date: 2016-03-15 04:47:00 +0100
        delta_ts: 2016-03-15 04:47:19 +0100
        desc: hull & mri
        filename: Screen Shot 2016-03-14 at 8.46.13 PM.png
        type: image/png
        size: "259885"
        attacher:
          +content: a.stolk8
          +@name: Arjen Stolk
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "785"
        date: 2016-03-15 13:08:00 +0100
        delta_ts: 2016-03-15 13:08:21 +0100
        desc: color-coded 3D mesh
        filename: structureio.jpg
        type: image/jpeg
        size: "9360"
        attacher:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        data: REMOVED
