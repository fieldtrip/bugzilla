+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1361"
    creation_ts: 2012-03-07 19:10:00 +0100
    short_desc: add backend='inprocess' option to qsubfeval
    delta_ts: 2012-03-14 10:00:45 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: qsub
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: eelke.spaak
      +@name: Eelke Spaak
    assigned_to:
      +content: eelke.spaak
      +@name: Eelke Spaak
    cc:
      - marcel.zwiers
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "5472"
        comment_count: "0"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-03-07 19:10:17 +0100
        thetext: |-
          This would be very helpful when you have a script that is designed to be run on the torque cluster, but you occasionally want to run on some small test data locally. You would not place load on the cluster that way, and also you can still run your script in case the entire cluster is experiencing max. load.

          There already is the backend='local' option, but that involves spawning a new matlab process for each job, which is good for testing the cluster functionality itself, but not really for quickly running a batch-type script locally (lot of overhead involved in spawning new matlabs).
      - +@isprivate: "0"
        commentid: "5473"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-03-07 22:50:28 +0100
        thetext: |-
          do I understand it correctly that you are suggesting a sort of feval in the qsubfeval function?

          That would be very little work in qsubfeval, i.e. write the input mat file, call qsubexec, which writes the output mat file, create the e and o files, and you are done!
      - +@isprivate: "0"
        commentid: "5474"
        comment_count: "2"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-03-08 08:21:50 +0100
        thetext: |-
          (In reply to comment #1)

          Yes, that's exactly my idea. Best would even be to skip the writing/reading of the .mat-files, but probably that would require a lot more coding.
      - +@isprivate: "0"
        commentid: "5475"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-03-08 09:14:05 +0100
        thetext: |-
          I suggest to use backend=local for the new feval and backend=system for the existing system call.

          Furthermore I would indeed not want to change the communication through files. That is part of the testing which should be possible with the local execution. Furthermore, in the future there will be a fieldtrip.exe for distributed computing which will also work with these input/output job files.

          I think that memreq and timreq should also be implemented, so that those features can also be tested. There would be no limits in case of timreq or memreq=inf.
      - +@isprivate: "0"
        commentid: "5511"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-03-11 11:33:33 +0100
        thetext: "committed three improvements to qsub in one go:\n\nenhancement - this addresses bug #1254, bug #1331 and bug #1361. \nAllow the user to specify toolbox names when compiling. Allow the user to\nspecify a custom batchid instead of user_host_pid_bM. Implemented\nbackend=local using a call to qqubexec inside qsubfeval (i.e. really\nlocal execution), renamed the existing implementation to backend-system.\n\nmbp> svn commit\nSending        qsub/private/generatejobid.m\nSending        qsub/qsubcellfun.m\nSending        qsub/qsubcompile.m\nSending        qsub/qsubfeval.m\nTransmitting file data ....\nCommitted revision 5435."
      - +@isprivate: "0"
        commentid: "5550"
        comment_count: "5"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-03-14 10:00:45 +0100
        thetext: closing several bugs that have been RESOLVED for a long time
