+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1826"
    creation_ts: 2012-11-08 11:38:00 +0100
    short_desc: make a version of ft_volumerealign that can align T1, T2, PD, CT, DTi and such to each other
    delta_ts: 2012-12-19 15:29:18 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: forward
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: ASSIGNED
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: umit.aydin
      +@name: Ümit Aydin
    cc:
      - carsten.wolters
      - j.schoffelen
      - j.vorwerk
      - JakobLudewig
      - lilla.magyari
      - r.oostenveld
      - umit.aydin
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "8200"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-08 11:38:09 +0100
        thetext: 'At this moment we have ft_volumerealign with takes one input and assigns a coordinate system based on landmarks. We also have ft_volumenormalize that takes one input and spatially warps it to the MNI template brain. It would be useful to have the code in fieldtrip style that would align one individual''s T2, T2 and DTi (or for that matter: other anatomical scans).'
      - +@isprivate: "0"
        commentid: "8201"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-08 11:53:40 +0100
        thetext: |-
          I have added a test script to get started

          mac001> svn add test_bug1826.m
          A         test_bug1826.m

          mac001> svn commit test_bug1826.m
          Adding         test_bug1826.m
          Transmitting file data .
          Committed revision 6889.
      - +@isprivate: "0"
        commentid: "8224"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-08 21:07:31 +0100
        thetext: "note to the simbio team: \n\nThis is an idea we did not concretely decide upon in Nijmegen, but I do think it makes sense: it is in line with what Umit presented and would be a natural part of the required anatomical preprocessing pipeline. It can be considered a ana2ana function, i.e. anatomy in, anatomy out."
      - +@isprivate: "0"
        commentid: "8313"
        comment_count: "3"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-11-19 12:13:26 +0100
        thetext: |-
          hi Umit,

          I assigned this bug for you. Please, read the earlier comments to see which part of the FieldTrip code should be developed.

          You can find also a test_script (in fieldtrip/test/test_bug1826) that gives some information how the new functionality could fit into the FieldTrip pipeline. (At the moment, a "return" is inserted at the beginning of the test script for the common svn version, which you can comment out in your version.)

          But first, we need images which are aligned and which are not aligned, and also DTi ones. Could you send me aligned and also not aligned images (including dti type) that you usually use for segmentation? I would like to try first if I can read them in into FieldTrip. Thanks.

          Lilla
      - +@isprivate: "0"
        commentid: "8317"
        comment_count: "4"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-19 15:31:26 +0100
        thetext: "Sorry for not being involved for a while but I have been working on a paper which I hope to finish till 1st of December then I will be able to spend more time on the filedtrip pipeline. \n\nI always first convert them from DICOM to nifti format and then use in the pipeline and since fieldtrip is able to load nifti, I did not face any problem loading those. You can download the T1, T2 and DTI images in their own spaces and in T1 space after registration: \n\"https://www.dropbox.com/s/riplyw102bhlcl2/test_bug1826_data.zip\"\nI will send you the password for the zip file via e-mail. \n\nI usually use the 4D nifti data for DTI but I can also divide it to separate 3D images. Is there any preferential there ? \n\nShould we give the user different options like different interpolation techniques, cost functions etc ..\n\nIn our pipeline I use the spline based interpolation instead of the default trilinear interpolation. It adds a second step (I call the nonlinear registration for the interpolation with the transfer matrix calculated from the linear registration) to the pipeline but the smoothing is reduced like that. In the folder there is 'T2_T1space_trilinear' and 'T2_T1space_spline' so you can check the difference.\n\nBest\nÜmit"
      - +@isprivate: "0"
        commentid: "8318"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-19 16:45:14 +0100
        thetext: "Hi Umit,\n\nthanks for the replies. Since Lilla is not an expert on anatomical processing, you'll have to concretely guide her through the analysis using the test script. \n\nRegarding DTi (not our expertise, although we could ask colleagues at the Donders): What does the 4D nifti represent? If it had been FA, then it would have been a 3D representation, right?\n\nGiving the user options is in general a good idea, but having defaults is also good. If there are many options, I suggest the same strategy as used in ft_componentanalysios, using cfg.fsl.option=value etc. Or in general cfg.(cfg.method).name = value."
      - +@isprivate: "0"
        commentid: "8319"
        comment_count: "6"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-19 17:10:46 +0100
        thetext: "(In reply to comment #5)\n\nI will modify the test script until weekend and then Lilla could try to use it with the data I have sent.\n\nThe 4D data it is not the FA image. The FA image is 3D as you also stated. For the DTI pipeline we have one 3D b0 image (no diffusion gradient), and for example 20 directional images (b1, b2, ...b20) where each of them are also a 3D image. So as a result we can have 21 3D images to process or 1 4D image which is simply the stacked version of those 21 images. \n\nProbably it will be best to supply the users the default parameters as I am using for our pipeline now and allow them to use other functionalities in a format as you suggested (as in ft_componentanalysis)."
      - +@isprivate: "0"
        commentid: "8320"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-19 17:16:12 +0100
        thetext: |-
          for the 4D data we will have to think on how to represent it in FieldTrip. Pls don't forget to send the zip password by email.

          Robert
      - +@isprivate: "0"
        commentid: "8322"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-20 09:15:28 +0100
        thetext: "@Lilla, \n\nI have made the data available on /home/common/matlab/fieldtrip/data/test/bug1826. I have also updated the test script\n\nmac001> svn commit test_bug1826.m \nSending        test_bug1826.m\nTransmitting file data .\nCommitted revision 6960.\n\nThe reading part works fine (also with unzipping on mac and linux). Even for the DTi it works, resulting in\n\nDTi = \n          dim: [128 128 70]\n      anatomy: [4-D double]\n          hdr: [1x1 struct]\n    transform: [4x4 double] \n\nwhere\n\n>> size(DTi.anatomy)\nans =\n   128   128    70    21\n\nI do expect this 4D representation currently to be problematic for many fieldtrip functions, as they expect size(DTi.anatomy)==dim and it to be 3D."
      - +@isprivate: "0"
        commentid: "8323"
        comment_count: "9"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-20 09:18:36 +0100
        thetext: |-
          (In reply to comment #8)

          > I do expect this 4D representation currently to be problematic for many
          > fieldtrip functions, as they expect size(DTi.anatomy)==dim and it to be 3D.

          Sorry, I pressed commit too fast...

          We have to discuss in-house how to deal with DTi data (or in general with N-D volumetric data.

          Possibly we have to extend ft_datatype_volume with a check on the dim and to ensure that it is 3-D where needed and that it can be N-D at some places. E.g. ft_sourceplot would probably not know how to deal with it, but ft_sourceinterpolate would.
      - +@isprivate: "0"
        commentid: "8325"
        comment_count: "10"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-20 10:53:17 +0100
        thetext: "(In reply to comment #9)\nThe 4D data is not a must for DTI. It just depends on how you convert the images from DICOM to nifti. One can also use the dcm2nii converter to produce 3D data. In that case we will have \nDTI_01.nii\nDTI_02.nii\n...\n\nans use them one by one. I can also check if the data is 4D and 3D, and divide it to 3D by adding the following script.\n\naa=horzcat('fsl4.1-fslsplit ',DTI,' splitted_',DTI(1:end-4),'_ -t');\nunix(aa,'-echo')\n\nThis converts a 4D image to 3D images and the naming will again be like \nsplitted_DTI_01.nii\nsplitted_DTI_02.nii\n...\nProbably this will be the best way to do this, so we can check if it is 3 or 4D and then split it to 3D if it is 4D. I can perform all steps on those seperated images too. \nAlso all results after the DTI processing pipeline like FA, MD, main diffusion vectors are in 3D."
      - +@isprivate: "0"
        commentid: "8335"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-20 12:29:52 +0100
        thetext: "I suggest not to explore alternatives at the moment, but just work on the data and example pipeline that we have. \n\nIgnoring the DTi data at the moment is fine.  The problem then reduces to  \"make a version of ft_volumerealign that can align T1, T2\".  Once we have that, we can later consider to \"make a version of ft_volumerealign that can align T1, DTi\"."
      - +@isprivate: "0"
        commentid: "8336"
        comment_count: "12"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-11-20 12:30:35 +0100
        thetext: spm_coreg can do between modality coregistration
      - +@isprivate: "0"
        commentid: "8337"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-20 12:31:30 +0100
        thetext: |-
          (In reply to comment #12)

          That is another possibility to explore.
      - +@isprivate: "0"
        commentid: "8338"
        comment_count: "14"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-11-20 14:36:56 +0100
        thetext: "(In reply to comment #13)\nHi Robert and Umit,\n\nmy permission to read in test/bug1826 is denied. I can read the T1, T2 and DTi images though (from my own directory).\n\nBut I could not plot them, I got an error with ft_plot_ortho. But this is a problem with the function, because I could plot the images with ft_sourceplot. I could even plot the DTi image (on the first 3 dimensions). So, I changed ft_plot_ortho to ft_sourceplot. \n\nI also looked at the T2 spline and trilinear aligned T2's. The only difference I could see (by visually inspecting the plot) that the bone, skin...etc. (everything except of brain) was much darker on the tri-linearly aligned image.\nThe transformation matrix is the same for T1, not-aligned T2 and for both aligned T2's.\n\nLilla"
      - +@isprivate: "0"
        commentid: "8339"
        comment_count: "15"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-20 14:59:40 +0100
        thetext: |-
          (In reply to comment #11)

          Then I will modify the test script and make it work with our data for now. Then we can decide on other steps.

          (In reply to comment #12)

          There are indeed many useful image registration algorithms that we might use in SPM. If it is preferable to use SPM we can use those. I am referring to the registration algorithms of the FSL here because that is what we are currently using in our pipeline in Munster and the ones who will use the segmentation pipeline in FSL for FEM, can also use it for registration purposes.


          (In reply to comment #14)

          yes of course you can plot the dti with a line like
          figure; ft_plot_ortho(DTI_aligned.img(:,:,:,1));title('DTI after aligning')

          The difference between trilinear and spline will be on the smoothness of the image. You can see that the trilinear is more blurred in comparison to spline.

          Currently I am working on the test script and hopefully I will commit it by tomorrow.
      - +@isprivate: "0"
        commentid: "8440"
        comment_count: "16"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-28 09:01:07 +0100
        thetext: |-
          Hi Lilla,

          I send you the modified test/bug1826 that can register T1, T2 and dti images to each other last wednesday via e-mail since I don't have the rights to write to test folder. I was wondering if you got the e-mail and testing it or did it fall to your spam folder ?
      - +@isprivate: "0"
        commentid: "8446"
        comment_count: "17"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-11-28 10:34:54 +0100
        thetext: |-
          (In reply to comment #16)
          hi Umit, sorry for not replying at all! I got it and I am busy with testing your script. I had a bit of an issue with figuring out the right path to the FSL functions. But I can run it now and next issue is that I got slightly different screen outputs when I was running your script with different versions of FSL (when I was running it with fsl 4.1.7, I got an error message on the screen, but I still had a T2_aligned matlab variable.) How do you check if the alignment went well? Do you check it? or is it possible to check it?

          Lilla
      - +@isprivate: "0"
        commentid: "8447"
        comment_count: "18"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-11-28 11:16:51 +0100
        thetext: "(In reply to comment #17)\nhi Umit,\n\nI got this on the matlab screen running the T1-T2 alignement with fsl 4.1\n\nThe following COMPULSORY options have not been set:\n\t-w,--warp\tfilename for warp/coefficient (volume)\n***************************************************\n\nPart of FSL (build 413)\napplywarp (Version 1.2)\nCopyright(c) 2001, University of Oxford (Mark Jenkinson)\n\nUsage: \napplywarp -i invol -o outvol -r refvol -w warpvol\napplywarp -i invol -o outvol -r refvol -w coefvol\n\n\nCompulsory arguments (You MUST set one or more of):\n\t-i,--in\tfilename of input image (to be warped)\n\t-r,--ref\tfilename for reference image\n\t-w,--warp\tfilename for warp/coefficient (volume)\n\t-o,--out\tfilename for output (warped) image\n\nOptional arguments (You may optionally specify one or more of):\n\t--abs\t\ttreat warp field as absolute: x' = w(x)\n\t--rel\t\ttreat warp field as relative: x' = x + w(x)\n\t-d,--datatype\tForce output data type [char short int float double].\n\t-s,--super\tintermediary supersampling of output, default is off\n\t--superlevel\tlevel of intermediary supersampling, a for 'automatic' or integer level. Default = 2\n\t--premat\tfilename for pre-transform (affine matrix)\n\t--postmat\tfilename for post-transform (affine matrix)\n\t-m,--mask\tfilename for mask image (in reference space)\n\t--interp\tinterpolation method {nn,trilinear,sinc}\n\t-v,--verbose\tswitch on diagnostic messages\n\t-h,--help\tdisplay this message\n\n\n\nBut the alignement still happens (at least I end up with a T2_aligned variable in matlab workspace which has an anatomy field different from the original T2 image. Is this something to worry about or is this how you are doing the alignement usually as well?\n\nLilla"
      - +@isprivate: "0"
        commentid: "8448"
        comment_count: "19"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-28 11:20:54 +0100
        thetext: "Perhaps this helps for debugging: \n\nYou should be able to use mricro, mricron, or fslview to look at the (temporary) files on that are written."
      - +@isprivate: "0"
        commentid: "8469"
        comment_count: "20"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-28 16:44:59 +0100
        thetext: "What I understood from this error is it wants you to supply a warp field and since it does not find, it gives an error. At the code we do not use the non-linear registration itself but just use the interpolation option of it for spline. \n\nWith my current fsl4.1.7 version it also works without supplying it a warp field, and just uses the linear transformation matrix and the spline interpolation option. I will check if they changed something in the usage. But your version is also 4.1.7 right then there should not be any problem with that? \n\nDid you check the option trilinear for the registrations where we do not use the applywarp option.\n\nWhat you saw as aligned in workspace is probably the registration with trilinear interpolation. Since the steps are:\n1)calculate linear transformation matrix, using a trilinear interpolation\n2)Calculate spline interpolation with nonlinear registration function using the linear transformation calculated in step 1.\nSo what you see in workspace is the outcome of the step 1.\n\nWhat can be done is also performing this operation with the trilinear option and checking if the results are same \njust change parameters:\ncfg.fsl.T2interp='trilinear'\ncfg.fsl.DTIinterp='trilinear'\nand run it again.\n\nFor visualization as Robert suggested you can always use fslview and load the T1 and registered T2 on top of each other. Then by selecting and deselecting them you can compare the registered images. You can type 'fsl4.1-fsl' on the command window and then select the fslview from the graphical user interface. \n\nNote: If they are not registered to each other you will not be able to open them on top of each other because it will give the error that their dimensions do not fit."
      - +@isprivate: "0"
        commentid: "8471"
        comment_count: "21"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-11-28 17:10:01 +0100
        thetext: "I checked my version and the applywarp version does also fits version 1.2 and there is does not say that supplying the warp is compulsory. Are you sure if your version is 4.1.7 could it be 4.1.3 because what I saw in your applywarp was written build 413 I would be surprised if they made that kind of a change and they did not even change the version of the tool. Because both of our applywarp version is 1.2.\n\nPart of FSL (build 417)\napplywarp (Version 1.2)\nCopyright(c) 2001, University of Oxford (Mark Jenkinson)\n\nUsage: \napplywarp -i invol -o outvol -r refvol -w warpvol\napplywarp -i invol -o outvol -r refvol -w coefvol\n\n\nCompulsory arguments (You MUST set one or more of):\n\t-i,--in\tfilename of input image (to be warped)\n\t-r,--ref\tfilename for reference image\n\t-o,--out\tfilename for output (warped) image\n\nOptional arguments (You may optionally specify one or more of):\n\t-w,--warp\tfilename for warp/coefficient (volume)\n\t--abs\t\ttreat warp field as absolute: x' = w(x)\n\t--rel\t\ttreat warp field as relative: x' = x + w(x)\n\t-d,--datatype\tForce output data type [char short int float double].\n\t-s,--super\tintermediary supersampling of output, default is off\n\t--superlevel\tlevel of intermediary supersampling, a for 'automatic' or integer level. Default = 2\n\t--premat\tfilename for pre-transform (affine matrix)\n\t--postmat\tfilename for post-transform (affine matrix)\n\t-m,--mask\tfilename for mask image (in reference space)\n\t--interp\tinterpolation method {nn,trilinear,sinc,spline}\n\t-v,--verbose\tswitch on diagnostic messages\n\t-h,--help\tdisplay this message"
      - +@isprivate: "0"
        commentid: "8504"
        comment_count: "22"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-11-29 11:44:52 +0100
        thetext: |-
          (In reply to comment #21)
          hi Umit,

          thanks for the reply. I'll check what is happening using your suggestions.

          Lilla
      - +@isprivate: "0"
        commentid: "8552"
        comment_count: "23"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-12-05 11:03:30 +0100
        thetext: 'Good link to read about Flirt: http://www.fmrib.ox.ac.uk/fslcourse/lectures/reg.pdf'
      - +@isprivate: "0"
        commentid: "8555"
        comment_count: "24"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2012-12-05 11:48:08 +0100
        thetext: "Hi all,\n\nI updated the test script and ft_volumerealign. flirt can now be called from ft_volumerealign when providing in the input a third argument, which is the target volume:\n\nft_volumerealign(cfg, T2, T1); % coregister the T2 to the T1 image.\n\nI am working on the 4D DTI images now, but that seems a bit more involved.\n\nTo further do:\n\n-support reslicing of 4D nifties\n-support cfg.fsl.reslice = false (don't reslice the output volume but update the transformation matrix\n-come up with a set of clever defaults: e.g. for intra modality other defaults are needed than for across modality. \n-consider a cfg.modality option that can deal with this (or cfg.modalitytarget and cfg.modalityinput or so)."
      - +@isprivate: "0"
        commentid: "8687"
        comment_count: "25"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-12-13 11:34:00 +0100
        thetext: |-
          This is a reminder for Lilla: the dimensions to consider for testing are

          within versus between modalities (i.e. T1, T2, DTI, FA)
          within versus between subjects
          linear versus non-linear deformations
          whether to reslice or not

          To make a single subject FEM model, within subject between modality realignment with reslicing would be desired.
      - +@isprivate: "0"
        commentid: "8708"
        comment_count: "26"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-12-16 00:29:14 +0100
        thetext: |-
          (In reply to comment #24)
          This is  a reaction on the issue of "sensible" combinations configuration options.
          I run fsl (with the new implementation of the ft_volumerealign function) with 'trilinear' interpolation method with the 5 cost-functions. My input was the T1 and the T2 that Umit sent us but I applied a 15 degrees rotation along the y axis on the T2 (in order to see the actual differences between T1 and T2).
          You can find attached the images of the aligned volumes with the different cost functions. Apparently, the "least square" led to volume which is still slightly rotated. And the "normcorr" volume looks to be aligned but a it looks slightly different (see image on the left lower corner). All the others look OK, I think.

          Lilla
      - +@isprivate: "0"
        commentid: "8709"
        comment_count: "27"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-12-16 00:38:26 +0100
        thetext: |-
          (In reply to comment #26)
          sorry, I can't attach the images yet. Somehow, jpeg or png images do not get saved in the right way at the moment.
      - +@isprivate: "0"
        commentid: "8710"
        comment_count: "28"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-12-16 13:04:07 +0100
        thetext: |-
          (In reply to comment #27)
          While I was reading the slideshow (link is in one of JM's earlier comments), I see on slide 60 that the "least square" and "normalized correlation" cost-functions are applicable only for alignment (with linear transformation) between  images with the same modality.
      - +@isprivate: "0"
        commentid: "8770"
        comment_count: "29"
        who:
          +content: umit.aydin
          +@name: Ümit Aydin
        bug_when: 2012-12-19 15:29:18 +0100
        thetext: |-
          (In reply to comment #28)
          Yes, Least squares and Normalized correlations will not be useful for T2 to T1 MRI registration. I think using mutual information as the default cost function is a good idea.

          One note: although FA images are produced from DTI images. When one is willing to register the FA image it is usually advisable to register it to the T1 and not to T2 (Because the FA image shows mainly high values in the white matter, and white-grey matter distinction is not very good in T2 images). So just writing the FA image name instead of the T2 image name in the test file will work for that purpose.
