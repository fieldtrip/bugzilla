+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "380"
    creation_ts: 2011-01-11 09:06:00 +0100
    short_desc: implement ztransform/standardize in rejectvisual
    delta_ts: 2011-03-30 13:46:32 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: enhancement
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: johanna.zumer
      +@name: Johanna
    cc: j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "971"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-11 09:06:38 +0100
        thetext: "there is a standardize option in private/preproc, but that computes the mean and std for each trial, whereas the mean and std should be computed over all trials.\n\ncfg.ztransform = yes/no\n\nshould cause \n\nfor each channel\ncompute mean and std\nsubtract mean and divide by std\nend"
      - +@isprivate: "0"
        commentid: "972"
        comment_count: "1"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2011-01-11 09:12:21 +0100
        thetext: And this is where JM's cellfunction toolbox comes in handy. See e.g. ft_denoise_pca. Here the different functions are copied into the main function, as subfunctions
      - +@isprivate: "0"
        commentid: "1256"
        comment_count: "2"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2011-01-26 17:14:59 +0100
        thetext: "Notes to self: \nCreate option cfg.metric='zvalue'\nAnything of use from ft_artifact_zvalue to bring in here?\n\nQuestions:\nValid only for cfg.method='summary' ?\n\nThe zvalue that will be computed for each channel and over trials: is it specific to each timepoint in trial (including variable-length trials), or also mean/std over timepoints within trial?"
      - +@isprivate: "0"
        commentid: "1260"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-26 20:15:39 +0100
        thetext: "the summary stats have to be compressed in a Nchan X Ntrials matrix \"M\". For a given channel it should allow identifying the bad trials. \n\nThe mean could be estimated per trial (or more convenient: demean the data in each trial), but the std not. I would rather think that  the sum of squares is accumulated over all samples in all trials (after demeaning) and used for the std estimate. Subsequently per channel and timepoint the data can be z-transformed. After that, the mean z-value over all timepoints per trial (and channel) is computed and stored in matrix \"M\". \n\nPrior to the case metric='zscore' the data is passed through the private/preproc function, which is where the interesting stuff should be done: e.g. bandpassfilter and hilbert.\n\nNote that this metric would _not_ allow identifying bad channels."
      - +@isprivate: "0"
        commentid: "1659"
        comment_count: "4"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2011-03-18 13:24:25 +0100
        thetext: "I've implemented this.  \nHowever, Robert, when you say the z-value would not allow identifying bad channels, I agree with you theoretically, but do you want some additional check in place in the code to _prevent_ people from marking bad channels in the interactive selection?  Or do you simply mean that channels will not appear 'bad' with this metric, and so people will not select them as bad?"
      - +@isprivate: "0"
        commentid: "1660"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-03-18 13:33:30 +0100
        thetext: "(In reply to comment #4)\n\nthe second, i.e. \n\n> that channels will not appear 'bad' with this metric, and so people will not select them as bad?"
