+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "155"
    creation_ts: 2010-09-13 15:57:00 +0200
    short_desc: ft_read_data returns data in int32 format
    delta_ts: 2011-01-26 15:38:30 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: fileio
    version: unspecified
    rep_platform: PC
    op_sys: Linux
    bug_status: CLOSED
    resolution: WONTFIX
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: minor
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: fieldtrip-bugs
      +@name: Joint development user
    cc:
      - marcel.van.gerven
      - s.klanke
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "311"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2010-09-13 15:57:45 +0200
        thetext: |-
          On 13 Sep 2010, at 15:43, Marcel van Gerven wrote:

          Ik merkte vandaag dat read_data int32 als output geeft als we data inlezen mbv acq2tf. Is eenvoudig op te lossen door de data binnen read_data naar double te casten. Heb dat niet gedaan omdat ik niet zeker wist of dat andere functionaliteit zou breken.
      - +@isprivate: "0"
        commentid: "312"
        comment_count: "1"
        who:
          +content: s.klanke
          +@name: Stefan Klanke
        bug_when: 2010-09-13 17:44:56 +0200
        thetext: |-
          This is a feature, and not a bug ;-)
          Generally ft_read_data will not change the type of the data it reads from the FieldTrip buffer (also doesn't make sense to represent 16bit fMRI data as doubles), and acq2ft writes the data as it comes in from the CTF shared memory. Note that there's a newer tool called acq2ftx, which can apply the gains and then write single precision numbers. I just added notes on this on the wiki:

          http://fieldtrip.fcdonders.nl/development/realtime/ctf#downsampling_channel_selection_applying_gains

          Having both acq2ft and acq2ftx is probably not sensible in the long term, and currently they only exist for historical/convenience/backup reasons. I'm open for suggestions what the default tool and its default options should be.
      - +@isprivate: "0"
        commentid: "1147"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-26 15:37:10 +0100
        thetext: |-
          I closed all bugs that were resolved prior and including 2011-01-25.

          All resolved bugs should have been discussed by now, therefore we don't want to see them again in the next meeting. Instead, in the next meeting we want to see the recent improvements and fixes.
      - +@isprivate: "0"
        commentid: "1196"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-01-26 15:38:30 +0100
        thetext: |-
          I closed all bugs that were resolved prior and including 2011-01-25.

          All resolved bugs should have been discussed by now, therefore we don't want to see them again in the next meeting. Instead, in the next meeting we want to see the recent improvements and fixes.
