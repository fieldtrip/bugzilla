+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1795"
    creation_ts: 2012-10-28 09:54:00 +0100
    short_desc: integrate new plexon readers into fieldtrip/fileio
    delta_ts: 2016-09-13 15:11:07 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: fileio
    version: unspecified
    rep_platform: PC
    op_sys: All
    bug_status: ASSIGNED
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: thomas.hartmann
      +@name: Thomas Hartmann
    cc:
      - braingirl
      - i.andolina
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "8009"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-28 09:54:16 +0100
        thetext: |-
          Thomas mentioned that he has revamped the support for reading data from plexon files. I know that there are still some issues with the existing implementation, therefore I think it would be good to consider merging Thomas' new implementation in fieldtrip, or to replace the existing implementation all together.

          To do
          1) make an inventory of the old and existing tickets on bugzilla that pertain to this
          2) make an inventory of the existing test data sets
          3) make an inventory of the existing test scripts
           ...
      - +@isprivate: "0"
        commentid: "8010"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-28 09:57:52 +0100
        thetext: "regarding item 1 (inventorize existing bugzilla entries): \n\nI found bug 258, bug 322, bug 323, bug 909, bug 1194, bug 1300 that pertain to the plexon format."
      - +@isprivate: "0"
        commentid: "8011"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-28 10:01:30 +0100
        thetext: "regarding item 2 (inventorize available test data): \n\nls -al /home/common/matlab/fieldtrip/data/test/original/lfp/plexon\n-rw-r--r-- 1 jansch fieldtrip 126125140 Apr 11  2011 p213parall.nex\n\nmac001> pwd\n/Volumes/Data/roboos/data/dataformat/testdata/plexon\nmac001> find . -type f\n./fpieper-wideband-data.ddt\n./p021parall.nex\n./p213parall.nex\n./PlexonNeuroshareSampleFile/NSSample.plx\n./PlexonNeuroshareSampleFile/Readme.txt\n./test.nex\n./test1.ddt\n./test1.plx\n./thiwom/p075par.plx\n./thiwom/p075st1.plx\n./thiwom/p075st2.plx\n./thiwom/p075tun.plx\n./thiwom/plx_0500_2units.nex\n./thiwom/plx_0500_2units.plx\n./thiwom/plx_1000_2units.nex\n./thiwom/plx_1000_2units.plx\n./thiwom/plx_3000_2units.nex\n./thiwom/plx_3000_2units.plx\n./thiwom/r190parTWO.plx\n./thiwom/readme.txt\n\nso there are nex, plx and ddt files that are associated with plexon."
      - +@isprivate: "0"
        commentid: "8012"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-28 10:15:19 +0100
        thetext: "The existing test scripts I could find that do something with plexon data are \n  test_tutorial_spike\n  test_tutorial_spikefield\nwhich both use ftp/tutorial/spike/p029_sort_final_01.nex\n\nFurthermore, there is \n  ref_datasets\nwhich points to p213parall.nex. This is subsequently used in \n\nmac001> grep -l ref_datasets test_*.m\ntest_bug1306.m\ntest_bug1599.m\ntest_ft_channelrepair.m\ntest_ft_componentanalysis.m\ntest_ft_freqanalysis.m\ntest_ft_megplanar.m\ntest_ft_megrealign.m\ntest_ft_multiplotTFR.m\ntest_ft_prepare_neighbours.m\ntest_ft_preprocessing.m\ntest_ft_read_header.m\ntest_ft_read_sens.m\ntest_ft_sourceanalysis.m\ntest_ft_timelockanalysis.m\ntest_ft_timelockanalysis_new.m\ntest_historical.m\n\nIn short: there is very limited testing of the explicit characteristics of the plexon file formats. I think it makes sense to write a new test script that explicitly makes use of a variety of files and ensures that the results from all ft_read_xxx functions are correct."
      - +@isprivate: "0"
        commentid: "8035"
        comment_count: "4"
        attachid: "356"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-10-29 15:20:49 +0100
        thetext: |-
          Created attachment 356
          Patch to include new plx reading functions. Diff from svn version 121029
      - +@isprivate: "0"
        commentid: "8036"
        comment_count: "5"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-10-29 15:26:13 +0100
        thetext: |-
          alright... took today to wrap up my changes to fieldtrip to have it read plx files and make a patch out of it.

          if you only merge the patch, you will notice no difference, as the code checks whether the Plexon Offline SDK is installed. this can be downloaded from here: http://www.plexon.com/assets/downloads/sdk/ReadingPLXandDDTfilesinMatlab-mexw.zip after unpacking to some directory, go to the mexPlex folder and issue the build_and_verify_mexPlex command. this builds the mex files needed for operation. then add the root folder of the Plexon SDK to your matlab path.

          i hope you like it and it works. if there are any issue, i am glad to solve them!

          thomas
      - +@isprivate: "0"
        commentid: "8042"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-29 15:43:02 +0100
        thetext: |-
          (In reply to comment #5)

          As I understand it now, the mex files can be compiled for any platform?
      - +@isprivate: "0"
        commentid: "8043"
        comment_count: "7"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-10-29 15:49:32 +0100
        thetext: |-
          (In reply to comment #6)
          dont know about mac, but i can confirm that it runs on 64bit linux. havent checked for windows yet...
      - +@isprivate: "0"
        commentid: "8046"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-29 17:17:53 +0100
        thetext: "(In reply to comment #6)\n\nLet me answer myself. I downloaded it and had a look: there is cpp code and there seem to be no restrictions on the re-distribution. \n\nI suggest to make a stripped down version available in \nfieldtrip/external/plexon\nwith only the mex files, the PDF and other READMEs and the required plx_ matlab wrappers.\n\nFurthermore, I suggest to implement the two versions in a similar fashion as egi_mff or the different CTF readers. So \n\nswitch fileformat\ncase {'plexon_plx_v1' 'plexon_plx'}\n do the old stuff\ncase {'plexon_plx_v2'}\n do the new stuff\n\nand then when everything is confirmed to work as it should, the 'plexon_plx' case (which is the default in case the user does not specify anything, since that is what ft_filetype reports) can be moved to the v2 section.\n\nThis gives a longer time window for development, keeps the code separate, and facilitates future maintenance and expansions.\n\nAgreed? If so, then you would have to make some small reorganizations again to your code...\n\n I have already added your plx_orig_header to fileio/private. The only changes I made were some comments in the help, and I replaced the ~ output variable with a dummy. Old matlab versions (which we still want to support) don't understand the ~."
      - +@isprivate: "0"
        commentid: "8053"
        comment_count: "9"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-10-30 11:03:48 +0100
        thetext: |-
          (In reply to comment #8)

          yeah, this sounds like a good strategy, though i have some questions:

          1. would the ft_hastoolbox function have to be patched or how would be integrate the plexon toolbox into the system?

          2. how would i use the alternative (i.e. my) plx reading functions from high-level functions such as ft_preprocessing if i would restructure the code as you suggest?
      - +@isprivate: "0"
        commentid: "8054"
        comment_count: "10"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-10-30 11:05:29 +0100
        thetext: |-
          (In reply to comment #9)

          oh, i just saw that you alread patched ft_hastoolbox...
      - +@isprivate: "0"
        commentid: "8195"
        comment_count: "11"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-08 10:43:26 +0100
        thetext: "Hi Thomas, \n\nWhat is the status of this? I would expect some suggestions from you w.r.t. an insertion of \n\ncase 'plexon_plx_v2' into the ft_read_data/header/event function and then get the associated low-level functions."
      - +@isprivate: "0"
        commentid: "8198"
        comment_count: "12"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-11-08 11:05:47 +0100
        thetext: |-
          (In reply to comment #11)

          well, i am just working on another urgent matter. depending whether i can solve that today i can restructure the code tomorrow or on monday.

          i still need to know how to use the alternative reading functions from high-level functions in order to test the code before i submit it...
      - +@isprivate: "0"
        commentid: "8199"
        comment_count: "13"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-11-08 11:14:34 +0100
        thetext: |-
          (In reply to comment #12)

          > i still need to know how to use the alternative reading functions from
          > high-level functions in order to test the code before i submit it...

          ft_preprocessing and the likes, that read data from disk have cfg.headerformat and cfg.dataformat, which you woudl specify as plexon__plx_v2 to end up at the right location in the switch-ladder.
      - +@isprivate: "0"
        commentid: "8512"
        comment_count: "14"
        attachid: "383"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-11-30 11:43:02 +0100
        thetext: |-
          Created attachment 383
          new patches for current nightly fieldtrip to add plexon plx reading functions as 'plexon_plx_v2'.
      - +@isprivate: "0"
        commentid: "8513"
        comment_count: "15"
        attachid: "384"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-11-30 11:45:06 +0100
        thetext: |-
          Created attachment 384
          stripped down version of the plexon offline SDK for fieldtrip
      - +@isprivate: "0"
        commentid: "8514"
        comment_count: "16"
        who:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        bug_when: 2012-11-30 11:46:05 +0100
        thetext: |-
          sorry that it took me so long...
          as suggested, i have restructured the code. for my personal test-cases, it works nicely....
      - +@isprivate: "0"
        commentid: "12464"
        comment_count: "17"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-01-10 14:24:57 +0100
        thetext: |-
          Hi, I was just about to submit a bug then saw this. First off I can confirm that the current latest Plexon SDK mex files compiles on OS X as well. Also the current SDK has recently added read support for their latest PL2 format, which offers an order of magnitude faster reading speeds than their previous format. The PL2 support uses matlab .P files so works cross-platform without needing to compile mex files etc.

          I was going to write my own new file importer for PLX/PL2 files but suspect you've done most of the hard work, so I'd be happy to beta test if I can help (I am completely naive to fieldtrip however)...
      - +@isprivate: "0"
        commentid: "12465"
        comment_count: "18"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-01-10 14:39:25 +0100
        thetext: I should also add that the PL2 support is "transparent" in that they've made the existing .m file wrappers call either their PLX or PL2 readers and make sure the same info gets returned (apart from a few bugs here and there). As long as you use their .m file wrappers to get data it should just "work" (I certainly didn't have to rewrite any of my code to support the PL2 files)...
      - +@isprivate: "0"
        commentid: "12471"
        comment_count: "19"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2014-01-13 10:32:21 +0100
        thetext: "(In reply to Ian Andolina from comment #18)\n\n\nHi Ian,\n\nThanks for chiming in. That is a good reason to take this further, as Thomas and I have not been actively working on this. \n\nWhat I'd like to see is a regression test, i.e. an explicit check that \"stuff\" gets better and does not get worse. We have many of these tests at http://code.google.com/p/fieldtrip/source/browse/#svn%2Ftrunk%2Ftest and find them extremely valuable, especially once the core Nijmegen team does not know the details as well as some (less committed to the project) external expert. \n\nIn this case there are various options to be tested. I have not looked into the details recently, but in general for a certain file we have reader version 1 and version 2, and we would like to ascertain that v2 is not inconsistent with v1, except for cases where we know that v2 is better than v1 (e.g. where v1 is buggy or incomplete).\n\nThis requires (again in general) \n1) test data\n2) a mechanism to switch between the various versions\n3) a script that loops over the test data with the various versions\n\n\n@Thomas: does this sound like a plan?"
      - +@isprivate: "0"
        commentid: "12502"
        comment_count: "20"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-01-15 15:30:34 +0100
        thetext: I'm happy to provide some test data .plx and .pl2 files. I don't really understand what kind of testing framework you use so am probably little use there...
      - +@isprivate: "0"
        commentid: "12628"
        comment_count: "21"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-01-29 11:18:24 +0100
        thetext: |-
          I have a fork with Thom's changes as a branch pullable to the current master here:

          https://github.com/iandol/fieldtrip/compare/plexonv2?expand=1
      - +@isprivate: "0"
        commentid: "12975"
        comment_count: "22"
        who:
          +content: i.andolina
          +@name: Ian Andolina
        bug_when: 2014-02-26 11:43:41 +0100
        thetext: |-
          And turned it into a formal pull request: https://github.com/fieldtrip/fieldtrip/pull/34

          This doesn't change anything by default for anyone using .plx files, you must specify the new format in cfg before any of this patch kicks in...
    attachment:
      - +@isobsolete: "1"
        +@ispatch: "1"
        +@isprivate: "0"
        attachid: "356"
        date: 2012-10-29 15:20:00 +0100
        delta_ts: 2012-11-30 11:45:21 +0100
        desc: Patch to include new plx reading functions. Diff from svn version 121029
        filename: ft_plx.diff
        type: text/plain
        size: "18898"
        attacher:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "1"
        +@isprivate: "0"
        attachid: "383"
        date: 2012-11-30 11:43:00 +0100
        delta_ts: 2012-11-30 11:43:02 +0100
        desc: new patches for current nightly fieldtrip to add plexon plx reading functions as 'plexon_plx_v2'.
        filename: ft_diff_th.diff
        type: text/plain
        size: "6610"
        attacher:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "384"
        date: 2012-11-30 11:45:00 +0100
        delta_ts: 2012-11-30 11:45:06 +0100
        desc: stripped down version of the plexon offline SDK for fieldtrip
        filename: ft_plexon.zip
        type: application/x-zip-compressed
        size: "93332"
        attacher:
          +content: thomas.hartmann
          +@name: Thomas Hartmann
        data: REMOVED
