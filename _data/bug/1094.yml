+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1094"
    creation_ts: 2011-10-31 14:02:00 +0100
    short_desc: header caching for read_biosig_data.m
    delta_ts: 2019-08-10 11:46:19 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: fileio
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P1
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: Tilmann.Sander-Thoemmes
      +@name: Tilmann Sander-Thommes
    assigned_to:
      +content: Tilmann.Sander-Thoemmes
      +@name: Tilmann Sander-Thommes
    cc: r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "3765"
        comment_count: "0"
        who:
          +content: Tilmann.Sander-Thoemmes
          +@name: Tilmann Sander-Thommes
        bug_when: 2011-10-31 14:02:14 +0100
        thetext: "Due to the BIOSIG combining header and data reading in one function,\nthe read_biosig_data.m function is very slow for random access (trial reading). Header caching with read_biosig_data.m can be programmed, but it should not be always on.\n\nI suggest to define\n\n...\nglobal biosig_caching = 1; \n...\n\nin the top level calling script\nand then check for this variable in the low level function:\n\n% READ_BIOSIG_DATA reads data from EEG file using the BIOSIG\n\n...\nif isglobal(biosig_caching) ...\n...\n\nThe users in need of fast trial reading would benefit and at the\nsame time the functionality would be totally transparent to the \ncasual user. A help text explaining this would be added to \nread_biosig_data.m .\n\nIf this approach is not welcome, please tell me that.\n\nYours, Till"
      - +@isprivate: "0"
        commentid: "3767"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-10-31 21:39:16 +0100
        thetext: |-
          The low-level code should not have to know about the caching.

          Why would you not implement this consistently with the other format-independent implementations in ft_read_header?  I.e. read_biosig_header would be called once, the hdr would be rememberer in ft_read_header as the persistent "cacheheader" variable, and upon subsequent repeated calls to ft_read_data->read_biosig_data the persistent hdr would get passed.
      - +@isprivate: "0"
        commentid: "3769"
        comment_count: "2"
        who:
          +content: Tilmann.Sander-Thoemmes
          +@name: Tilmann Sander-Thommes
        bug_when: 2011-11-01 09:57:23 +0100
        thetext: "This is a good suggestion, but it would not work in conjunction with\nft_preprocessing as I cannot pass on the cacheheader between the calls\nto ft_read_header and ft_read_data within preprocessing !? ft_read_data \ndoes not know the persistent cacheheader variable. Or is that\nwrong ? \n\nA solution could be to have the persistent cacheheader within read_biosig_data\nand check for its content. If present the header does not need to be read \nagain.\n\nWhat do you think ?"
      - +@isprivate: "0"
        commentid: "3803"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2011-11-03 10:51:33 +0100
        thetext: there are file formats where it is on by default. This could be one of them.
      - +@isprivate: "0"
        commentid: "4023"
        comment_count: "4"
        who:
          +content: Tilmann.Sander-Thoemmes
          +@name: Tilmann Sander-Thommes
        bug_when: 2011-11-16 15:17:25 +0100
        thetext: |-
          Made header caching default for the BIOSIG. Changes
          in read_biosig_data and ft_read_header. Random
          access reading is much faster now.
      - +@isprivate: "0"
        commentid: "19707"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 11:46:19 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue describing the issue on https://github.com/fieldtrip/fieldtrip/issues."
