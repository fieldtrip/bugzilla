+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1354"
    creation_ts: 2012-03-01 21:43:00 +0100
    short_desc: uint64 object is not needed any more on matlab 2011b
    delta_ts: 2013-04-23 12:06:31 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: fileio
    version: unspecified
    rep_platform: Macintosh
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: WONTFIX
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: minor
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "5415"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-03-01 21:43:20 +0100
        thetext: |-
          Having the fieldtrip/fileio/@uint64 object on the path causes the following error

          >> audiorecorder(44100, 16, 2)
          Error using audiorecorder/initialize (line 241)
          Invalid type of input arguments (should be uint64)

          Error in audiorecorder (line 193)
                      obj.initialize();

          whereas after "restoredefaultpath" this is not a problem.

          Note that this was detected while trying out the ft_realtime_pooraudioproxy function.

          It turns out that the uint64 overloaded functions are not needed any more for this matlab version

          >> which -all plus
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@single/plus)                 % single method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@double/plus)                 % double method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@char/plus)                   % char method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@logical/plus)                % logical method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@int64/plus)                  % int64 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@int32/plus)                  % int32 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@int16/plus)                  % int16 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@int8/plus)                   % int8 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@uint64/plus)                 % uint64 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@uint32/plus)                 % uint32 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@uint16/plus)                 % uint16 method
          built-in (/Applications/MATLAB_R2011b.app/toolbox/matlab/ops/@uint8/plus)                  % uint8 method

          Probably the same applies to the other functions (minus, min, max, ...)

          somehow we should find a trick such that the fieldtrip @uint64 object is added to the path when needed (old matlab versions) but not on newer versions.

          TODO:
          - check whether all functions are now in standard matlab
          - check matlab versions to see how far back it should go
          - think of something with ft_defaults to "addpath" it conditionally on the matlab version
      - +@isprivate: "0"
        commentid: "9133"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-01-23 16:09:42 +0100
        thetext: with the uint64 object everything still works fine on later matlab versions, so there is nothing that really should be fixed. If people prefer to use the built-in version, they can delete the fileio/@uint64 directory.
      - +@isprivate: "0"
        commentid: "10231"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-04-23 12:06:02 +0200
        thetext: closed various bugs
      - +@isprivate: "0"
        commentid: "10256"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2013-04-23 12:06:31 +0200
        thetext: closed various bugs
