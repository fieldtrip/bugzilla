+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "3270"
    creation_ts: 2017-03-14 14:00:00 +0100
    short_desc: support common filter approach with dics coherence with a refdip
    delta_ts: 2019-08-10 12:42:03 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Mac OS
    bug_status: CLOSED
    resolution: FIXED
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P5
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: r.oostenveld
      +@name: Robert Oostenveld
    assigned_to:
      +content: j.herring
      +@name: Jim Herring
    cc:
      - j.herring
      - j.schoffelen
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "18499"
        comment_count: "0"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-03-14 14:00:26 +0100
        thetext: |-
          as discussed with Jim (CC): it is not possible to get or to reuse the filter from the refdip in dics. That means that the common filter approach cannot be used (without hacks).

          Jim and I discussed a solution for this, which has been tested and which should be integrated in the release.
      - +@isprivate: "0"
        commentid: "18502"
        comment_count: "1"
        who:
          +content: j.herring
          +@name: Jim Herring
        bug_when: 2017-03-15 08:12:27 +0100
        thetext: "Indeed, we've discussed to add the following lines to beamformer_dics where the case of refdip is handled:\n\naround line 520\n    if isstruct(refdip) && isfield(refdip, 'filter')\n      assert(iscell(refdip.filter) && numel(refdip.filter)==1);\n      filt1 = refdip.filter{1};\n      \n    elseif isstruct(refdip) && isfield(refdip, 'leadfield')\n      assert(iscell(refdip.leadfield) && numel(refdip.leadfield)==1);\n      lf1 = refdip.leadfield{1};\n      filt1 = pinv(lf1' * invCf * lf1) * lf1' * invCf;       % use PINV/SVD to cover rank deficient leadfield\n      \n    elseif isstruct(refdip) && isfield(refdip, 'pos')\n      assert(isnumeric(refdip.pos) && numel(refdip.pos)==3);\n      lf1 = ft_compute_leadfield(refdip.pos, grad, headmodel, 'reducerank', reducerank, 'normalize', normalize);\n      filt1 = pinv(lf1' * invCf * lf1) * lf1' * invCf;       % use PINV/SVD to cover rank deficient leadfield\n      \n    else\n      % compute cortio-cortical coherence with a dipole at the reference position\n      lf1 = ft_compute_leadfield(refdip, grad, headmodel, 'reducerank', reducerank, 'normalize', normalize);\n      % construct the spatial filter for the first (reference) dipole location\n      filt1 = pinv(lf1' * invCf * lf1) * lf1' * invCf;       % use PINV/SVD to cover rank deficient leadfield\n    end\n\n\nI'll quickly brush-up on my Git skills and attempt to integrate it into a branch and initiate a pull request"
      - +@isprivate: "0"
        commentid: "18503"
        comment_count: "2"
        who:
          +content: j.herring
          +@name: Jim Herring
        bug_when: 2017-03-15 08:46:52 +0100
        thetext: I've updated the changes and initiated a pull-request
      - +@isprivate: "0"
        commentid: "18504"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2017-03-15 11:48:12 +0100
        thetext: |-
          (In reply to Jim Herring from comment #2)

          https://github.com/fieldtrip/fieldtrip/pull/374
      - +@isprivate: "0"
        commentid: "19021"
        comment_count: "4"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2017-11-10 10:40:19 +0100
        thetext: It looks as if this can be closed. Jim, please confirm, or reopen if you think that you need to do some additional work on this.
      - +@isprivate: "0"
        commentid: "19022"
        comment_count: "5"
        who:
          +content: j.schoffelen
          +@name: Jan-Mathijs Schoffelen
        bug_when: 2017-11-10 10:40:33 +0100
        thetext: closing
      - +@isprivate: "0"
        commentid: "20318"
        comment_count: "6"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:35:49 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
      - +@isprivate: "0"
        commentid: "20517"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2019-08-10 12:42:03 +0200
        thetext: "This closes a whole series of bugs that have been resolved (either FIXED/WONTFIX/INVALID) for quite some time. \n\nIf you disagree, please file a new issue on https://github.com/fieldtrip/fieldtrip/issues."
