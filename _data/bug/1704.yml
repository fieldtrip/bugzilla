+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1704"
    creation_ts: 2012-09-07 16:49:00 +0200
    short_desc: Crash when preparing layout for Neuromag
    delta_ts: 2012-10-24 09:48:29 +0200
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: core
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: ASSIGNED
    resolution:
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: critical
    target_milestone: '---'
    dependson: "1757"
    everconfirmed: "1"
    reporter:
      +content: litvak.vladimir
      +@name: Vladimir Litvak
    assigned_to:
      +content: eelke.spaak
      +@name: Eelke Spaak
    cc:
      - j.schoffelen
      - johanna.zumer
      - litvak.vladimir
      - r.oostenveld
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "7325"
        comment_count: "0"
        attachid: "306"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-07 16:49:52 +0200
        thetext: "Created attachment 306\nbug cfg\n\nHi,\n\nI get: \n\n??? Index exceeds matrix dimensions.\n\nError in ==> ft_prepare_layout>sens2lay at 788\n  mindist = mindist(1:round(numel(label)/4));\n\nError in ==> ft_prepare_layout at 285\n  lay = sens2lay(cfg.grad, cfg.rotate, cfg.projection, cfg.style);\n\nError in ==> spm_eeg_project3D at 25\nlay = ft_prepare_layout(cfg);\n\nThe problematic cfg is attached. This happens for all Neuromag data. Please fix as this prevents Neuromag data from being converted properly in SPM.\n\nThanks,\n\nVladimir"
      - +@isprivate: "0"
        commentid: "7521"
        comment_count: "1"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-09-21 13:24:19 +0200
        thetext: |-
          Hi Vladimir,

          Unfortunately, it is impossible to automatically generate a layout based on the channel positions in your cfg.grad structure, since Neuromag306 data has several channels that occupy identical positions.

          The only way to properly plot these is to hand-craft a layout that either displaces channels (i.e. show the magnetometer and gradiometers at the same coordinates in a triplet) or shows a subset of channels. You can specify pre-generated layouts by using one of:

          cfg.layout = 'neuromag306all.lay'
          cfg.layout = 'neuromag306mag.lay'
          cfg.layout = 'neuromag306cmb.lay'
          cfg.layout = 'neuromag306planar.lay'

          In revision 6510, I have added an explicit check for the presence of many overlapping channels in ft_prepare_layout, throwing a more informative error message.

          Marking this as fixed for now, feel free to post additional comments though.
      - +@isprivate: "0"
        commentid: "7529"
        comment_count: "2"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-21 17:07:29 +0200
        thetext: |-
          Hi Eelke,

          We need that to work for SPM and it's not a problem if you output the same positions. We have some code that takes care of that by slightly moving them apart. If you want I can send you the code to put in FT, but pre-specified layouts is definitely a bad solution for us. Maybe you can just make output identical position and display a warning (that was the previous behavior anyway).

          Vladimir
      - +@isprivate: "0"
        commentid: "7530"
        comment_count: "3"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-21 17:08:53 +0200
        thetext: |-
          (In reply to comment #2)
          In any case we need to make it work quickly as right now it breaks SPM conversion for Neuromag data.
      - +@isprivate: "0"
        commentid: "7537"
        comment_count: "4"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-09-23 08:09:45 +0200
        thetext: Assigning this to Robert, since I think it needs an executive decision on how to deal with this.
      - +@isprivate: "0"
        commentid: "7538"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-23 10:06:31 +0200
        thetext: "(In reply to comment #2)\n\nHi Vladimir,\n\nI agree that template layouts are not good as default. \n \nCan you give us the code for moving the channels that lie on top of each other slightly apart? Is it a random movement or will the triplets (in case of neuromag306) or pairs (in the case of neuromag122) move consistently for different locations over the head? Is it neuromag specific? The yokogawa404 system is also a difficult one to deal with with its mixed sensors.\n\nRobert\n\nPS in the mean time you might want to do in the high level code\n\ntry\n  ft_prepare_layout\ncatch\n  read a template\nend"
      - +@isprivate: "0"
        commentid: "7539"
        comment_count: "6"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-23 12:13:37 +0200
        thetext: |-
          (In reply to comment #5)
          Hi Robert,

          Here is the code. It is applied to 2D locations. Give credit to Laurence Hunt if you use it. It doesn't have to be random. It just needs to be consistent, like whatever is first in the list always moves one way.

          Vladimir

          function xy = shiftxy(xy,mindist)

          x = xy(1,:);
          y = xy(2,:);

          l=1;
          i=1; %filler
          mindist = mindist/0.999; % limits the number of loops
          while (~isempty(i) && l<50)
              xdiff = repmat(x,length(x),1) - repmat(x',1,length(x));
              ydiff = repmat(y,length(y),1) - repmat(y',1,length(y));
              xydist= sqrt(xdiff.^2 + ydiff.^2); %euclidean distance between all sensor pairs

              [i,j] = find(xydist<mindist*0.999);
              rm=(i<=j); i(rm)=[]; j(rm)=[]; %only look at i>j

              for m = 1:length(i);
                  if (xydist(i(m),j(m)) == 0)
                      diffvec = [mindist./sqrt(2) mindist./sqrt(2)];
                  else
                      xydiff = [xdiff(i(m),j(m)) ydiff(i(m),j(m))];
                      diffvec = xydiff.*mindist./xydist(i(m),j(m)) - xydiff;
                  end
                  x(i(m)) = x(i(m)) - diffvec(1)/2;
                  y(i(m)) = y(i(m)) - diffvec(2)/2;
                  x(j(m)) = x(j(m)) + diffvec(1)/2;
                  y(j(m)) = y(j(m)) + diffvec(2)/2;
              end
              l = l+1;
          end

          xy = [x; y];
      - +@isprivate: "0"
        commentid: "7540"
        comment_count: "7"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-23 13:07:04 +0200
        thetext: re-assigning to Eelke.
      - +@isprivate: "0"
        commentid: "7555"
        comment_count: "8"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-09-24 14:24:27 +0200
        thetext: I will incorporate the code, seems like a good fix. Vladimir, could you tell me what value you (typically) use for parameter 'mindist'?
      - +@isprivate: "0"
        commentid: "7560"
        comment_count: "9"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-09-24 14:36:19 +0200
        thetext: Committed fix as rev 6519. The default now is to shift to a mindist of 0.2 if many channels overlap, which I found to give visually nice results in a multiplot. There is a warning thrown when the shifting is needed.
      - +@isprivate: "0"
        commentid: "7562"
        comment_count: "10"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-24 15:10:38 +0200
        thetext: "(In reply to comment #9)\nOK that's better. Could you just also make this optional (on by default) so that if we turn that off we'll still get identical locations? Also when shifting is explicitly turned off I'd prefer if there is no warning as warnings make some of our users nervous. \n\nThe reason is that I realized that we use layouts in two ways. One is multiplots and then shifting is OK but the other is topoplots (or generating scalp x time images) and then we need the original locations and it's not problem that they overlap. That's actually true for FT as well isn't it?\n\nVladimir"
      - +@isprivate: "0"
        commentid: "7574"
        comment_count: "11"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-09-25 09:43:59 +0200
        thetext: |-
          No problem, I just (r6529) added the configuration option cfg.overlap to ft_prepare_layout. From the new reference doc:

          %   cfg.overlap     string, how to deal with overlapping channels when
          %                   layout is constructed from a sensor configuration
          %                   structure (can be 'shift' (shift the positions in 2D
          %                   space to remove the overlap (default)), 'keep' (don't shift,
          %                   retain the overlap), 'no' (throw error when overlap is
          %                   present))

          Best,
          Eelke
      - +@isprivate: "0"
        commentid: "7578"
        comment_count: "12"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-25 11:42:40 +0200
        thetext: "(In reply to comment #11)\nOK the option seems to work as needed, but something is still not right. It looks like there is a mismatch between labels and positions. Try this code on a neuromag \nheader:\n\nsel = strmatch('megmag', hdr.chantype);\n\ncfg = [];\ncfg.grad   = hdr.grad;\ncfg.overlap = 'keep';\nlay = ft_prepare_layout(cfg);\n\n[sel1, sel2] = match_str(hdr.label(sel), lay.label);\n\nfigure;plot(lay.pos(sel2, 1), lay.pos(sel2, 2), '.')\n\nVladimir"
      - +@isprivate: "0"
        commentid: "7635"
        comment_count: "13"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-27 12:45:01 +0200
        thetext: |-
          Hi Eelke,

          This problem looks like a bug in ft_read_header rather than ft_prepare layout as grad.chanpos is already wrong. I'll try to look where it comes from and let you know what I find.

          Vladimir
      - +@isprivate: "0"
        commentid: "7636"
        comment_count: "14"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-27 13:06:40 +0200
        thetext: |-
          (In reply to comment #13)
          OK, fixed.
      - +@isprivate: "0"
        commentid: "7638"
        comment_count: "15"
        who:
          +content: eelke.spaak
          +@name: Eelke Spaak
        bug_when: 2012-09-27 13:46:32 +0200
        thetext: Great, thanks!
      - +@isprivate: "0"
        commentid: "7643"
        comment_count: "16"
        attachid: "330"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-27 14:58:05 +0200
        thetext: |-
          Created attachment 330
          weird bti layout

          weird bti layout
      - +@isprivate: "0"
        commentid: "7644"
        comment_count: "17"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-09-27 15:00:58 +0200
        thetext: |-
          (In reply to comment #16)
          More problems I'm afraid. There was a problem with BTi and CTF conversion because of my fix (or more precisely because the FT code played withe the input sens struct and didn't change it back and I wasn't aware of that). I fixed it now. However the layout for BTi looks weird now. I attached an example from SPM. I don't have time to investigate this further now but perhaps you can look.

          Vladimir
      - +@isprivate: "0"
        commentid: "7736"
        comment_count: "18"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-02 11:15:03 +0200
        thetext: |-
          I get this problem

          >> grad = ft_read_sens('/home/common/matlab/fieldtrip/data/Subject01.ds');
          ??? Error using ==> cell.unique at 47
          Input must be a cell array of strings.

          Error in ==> match_str at 63
          [dum1, dum2, c] = unique([a; b]);

          Error in ==> channelposition at 284
          [sel1, sel2] = match_str(sens.label, lab);

          Error in ==> ft_datatype_sens at 99
                  [chanpos, chanori, chanlab] = channelposition(sens, 'channel', 'all');

          Error in ==> ft_read_header at 1707
            hdr.grad = ft_datatype_sens(hdr.grad);

          Error in ==> ft_read_sens at 157
              hdr = ft_read_header(filename, 'headerformat', fileformat);

          and the last change to channelposition seems related to this bug:
          % $Id: channelposition.m 6564 2012-09-27 12:52:32Z vlalit $

          The problem is on line 284 in channelposition where
          [sel1, sel2] = match_str(sens.label, lab);
          and lab contains some empty elements (i.e. [])
      - +@isprivate: "0"
        commentid: "7737"
        comment_count: "19"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-02 11:17:03 +0200
        thetext: |-
          (In reply to comment #18)

          traced it further back to line 114, where
              lab(sel)   = sens.label;
          but sel is not complete, i.e. some of the elements are missing (and hence remain empty.
      - +@isprivate: "0"
        commentid: "7739"
        comment_count: "20"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2012-10-02 11:20:55 +0200
        thetext: see also bug 1757
      - +@isprivate: "0"
        commentid: "7740"
        comment_count: "21"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-02 11:23:52 +0200
        thetext: "(In reply to comment #19)\n\nI did the following to go back to the version just prior to the last channelposition change\nmanzana> svn update -r 6563\nand the problem persists. So it was introduced earlier.\n\nWith\nmanzana> svn update -r 6558\nI don't have the problem, whereas with\nmanzana> svn update -r 6559\nI do have the problem. \n\nThat means that http://code.google.com/p/fieldtrip/source/detail?r=6559\nintroduced it. See \nhttp://code.google.com/p/fieldtrip/source/diff?spec=svn6559&r=6559&format=side&path=/trunk/fileio/private/channelposition.m\nfor the diff. It is precisely the lines of code on which it now fails."
      - +@isprivate: "0"
        commentid: "7742"
        comment_count: "22"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-02 11:32:30 +0200
        thetext: |-
          I suspect that we will have to revisit this problem in the future, as the implemented solution does not seem to be very robust.

          But for the moment (and for me) it now works, so I will close it again.
      - +@isprivate: "0"
        commentid: "7743"
        comment_count: "23"
        who:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        bug_when: 2012-10-02 11:41:23 +0200
        thetext: |-
          (In reply to comment #22)
          Hi Robert,

          I think what I did is quite benign and sensible, it just might have revealed other bugs that were previously hidden. So definitely don't revert my fix. The way things were before, nothing assured that the order of grad.chanpos was the same as the order of grad.label and it indeed wasn't for Neuromag.

          Vladimir
      - +@isprivate: "0"
        commentid: "7755"
        comment_count: "24"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-02 17:45:55 +0200
        thetext: |-
          (In reply to comment #23)

          Yes, I believe you are right. The lack of robustness that I feel to apply here more pertains to the whole chain of events and code that results in the layout, than the specific last section of code.
      - +@isprivate: "0"
        commentid: "7770"
        comment_count: "25"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-03 13:36:31 +0200
        thetext: 'just discussed: eelke will make a test script to test the existing code on all MEG types'
    attachment:
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "306"
        date: 2012-09-07 16:49:00 +0200
        delta_ts: 2012-09-07 16:49:52 +0200
        desc: bug cfg
        filename: layout_bug.mat
        type: application/octet-stream
        size: "17925"
        attacher:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        data: REMOVED
      - +@isobsolete: "0"
        +@ispatch: "0"
        +@isprivate: "0"
        attachid: "330"
        date: 2012-09-27 14:58:00 +0200
        delta_ts: 2012-09-27 14:58:05 +0200
        desc: weird bti layout
        filename: bti.png
        type: image/png
        size: "21373"
        attacher:
          +content: litvak.vladimir
          +@name: Vladimir Litvak
        data: REMOVED
