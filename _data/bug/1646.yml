+p_xml: 'version="1.0" encoding="UTF-8" standalone="yes" '
+directive: DOCTYPE bugzilla SYSTEM "http://bugzilla.fieldtriptoolbox.org/page.cgi?id=bugzilla.dtd"
bugzilla:
  +@version: 4.4.1
  +@urlbase: http://bugzilla.fieldtriptoolbox.org/
  +@maintainer: r.oostenveld@donders.ru.nl
  bug:
    bug_id: "1646"
    creation_ts: 2012-08-10 17:52:00 +0200
    short_desc: ft_prepare_mesh_new needs to be integrated with ft_prepare_mesh
    delta_ts: 2013-01-16 15:07:18 +0100
    reporter_accessible: "1"
    cclist_accessible: "1"
    classification_id: "1"
    classification: Unclassified
    product: FieldTrip
    component: forward
    version: unspecified
    rep_platform: PC
    op_sys: Windows
    bug_status: CLOSED
    resolution: FIXED
    see_also:
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=105
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=115
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=1651
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=222
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=937
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=964
      - http://bugzilla.fcdonders.nl/show_bug.cgi?id=997
    bug_file_loc:
    status_whiteboard:
    keywords:
    priority: P3
    bug_severity: normal
    target_milestone: '---'
    everconfirmed: "1"
    reporter:
      +content: lilla.magyari
      +@name: Lilla Magyari
    assigned_to:
      +content: johanna.zumer
      +@name: Johanna
    cc:
      - johanna.zumer
      - r.oostenveld
      - roemer.van.der.meij
    comment_sort_order: oldest_to_newest
    long_desc:
      - +@isprivate: "0"
        commentid: "6986"
        comment_count: "0"
        who:
          +content: lilla.magyari
          +@name: Lilla Magyari
        bug_when: 2012-08-10 17:52:07 +0200
        thetext: |-
          hi,

          there are two functions which are quite similar (but not the same):
          ft_prepare_mesh and ft_prepare_mesh_new. Am I right that this later one should be called ft_prepare_mesh and ft_prepare_mesh_new should not exist?

          I think the documentation of these functions should be also updated, because they refer to ft_prepare_bemmodel... etc. functions, instead of ft_prepare_headmodel.

          And what does cfg.sourceunit do? Because this function is also used for creating a (BEM) headmodel, therefore, the name sourceunit is confusing here. And it has to be specified explicitly, even if the input (for example, the segmented mri) has a unit field.

          Lilla
      - +@isprivate: "0"
        commentid: "6996"
        comment_count: "1"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-08-13 15:34:21 +0200
        thetext: "see \nhttp://fieldtrip.fcdonders.nl/development/fwdarch\nhttp://code.google.com/p/fieldtrip/source/browse/#svn%2Fbranches%2Fsurface"
      - +@isprivate: "0"
        commentid: "7641"
        comment_count: "2"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-27 14:10:22 +0200
        thetext: Johanna and I are going to work on it together.
      - +@isprivate: "0"
        commentid: "7646"
        comment_count: "3"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-27 17:40:31 +0200
        thetext: "how to deal with cfg.tissue?\n\nIf the input is an indexed representation and  cfg.tissue is equal to unique(mri.seg(:)) then there is no problem.\n\nIf the input is an indexed representation and cfg.tissue is empty, then cfg.tissue should be set to unique(mri.seg(:)) \n\nIf the input is a tpm representation then cfg.tissue should be a string pointing to the field."
      - +@isprivate: "0"
        commentid: "7652"
        comment_count: "4"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-28 11:55:08 +0200
        thetext: 'TODO: the test script for bug 937 needs to be revisited, it has some cases in it which are not desired any more. Furthermore, it calls ft_prepare_mesh_new rather than ft_prepare_mesh.'
      - +@isprivate: "0"
        commentid: "7656"
        comment_count: "5"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-09-28 12:55:48 +0200
        thetext: "manzana> svn commit \nSending        forward/ft_convert_units.m\nSending        forward/ft_headmodel_bemcp.m\nSending        ft_prepare_mesh.m\nDeleting       ft_prepare_mesh_new.m\nSending        private/prepare_mesh_segmentation.m\nDeleting       private/prepare_mesh_segmentation_new.m\nAdding         test/test_bug1646.m\nSending        utilities/ft_checkdata.m\nSending        utilities/ft_datatype.m\nSending        utilities/ft_datatype_segmentation.m\nTransmitting file data ........\nCommitted revision 6575."
      - +@isprivate: "0"
        commentid: "7665"
        comment_count: "6"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2012-09-28 18:06:39 +0200
        thetext: "Re: comment 4: bug 937 dealt with, aside from remaining question raised inside that bug.\n\nRe: comment 3: \n\"If the input is an indexed representation and  cfg.tissue is equal to\nunique(mri.seg(:)) then there is no problem.\"\n\nI think it's meant that if cfg.tissue=setdiff(unique(mri.seg(:)),0) then should work with indexed representation.\nTested/works now with seg5.\n\n\"If the input is an indexed representation and cfg.tissue is empty, then\ncfg.tissue should be set to unique(mri.seg(:))\"\n\ncfg.tissue empty because user-specified cfg.tissue=[], or because user did not specify cfg.tissue at all?\nIn current code: if basedonseg or basedonmri, then cfg.tissue is required field, but [] is allowed via ft_getopt(cfg,'tissue').\nCould we update so to remove ft_getopt(cfg,'tissue'), as it not needed, and then ft_checkconfig(cfg, 'required', {'tissue', 'numvertices'}) will crash if user doesn't at least make it empty input?\n\nRelated, I think it makes sense to move some of the extra checks on relating cfg.tissue and cfg.numvertices to each other, to within prepare_mesh_segmenatation, as they are only needed in there, and thus should be available for any other fcn calling prepare_mesh_segmentation.\n\n\"If the input is a tpm representation then cfg.tissue should be a string\npointing to the field.\"\n(will deal with this later...)"
      - +@isprivate: "0"
        commentid: "7733"
        comment_count: "7"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2012-10-02 10:49:09 +0200
        thetext: "Hi Robert, after the updates with convert_segmentation subfunctions yesterday, a few things were crashing in a new way.  I traced it to ft_datatype_segmentation \n\n    if probabilistic\n      fixsegmentation(segmentation, fn, 'probabilistic');\n    elseif indexed\n      fixsegmentation(segmentation, fn, 'indexed');\n    end\nshould instead be:\n    if probabilistic\n      segmentation = fixsegmentation(segmentation, fn, 'probabilistic');\n    elseif indexed\n      segmentation = fixsegmentation(segmentation, fn, 'indexed');\n    end\n\nfixed svn 6626."
      - +@isprivate: "0"
        commentid: "7735"
        comment_count: "8"
        who:
          +content: r.oostenveld
          +@name: Robert Oostenveld
        bug_when: 2012-10-02 11:01:07 +0200
        thetext: "(In reply to comment #7)\n\ni made the corresponding change to the parcellation version\n\nmanzana> svn commit \nSending        utilities/ft_datatype_parcellation.m\nTransmitting file data .\nCommitted revision 6627."
      - +@isprivate: "0"
        commentid: "7748"
        comment_count: "9"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2012-10-02 13:17:23 +0200
        thetext: "I resolved \n\"If the input is an indexed representation and cfg.tissue is empty, then\ncfg.tissue should be set to unique(mri.seg(:))\"\n\nby letting cfg.tissue=[] or no cfg.tissue specificiation both be ok for indexed representation.  \n\n\"If the input is a tpm representation then cfg.tissue should be a string\npointing to the field.\"\n\nThe one exception is when .gray, .white .csf exist and the user calls cfg.tissue='brain', then the code can handle this.\nOtherwise I have added an explanatory error message if the user gives a cfg.tissue='randomstring' that doesn't correspond to a tpm field in the segmentation.   And finally, a cfg.tissue=1 should be allowed for tpm, thus it need not be a string.  (but new error is given if cfg.tissue=4 and only 3 tpm's in the segmentation, for example).\n\nsvn commit 6630.\n\nclosing bug."
      - +@isprivate: "0"
        commentid: "7884"
        comment_count: "10"
        who:
          +content: roemer.van.der.meij
          +@name: Roemer van der Meij
        bug_when: 2012-10-10 15:31:09 +0200
        thetext: "Hi Johanna,\nI opened this bug again during the bug binge, because test_bug1646 fails on line 167, with the error being produced by ft_prepare_mesh on line 138. There's a call to checkconfig done there, which spouts out an error if cfg.tissue doesn't exist or has a different value. It's not given as input to the test script. If this is desired behaviour, could you make a try with a catch for the specific error message?\n(I cannot oversee the prepare_mesh stuff)\n\ntry \n   ft_prepare_mesh\ncatch err \n  if strcmp(err, 'The field cfg.tissue is required')\n    % succes\n  else\n    error('test doesn''t result in expected error message')\nend\n\n\nerr is automatically saved in workspace, or something similar, just found out :)"
      - +@isprivate: "0"
        commentid: "7935"
        comment_count: "11"
        who:
          +content: johanna.zumer
          +@name: Johanna
        bug_when: 2012-10-19 12:45:15 +0200
        thetext: "fixed ft_prepare_mesh.m, r6771.  \ntest_bug1646 now runs."
